<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='PHP', activeChapter='4.Programare orientata pe obiecte', activeLesson='3.Clase anonime'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Clase anonime</h1>
     <p class="paragraph">Clasele anonime sunt clase care nu au un nume. De obicei, aceste clase sunt utile dacă avem nevoie să creăm o dată un obiect al unei astfel de clase și nu vom mai folosi această clasă ulterior. De exemplu:</p>
     <div class="code-inline">
      <pre><code>$person&nbsp;=&nbsp;new&nbsp;class&nbsp;{};</code></pre>
     </div>
     <p class="paragraph">Pentru a defini o variabilă a unui clasă anonimă, la fel ca în cazul unei clase obișnuite, se folosește operatorul new, urmat de cuvântul cheie class și apoi de corpul clasei în acolade.</p>
     <p class="paragraph">Clasele anonime, la fel ca și clasele obișnuite, pot defini proprietăți și metode. De exemplu:</p>
     <div class="code-inline">
      <pre><code>$person&nbsp;=&nbsp;new&nbsp;class&nbsp;{<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;public&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;function&nbsp;sayHello(){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;"Hello!&lt;br&gt;";<br>&nbsp;&nbsp;&nbsp;}<br>};<br>$person-&gt;sayHello();<br>$person-&gt;name&nbsp;=&nbsp;"Sam";<br>echo&nbsp;"Name:&nbsp;"&nbsp;.&nbsp;$person-&gt;name&nbsp;.&nbsp;"&lt;br&gt;";</code></pre>
     </div>
     <p class="paragraph">Rezultatul va fi:</p>
     <div class="code-inline">
      <pre><code>Hello!<br>Name:&nbsp;Sam</code></pre>
     </div>
     <p class="paragraph">De asemenea, clasele anonime pot defini constructori:</p>
     <div class="code-inline">
      <pre><code>$person&nbsp;=&nbsp;new&nbsp;class("Bob")&nbsp;{<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;public&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;function&nbsp;__construct($name)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;name&nbsp;=&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;function&nbsp;sayHello(){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;"Hello!&lt;br&gt;";<br>&nbsp;&nbsp;&nbsp;}<br>};<br>echo&nbsp;"Hello,&nbsp;"&nbsp;.&nbsp;$person-&gt;name&nbsp;.&nbsp;"&lt;br&gt;";&nbsp;//&nbsp;Hello,&nbsp;Bob</code></pre>
     </div>
     <p class="paragraph">Apelul constructorului se face imediat după cuvântul cheie class și înainte de acolada deschisă: new class("Bob") {.</p>
     <p class="paragraph">În mod similar, putem defini proprietăți direct în constructor, reducând astfel definirea clasei:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>$person&nbsp;=&nbsp;new&nbsp;class("Bob",&nbsp;34)&nbsp;{<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;function&nbsp;__construct(public&nbsp;$name,&nbsp;public&nbsp;$age)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;name&nbsp;=&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;function&nbsp;displayInfo()<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;"Name:&nbsp;$this-&gt;name;&nbsp;Age:&nbsp;$this-&gt;age&lt;br&gt;";<br>&nbsp;&nbsp;&nbsp;}<br>};<br>$person-&gt;displayInfo();<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">Rezultatul va fi:</p>
     <div class="code-inline">
      <pre><code>Name:&nbsp;Bob;&nbsp;Age:&nbsp;34</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
