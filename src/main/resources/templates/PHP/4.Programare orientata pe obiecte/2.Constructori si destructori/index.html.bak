<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='PHP', activeChapter='4.Programare orientata pe obiecte', activeLesson='2.Constructori si destructori'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Constructori și destructori</h1>
     <p class="paragraph">Constructorii reprezintă metode speciale care se execută la crearea unui obiect și servesc pentru inițializarea inițială a proprietăților acestuia. Pentru a crea un constructor, trebuie să declarăm o funcție cu numele __construct (cu două liniuțe de subliniere înainte):</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>class&nbsp;Person<br>{<br>&nbsp;&nbsp;&nbsp;public&nbsp;$name,&nbsp;$age;<br>&nbsp;&nbsp;&nbsp;function&nbsp;__construct($name,&nbsp;$age)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;name&nbsp;=&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;age&nbsp;=&nbsp;$age;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;function&nbsp;displayInfo()<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;"Name:&nbsp;$this-&gt;name;&nbsp;Age:&nbsp;$this-&gt;age&lt;br&gt;";<br>&nbsp;&nbsp;&nbsp;}<br>}<br>$tom&nbsp;=&nbsp;new&nbsp;Person("Tom",&nbsp;36);<br>$tom&nbsp;-&gt;&nbsp;displayInfo();<br><br>$bob&nbsp;=&nbsp;new&nbsp;Person("Bob",&nbsp;41);<br>$bob&nbsp;-&gt;&nbsp;displayInfo();<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">Funcția constructorului, în acest caz, acceptă doi parametri. Valorile lor sunt transmise proprietăților clasei. Și acum, pentru a crea un obiect, trebuie să transmitem valori pentru parametrii corespunzători:</p>
     <div class="code-inline">
      <pre><code>$tom&nbsp;=&nbsp;new&nbsp;Person("Tom",&nbsp;36);</code></pre>
     </div>
     <p class="paragraph">Rezultatul în browser:</p>
     <div class="code-inline">
      <pre><code>Name:&nbsp;Tom;&nbsp;Age:&nbsp;36<br>Name:&nbsp;Bob;&nbsp;Age:&nbsp;41</code></pre>
     </div>
     <h2 class="subtitle">Parametri impliciți</h2>
     <p class="paragraph">Pentru a face constructorul mai flexibil, putem desemna unul sau mai mulți parametri ca opționali. Astfel, la crearea unui obiect, nu este obligatoriu să specificăm toți parametrii. De exemplu, modificăm constructorul astfel:</p>
     <div class="code-inline">
      <pre><code>function&nbsp;__construct($name="Tom",&nbsp;$age=36)<br>{<br>&nbsp;&nbsp;&nbsp;$this-&gt;name&nbsp;=&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;$this-&gt;age&nbsp;=&nbsp;$age;<br>}</code></pre>
     </div>
     <p class="paragraph">Astfel, dacă nu sunt specificați parametrii, vor fi utilizate valorile "Tom" și 36. Și acum putem crea un obiect Person în mai multe moduri:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>class&nbsp;Person<br>{<br>&nbsp;&nbsp;&nbsp;public&nbsp;$name,&nbsp;$age;<br>&nbsp;&nbsp;&nbsp;function&nbsp;__construct($name="Tom",&nbsp;$age=36)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;name&nbsp;=&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;age&nbsp;=&nbsp;$age;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;function&nbsp;displayInfo()<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;"Name:&nbsp;$this-&gt;name;&nbsp;Age:&nbsp;$this-&gt;age&lt;br&gt;";<br>&nbsp;&nbsp;&nbsp;}<br>}<br>$tom&nbsp;=&nbsp;new&nbsp;Person();<br>$tom&nbsp;-&gt;&nbsp;displayInfo();<br><br>$bob&nbsp;=&nbsp;new&nbsp;Person("Bob");<br>$bob&nbsp;-&gt;&nbsp;displayInfo();<br><br>$sam&nbsp;=&nbsp;new&nbsp;Person("Sam",&nbsp;29);<br>$sam&nbsp;-&gt;&nbsp;displayInfo();<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">Rezultatul în browser:</p>
     <div class="code-inline">
      <pre><code>Name:&nbsp;Tom;&nbsp;Age:&nbsp;36<br>Name:&nbsp;Bob;&nbsp;Age:&nbsp;36<br>Name:&nbsp;Sam;&nbsp;Age:&nbsp;29</code></pre>
     </div>
     <h2 class="subtitle">Declararea proprietăților prin constructor</h2>
     <p class="paragraph">Începând cu versiunea PHP 8, limbajul permite definirea proprietăților prin lista de parametri ai constructorului. Orice parametru al constructorului care are un modificator de acces, de exemplu, public, va reprezenta automat o nouă proprietate.</p>
     <p class="paragraph">De exemplu, definim proprietățile name și age direct prin parametrii constructorului:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>class&nbsp;Person<br>{<br>&nbsp;&nbsp;&nbsp;function&nbsp;__construct(public&nbsp;$name,&nbsp;public&nbsp;$age)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;name&nbsp;=&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;age&nbsp;=&nbsp;$age;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;function&nbsp;displayInfo()<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;"Name:&nbsp;$this-&gt;name;&nbsp;Age:&nbsp;$this-&gt;age&lt;br&gt;";<br>&nbsp;&nbsp;&nbsp;}<br>}<br>$tom&nbsp;=&nbsp;new&nbsp;Person("Tom",&nbsp;36);<br>$tom&nbsp;-&gt;&nbsp;displayInfo();<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">Deși, în acest caz, clasa nu definește explicit proprietățile name și age, deoarece în lista de parametri ai constructorului sunt specificați parametri cu aceste nume și cu modificator de acces (în acest caz public), clasa va crea automat aceste variabile.</p>
     <p class="paragraph">Putem combina ambele metode de declarare a variabilelor:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>class&nbsp;Person<br>{<br>&nbsp;&nbsp;&nbsp;public&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;function&nbsp;__construct($name,&nbsp;public&nbsp;$age)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;name&nbsp;=&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;age&nbsp;=&nbsp;$age;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;function&nbsp;displayInfo()<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;"Name:&nbsp;$this-&gt;name;&nbsp;Age:&nbsp;$this-&gt;age&lt;br&gt;";<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <p class="paragraph">La o astfel de declarare a proprietăților, putem transmite și valori implicite:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>class&nbsp;Person<br>{<br>&nbsp;&nbsp;&nbsp;public&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;function&nbsp;__construct($name&nbsp;=&nbsp;"Sam",&nbsp;public&nbsp;$age&nbsp;=&nbsp;33)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;name&nbsp;=&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;age&nbsp;=&nbsp;$age;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;function&nbsp;displayInfo()<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;"Name:&nbsp;$this-&gt;name;&nbsp;Age:&nbsp;$this-&gt;age&lt;br&gt;";<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <h2 class="subtitle">Destructori</h2>
     <p class="paragraph">Destructorii servesc pentru eliberarea resurselor utilizate de program - pentru eliberarea fișierelor deschise, conexiunilor deschise la baze de date etc. Destructorul unui obiect este apelat de către interpretul PHP după ce ultima referință la acel obiect este pierdută în program.</p>
     <p class="paragraph">Destructorul este definit folosind funcția __destruct (două liniuțe de subliniere înainte):</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>class&nbsp;Person<br>{<br>&nbsp;&nbsp;&nbsp;public&nbsp;$name,&nbsp;$age;<br>&nbsp;&nbsp;&nbsp;function&nbsp;__construct($name,&nbsp;$age)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;name&nbsp;=&nbsp;$name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;age&nbsp;=&nbsp;$age;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;function&nbsp;getInfo()<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;"Name:&nbsp;$this-&gt;name;&nbsp;Age:&nbsp;$this-&gt;age&nbsp;&lt;br&gt;";<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;function&nbsp;__destruct()<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;"Apelare&nbsp;destructor";<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <p class="paragraph">Funcția destructorului este definită fără parametri, iar când obiectul nu mai are referințe în program, acesta va fi distrus și va fi apelat destructorul.</p>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
