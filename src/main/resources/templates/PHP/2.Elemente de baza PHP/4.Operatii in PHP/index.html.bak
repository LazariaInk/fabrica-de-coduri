<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='PHP', activeChapter='2.Elemente de baza PHP', activeLesson='4.Operatii in PHP'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Operații în PHP</h1>
     <p class="paragraph">În PHP putem folosi diferiți operatori: aritmetici, logici etc. Să examinăm fiecare tip de operații.</p>
     <h2 class="subtitle">Operații aritmetice</h2>
     <ul class="enumeration">
      <li>+ (operație de adunare) De exemplu, $a + 5</li>
      <li>- (operație de scădere) De exemplu, $a - 5</li>
      <li>* (operație de înmulțire) De exemplu, $a * 5</li>
      <li>/ (operație de împărțire) De exemplu, $a / 5</li>
      <li>% (obținerea restului de la împărțire)</li>
     </ul>
     <p class="paragraph">De exemplu:</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;12;<br>echo&nbsp;$a&nbsp;%&nbsp;5;&nbsp;//&nbsp;egal&nbsp;2</code></pre>
     </div>
     <ul class="enumeration">
      <li>** (ridicare la putere) De exemplu, $a ** 2</li>
     </ul>
     <p class="paragraph">Exemple de operații:</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;8&nbsp;+&nbsp;2;&nbsp;//&nbsp;10,&nbsp;adunare<br>$a&nbsp;=&nbsp;8&nbsp;-&nbsp;2;&nbsp;//&nbsp;6,&nbsp;scădere<br>$a&nbsp;=&nbsp;8&nbsp;*&nbsp;2;&nbsp;//&nbsp;16,&nbsp;înmulțire<br>$a&nbsp;=&nbsp;8&nbsp;/&nbsp;2;&nbsp;//&nbsp;4,&nbsp;împărțire<br>$a&nbsp;=&nbsp;8&nbsp;%&nbsp;2;&nbsp;//&nbsp;0,&nbsp;împărțire&nbsp;pe&nbsp;modulo<br>$a&nbsp;=&nbsp;8&nbsp;**&nbsp;2;&nbsp;//&nbsp;64,&nbsp;ridicare&nbsp;la&nbsp;putere</code></pre>
     </div>
     <h2 class="subtitle">Increment și decrement</h2>
     <p class="paragraph">Trebuie menționat separat operațiile de increment și decrement, care sunt, de asemenea, operații aritmetice, dar sunt efectuate pe un singur operand.</p>
     <p class="paragraph">Increment - operația ++ mărește numărul cu unul. De exemplu, ++$a</p>
     <p class="paragraph">Există două tipuri de increment: increment prefixat (++$a) și postfixat ($a++). Este important să înțelegem diferența dintre aceste operații. Să analizăm mai întâi incrementul prefixat:</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;12;<br>$b&nbsp;=&nbsp;++$a;&nbsp;//&nbsp;$b&nbsp;egal&nbsp;13<br>echo&nbsp;"a&nbsp;=&nbsp;$a&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;$b";</code></pre>
     </div>
     <p class="paragraph">Rezultatul lucrării:</p>
     <div class="code-inline">
      <pre><code>a&nbsp;=&nbsp;13&nbsp;b&nbsp;=&nbsp;13</code></pre>
     </div>
     <p class="paragraph">Aici mai întâi valoarea variabilei $a se mărește cu unul, apoi valoarea sa este atribuită variabilei $b.</p>
     <p class="paragraph">Acum să vedem ce se întâmplă în cazul incrementului postfixat:</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;12;<br>$b&nbsp;=&nbsp;$a++;&nbsp;//&nbsp;$b&nbsp;egal&nbsp;12<br>echo&nbsp;"a&nbsp;=&nbsp;$a&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;$b";</code></pre>
     </div>
     <p class="paragraph">Rezultatul lucrării:</p>
     <div class="code-inline">
      <pre><code>a&nbsp;=&nbsp;13&nbsp;b&nbsp;=&nbsp;12</code></pre>
     </div>
     <p class="paragraph">Aici mai întâi valoarea variabilei $a este atribuită variabilei $b, iar apoi valoarea variabilei $a este mărită.</p>
     <p class="paragraph">Decrement - operația -- reprezintă scăderea valorii cu unul. De asemenea, există două tipuri: decrement prefixat și postfixat, și funcționează similar. De exemplu, decrementul prefixat:</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;12;<br>$b&nbsp;=&nbsp;--$a;&nbsp;//&nbsp;$b&nbsp;egal&nbsp;11<br>echo&nbsp;"a&nbsp;=&nbsp;$a&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;$b";</code></pre>
     </div>
     <p class="paragraph">Rezultatul lucrării:</p>
     <div class="code-inline">
      <pre><code>a&nbsp;=&nbsp;11&nbsp;b&nbsp;=&nbsp;11</code></pre>
     </div>
     <p class="paragraph">Mai întâi valoarea variabilei $a scade cu unul, iar apoi valoarea sa este atribuită variabilei $b.</p>
     <p class="paragraph">Decrementul postfixat:</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;12;<br>$b&nbsp;=&nbsp;$a--;&nbsp;//&nbsp;$b&nbsp;egal&nbsp;12<br>echo&nbsp;"a&nbsp;=&nbsp;$a&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;$b";</code></pre>
     </div>
     <p class="paragraph">Rezultatul lucrării:</p>
     <div class="code-inline">
      <pre><code>a&nbsp;=&nbsp;11&nbsp;b&nbsp;=&nbsp;12</code></pre>
     </div>
     <p class="paragraph">Aici mai întâi valoarea variabilei $a este atribuită variabilei $b și numai după aceasta scade cu unul.</p>
     <h2 class="subtitle">Concatenarea șirurilor</h2>
     <p class="paragraph">Pentru concatenarea șirurilor se folosește operatorul "punct". De exemplu, să unim câteva șiruri:</p>
     <div class="code-inline">
      <pre><code>$a="Salut,&nbsp;";<br>$b="&nbsp;lume";<br>echo&nbsp;$a&nbsp;.&nbsp;"&nbsp;"&nbsp;.&nbsp;$b&nbsp;.&nbsp;"!";&nbsp;&nbsp;&nbsp;//&nbsp;Salut&nbsp;lume!</code></pre>
     </div>
     <p class="paragraph">Dacă variabilele nu reprezintă șiruri, ci alte tipuri, de exemplu, numere, valorile lor se convertesc în șiruri și apoi se realizează operația de concatenare a șirurilor.</p>
     <h2 class="subtitle">Operații de comparare</h2>
     <p class="paragraph">Operațiile de comparare sunt de obicei folosite în construcții condiționate, când trebuie să comparăm două valori și, în funcție de rezultatul comparației, să executăm anumite acțiuni. Există următoarele operații de comparare.</p>
     <ul class="enumeration">
      <li>== Operatorul de egalitate compară două valori și, dacă sunt egale, returnează true, altfel returnează false: $a == 5</li>
      <li>=== Operatorul de identitate compară două valori și, dacă sunt egale, returnează true, altfel returnează false: $a === 5</li>
      <li>!= Compară două valori și, dacă nu sunt egale, returnează true, altfel returnează false: $a != 5</li>
      <li>!== Compară două valori și, dacă nu sunt egale, returnează true, altfel returnează false: $a !== 5</li>
      <li>&gt; Compară două valori și, dacă prima este mai mare decât a doua, returnează true, altfel returnează false: $a &gt; 5</li>
      <li>&lt; Compară două valori și, dacă prima este mai mică decât a doua, returnează true, altfel returnează false: $a &lt; 5</li>
      <li>&gt;= Compară două valori și, dacă prima este mai mare sau egală cu a doua, returnează true, altfel returnează false: $a &gt;= 5</li>
      <li>&lt;= Compară două valori și, dacă prima este mai mică sau egală cu a doua, returnează true, altfel returnează false: $a &lt;= 5</li>
     </ul>
     <h2 class="subtitle">Operatorul de egalitate și identitate</h2>
     <p class="paragraph">Ambii operatori compară două expresii și returnează true dacă expresiile sunt egale. Dar între ele există diferențe. Dacă în operația de egalitate participă două valori de tipuri diferite, acestea sunt convertite la unul - cel pe care interpretatorul îl consideră optim. De exemplu:</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;(2&nbsp;==&nbsp;"2");&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;true&nbsp;(valorile&nbsp;sunt&nbsp;egale)<br>$b&nbsp;=&nbsp;(2&nbsp;===&nbsp;"2");&nbsp;&nbsp;&nbsp;//&nbsp;false&nbsp;(valorile&nbsp;reprezintă&nbsp;tipuri&nbsp;diferite)</code></pre>
     </div>
     <p class="paragraph">Șirul "2" în esență reprezintă aceeași valoare ca și numărul 2, operatorul de comparare va returna true. Cu toate acestea, ele reprezintă tipuri diferite, astfel operatorul de identitate va returna false.</p>
     <p class="paragraph">Similar funcționează operatorii de inegalitate != și !==.</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;(2&nbsp;!=&nbsp;"2");&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;false,&nbsp;deoarece&nbsp;valorile&nbsp;sunt&nbsp;egale<br>$b&nbsp;=&nbsp;(2&nbsp;!==&nbsp;"2");&nbsp;&nbsp;&nbsp;//&nbsp;true,&nbsp;deoarece&nbsp;valorile&nbsp;reprezintă&nbsp;tipuri&nbsp;diferite</code></pre>
     </div>
     <h2 class="subtitle">Operatorul &lt;=&gt;</h2>
     <p class="paragraph">Trebuie menționat separat operatorul &lt;=&gt;. El compară două valori și returnează</p>
     <ul class="enumeration">
      <li>0, dacă ambele valori sunt egale</li>
      <li>1, dacă valoarea din stânga este mai mare decât valoarea din dreapta</li>
      <li>-1, dacă valoarea din stânga este mai mică decât valoarea din dreapta</li>
     </ul>
     <p class="paragraph">Aplicare:</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;2&nbsp;&lt;=&gt;&nbsp;2;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;(echivalent&nbsp;cu&nbsp;2&nbsp;==&nbsp;2)<br>$b&nbsp;=&nbsp;3&nbsp;&lt;=&gt;&nbsp;2;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;(echivalent&nbsp;cu&nbsp;3&nbsp;&gt;&nbsp;2)<br>$c&nbsp;=&nbsp;1&nbsp;&lt;=&gt;&nbsp;2;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;-1&nbsp;&nbsp;&nbsp;(echivalent&nbsp;cu&nbsp;1&nbsp;&lt;&nbsp;2)<br>echo&nbsp;"a=$a&nbsp;&nbsp;&nbsp;b=$b&nbsp;&nbsp;&nbsp;c=$c";&nbsp;&nbsp;//&nbsp;a=0&nbsp;&nbsp;b=1&nbsp;&nbsp;c=-1</code></pre>
     </div>
     <h2 class="subtitle">Operații logice</h2>
     <p class="paragraph">Operațiile logice sunt de obicei folosite pentru a combina rezultatele a două operații de comparare. De exemplu, trebuie să executăm o anumită acțiune dacă sunt adevărate mai multe condiții. Există următoarele operații logice:</p>
     <ul class="enumeration">
      <li>&amp;&amp; - Returnează true, dacă ambele operații de comparare returnează true, altfel returnează false: $a &amp;&amp; $b</li>
      <li>and - Similar operației &amp;&amp;: $a and $b</li>
      <li>|| - Returnează true, dacă cel puțin una dintre operațiile de comparare returnează true, altfel returnează false: $a || $b</li>
      <li>or - Similar operației ||: $a or $b</li>
      <li>! - Returnează true, dacă operația de comparare returnează false: !$a</li>
      <li>xor - Returnează true, dacă doar una dintre valori este egală cu true. Dacă ambele sunt egale cu true sau niciuna dintre ele nu este egală cu true, returnează false: $a xor $b</li>
     </ul>
     <p class="paragraph">Exemple de operații logice:</p>
     <div class="code-inline">
      <pre><code><br>$a&nbsp;=&nbsp;(true&nbsp;&amp;&amp;&nbsp;false);&nbsp;&nbsp;&nbsp;//&nbsp;false<br>//&nbsp;similar<br>$a&nbsp;=&nbsp;(true&nbsp;and&nbsp;false);&nbsp;&nbsp;//&nbsp;false<br><br>$b&nbsp;=&nbsp;(true&nbsp;||&nbsp;false);&nbsp;//&nbsp;true<br>//&nbsp;similar&nbsp;următoarei&nbsp;operații<br>$b&nbsp;=&nbsp;(true&nbsp;or&nbsp;false);&nbsp;//&nbsp;true<br><br>$c&nbsp;=&nbsp;!true;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;false</code></pre>
     </div>
     <p class="paragraph">Separat, exemple cu operația xor:</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;(true&nbsp;xor&nbsp;true);&nbsp;&nbsp;&nbsp;//&nbsp;false<br>$b&nbsp;=&nbsp;(false&nbsp;xor&nbsp;true);&nbsp;&nbsp;//&nbsp;true<br>$c&nbsp;=&nbsp;(false&nbsp;xor&nbsp;false);&nbsp;//&nbsp;false</code></pre>
     </div>
     <h2 class="subtitle">Operații pe biți.</h2>
     <p class="paragraph">Operațiile pe biți sunt efectuate pe anumite biți ai unui număr. Numerele sunt considerate în reprezentare binară, de exemplu, 2 în reprezentare binară este 010, iar numărul 7 este -111.</p>
     <ul class="enumeration">
      <li>&amp; (înmulțire logică)</li>
     </ul>
     <p class="paragraph">Înmulțirea se efectuează pe biți și dacă ambii operanzi au valori ale biților egale cu 1, operația returnează 1, altfel returnează 0. De exemplu:</p>
     <div class="code-inline">
      <pre><code><br>$a&nbsp;=&nbsp;4;&nbsp;//100<br>$b&nbsp;=&nbsp;5;&nbsp;//101<br>echo&nbsp;$a&nbsp;&amp;&nbsp;$b;&nbsp;//&nbsp;egal&nbsp;4&nbsp;-&nbsp;100</code></pre>
     </div>
     <p class="paragraph">Aici numărul 4 în sistem binar este egal cu 100, iar numărul 5 este egal cu 101. Înmulțind pe biți numerele obținem (1*1, 0*0, 0*1) = 100, adică numărul 4 în format zecimal.</p>
     <ul class="enumeration">
      <li>| (adunare logică)</li>
     </ul>
     <p class="paragraph">Similar cu înmulțirea logică, operația se efectuează pe biți, dar acum returnează 1 dacă cel puțin un bit din cei doi operanzi este 1. De exemplu:</p>
     <div class="code-inline">
      <pre><code><br>$a&nbsp;=&nbsp;4;&nbsp;//100<br>$b&nbsp;=&nbsp;5;&nbsp;//101<br>echo&nbsp;$a&nbsp;|&nbsp;$b;&nbsp;//&nbsp;egal&nbsp;5&nbsp;-&nbsp;101</code></pre>
     </div>
     <p class="paragraph">Adunând pe biți numerele obținem (1+1, 0+0, 0+1) = 101, adică numărul 5 în format zecimal.</p>
     <ul class="enumeration">
      <li>^ (operația XOR)</li>
     </ul>
     <p class="paragraph">Returnează 1 dacă ambii operanzi au valori diferite ale biților corespunzători. Dar dacă ambii operanzi au valori egale ale biților corespunzători, returnează 0. De exemplu:</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;5&nbsp;^&nbsp;4;&nbsp;//&nbsp;101^100=001&nbsp;-&nbsp;în&nbsp;sistemul&nbsp;zecimal&nbsp;1<br>$b&nbsp;=&nbsp;7&nbsp;^&nbsp;4;&nbsp;//&nbsp;111^100=011&nbsp;-&nbsp;în&nbsp;sistemul&nbsp;zecimal&nbsp;3</code></pre>
     </div>
     <p class="paragraph">Efectuăm operația pe biți 5 ^ 4 (în sistem binar este echivalent cu 101^100): (1^1, 0^0, 0^1) = 001. În cazul 1^1, valorile biților sunt egale, astfel returnează 0. În al doilea caz - 0^0 valorile sunt de asemenea egale, astfel returnează tot 0. În al treilea caz - 0^1 valorile sunt diferite, astfel returnează 1. În final obținem 001 sau numărul 1 în sistemul zecimal.</p>
     <ul class="enumeration">
      <li>~ (negație logică)</li>
     </ul>
     <p class="paragraph">Inversează toți biții: dacă valoarea unui bit este 1, devine 0 și invers.</p>
     <div class="code-inline">
      <pre><code><br>$a&nbsp;=&nbsp;4;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//00000100&nbsp;&nbsp;<br>$b&nbsp;=&nbsp;~$a;&nbsp;&nbsp;&nbsp;//11111011&nbsp;&nbsp;-5<br>echo&nbsp;$b;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;egal&nbsp;-5</code></pre>
     </div>
     <ul class="enumeration">
      <li>&lt;&lt;</li>
     </ul>
     <p class="paragraph">x&lt;&lt;y - deplasează numărul x la stânga cu y biți. De exemplu, 4&lt;&lt;1 deplasează numărul 4 (care în reprezentare binară este 100) cu un bit la stânga, rezultând 1000 sau numărul 8 în reprezentare zecimală</p>
     <ul class="enumeration">
      <li>&gt;&gt;</li>
     </ul>
     <p class="paragraph">x&gt;&gt;y - deplasează numărul x la dreapta cu y biți. De exemplu, 16&gt;&gt;1 deplasează numărul 16 (care în reprezentare binară este 10000) cu un bit la dreapta, rezultând 1000 sau numărul 8 în reprezentare zecimală</p>
     <h2 class="subtitle">Operații de atribuire</h2>
     <ul class="enumeration">
      <li>=</li>
     </ul>
     <p class="paragraph">Atribuie unei variabile o valoare specifică: $a = 5</p>
     <ul class="enumeration">
      <li>+=</li>
     </ul>
     <p class="paragraph">Adunare cu atribuirea rezultatului. De exemplu:</p>
     <div class="code-inline">
      <pre><code>$a=12;<br>$a&nbsp;+=&nbsp;5;<br>echo&nbsp;$a;&nbsp;//&nbsp;egal&nbsp;17</code></pre>
     </div>
     <ul class="enumeration">
      <li>-=</li>
     </ul>
     <p class="paragraph">Scădere cu atribuirea rezultatului. De exemplu:</p>
     <div class="code-inline">
      <pre><code><br>$a=12;<br>$a&nbsp;-=&nbsp;5;<br>echo&nbsp;$a;&nbsp;//&nbsp;egal&nbsp;7</code></pre>
     </div>
     <ul class="enumeration">
      <li>*=</li>
     </ul>
     <p class="paragraph">Înmulțire cu atribuirea rezultatului:</p>
     <div class="code-inline">
      <pre><code>$a=12;<br>$a&nbsp;*=&nbsp;5;<br>echo&nbsp;$a;&nbsp;//&nbsp;egal&nbsp;60<br>/=</code></pre>
     </div>
     <p class="paragraph">Împărțire cu atribuirea rezultatului:</p>
     <div class="code-inline">
      <pre><code>$a=12;<br>$a&nbsp;/=&nbsp;5;<br>echo&nbsp;$a;&nbsp;//&nbsp;egal&nbsp;2.4</code></pre>
     </div>
     <ul class="enumeration">
      <li>.=</li>
     </ul>
     <p class="paragraph">Concatenare de șiruri cu atribuirea rezultatului. Se aplică la două șiruri. Dacă variabilele stochează alte tipuri, de exemplu, numere, valorile lor se convertesc în șiruri și apoi se realizează operația:</p>
     <div class="code-inline">
      <pre><code>$a=12;<br>$a&nbsp;.=&nbsp;5;<br>echo&nbsp;$a;&nbsp;//&nbsp;egal&nbsp;125<br>//&nbsp;identic<br>$b="12";<br>$b&nbsp;.="5";&nbsp;//&nbsp;egal&nbsp;125</code></pre>
     </div>
     <ul class="enumeration">
      <li>%=</li>
     </ul>
     <p class="paragraph">Obținerea restului de la împărțire cu atribuirea rezultatului:</p>
     <div class="code-inline">
      <pre><code>$a=12;<br>$a&nbsp;%=&nbsp;5;<br>echo&nbsp;$a;&nbsp;//&nbsp;egal&nbsp;2</code></pre>
     </div>
     <ul class="enumeration">
      <li>**=</li>
     </ul>
     <p class="paragraph">Obținerea rezultatului ridicării la putere:</p>
     <div class="code-inline">
      <pre><code>$a=8;<br>$a&nbsp;**=&nbsp;2;<br>echo&nbsp;$a;&nbsp;//&nbsp;egal&nbsp;64&nbsp;(8&nbsp;la&nbsp;puterea&nbsp;2)</code></pre>
     </div>
     <ul class="enumeration">
      <li>&amp;=</li>
     </ul>
     <p class="paragraph">Obținerea rezultatului operației de înmulțire logică:</p>
     <div class="code-inline">
      <pre><code>$a=5;&nbsp;$a&nbsp;&amp;=&nbsp;4;&nbsp;//&nbsp;101&amp;100=100&nbsp;-&nbsp;4</code></pre>
     </div>
     <ul class="enumeration">
      <li>|=</li>
     </ul>
     <p class="paragraph">Obținerea rezultatului operației de adunare logică:</p>
     <div class="code-inline">
      <pre><code>$a=5;&nbsp;$a&nbsp;|=&nbsp;4;&nbsp;//&nbsp;101|100=101&nbsp;-&nbsp;5</code></pre>
     </div>
     <ul class="enumeration">
      <li>^=</li>
     </ul>
     <p class="paragraph">Obținerea rezultatului operației XOR:</p>
     <div class="code-inline">
      <pre><code>$a=5;&nbsp;$a&nbsp;^=&nbsp;4;&nbsp;//&nbsp;101^100=001&nbsp;-&nbsp;1</code></pre>
     </div>
     <ul class="enumeration">
      <li>&lt;&lt;=</li>
     </ul>
     <p class="paragraph">Obținerea rezultatului operației de deplasare la stânga:</p>
     <div class="code-inline">
      <pre><code>$a=8;&nbsp;$a&nbsp;&lt;&lt;=&nbsp;1;&nbsp;//&nbsp;1000&nbsp;&lt;&lt;&nbsp;1&nbsp;=&nbsp;10000&nbsp;-&nbsp;16</code></pre>
     </div>
     <ul class="enumeration">
      <li>&gt;&gt;=</li>
     </ul>
     <p class="paragraph">Obținerea rezultatului operației de deplasare la dreapta:</p>
     <div class="code-inline">
      <pre><code>$a=8;&nbsp;$a&nbsp;&gt;&gt;=&nbsp;1;&nbsp;//&nbsp;1000&nbsp;&gt;&gt;&nbsp;1&nbsp;=&nbsp;100&nbsp;-&nbsp;4</code></pre>
     </div>
     <h2 class="subtitle">Prioritatea operațiilor</h2>
     <p class="paragraph">Dacă o expresie conține mai multe operații diferite, atunci la executarea expresiei se ia în considerare prioritatea operațiilor. Mai întâi se execută operațiile cu prioritate mai mare și la final cele cu prioritate mai mică.</p>
     <p class="paragraph">Prioritatea operațiilor poate fi descrisă prin următorul tabel:</p>
     <div class="image-container">
      <img th:src="@{/images/PHP/2.Elemente%20de%20baza%20PHP/4.Operatii%20in%20PHP/images/image1.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">Cu cât operatorul este mai sus în acest tabel, cu atât are prioritate mai mare. De exemplu:</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;10&nbsp;+&nbsp;5&nbsp;*&nbsp;2;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;20</code></pre>
     </div>
     <p class="paragraph">Operația de înmulțire are prioritate mai mare decât adunarea. De aceea mai întâi se execută subexpresia 5 * 2</p>
     <p class="paragraph">Parantezele cresc prioritatea operației folosite în expresie.</p>
     <div class="code-inline">
      <pre><code>$a&nbsp;=&nbsp;(10&nbsp;+&nbsp;5)&nbsp;*&nbsp;2;&nbsp;&nbsp;//&nbsp;30</code></pre>
     </div>
     <p class="paragraph">În acest caz, mai întâi se execută subexpresia 10 + 5 și abia apoi înmulțirea.</p>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
