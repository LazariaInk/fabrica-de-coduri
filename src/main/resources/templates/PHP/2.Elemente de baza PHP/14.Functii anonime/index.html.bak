<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='PHP', activeChapter='2.Elemente de baza PHP', activeLesson='14.Functii anonime'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Funcții anonime</h1>
     <p class="paragraph">Funcțiile anonime permit transmiterea altor funcții ca parametri funcțiilor sau atribuirea acestora unor variabile.</p>
     <p class="paragraph">O funcție anonimă este definită ca o funcție obișnuită, cu excepția faptului că nu are un nume. De exemplu:</p>
     <div class="code-inline">
      <pre><code>$hello&nbsp;=&nbsp;function($name)&nbsp;{<br>&nbsp;&nbsp;&nbsp;echo&nbsp;"&lt;h2&gt;Hello&nbsp;$name&lt;/h2&gt;";<br>};</code></pre>
     </div>
     <p class="paragraph">Aici, variabilei $hello i se atribuie o funcție anonimă. Această funcție este definită cu ajutorul cuvântului cheie function. De asemenea, acceptă parametri - în acest caz, parametrul $name. Și conține un bloc de instrucțiuni.</p>
     <p class="paragraph">Pentru a apela o astfel de funcție, se folosește numele variabilei care o reprezintă:</p>
     <div class="code-inline">
      <pre><code>$hello("Tom");</code></pre>
     </div>
     <p class="paragraph">Practic, o astfel de variabilă este folosită ca o funcție obișnuită.</p>
     <p class="paragraph">Codul complet:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>$hello&nbsp;=&nbsp;function($name)&nbsp;{<br>&nbsp;&nbsp;&nbsp;echo&nbsp;"&lt;h2&gt;Hello&nbsp;$name&lt;/h2&gt;";<br>};<br><br>$hello("Tom");<br>$hello("Bob");<br>?&gt;</code></pre>
     </div>
     <div class="image-container">
      <img th:src="@{/images/PHP/2.Elemente%20de%20baza%20PHP/14.Functii%20anonime/images/image1.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">Funcțiile anonime pot returna și valori:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>$sum&nbsp;=&nbsp;function($a,&nbsp;$b)&nbsp;{<br>&nbsp;&nbsp;&nbsp;return&nbsp;$a&nbsp;+&nbsp;$b;<br>};<br><br>$number&nbsp;=&nbsp;$sum(5,&nbsp;11);&nbsp;&nbsp;//&nbsp;16<br>echo&nbsp;$number;<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">Un caz comun de utilizare a funcțiilor anonime este transmiterea acestora ca parametri altor funcții. Astfel de funcții anonime sunt denumite funcții de callback. Să analizăm un exemplu simplu:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>function&nbsp;welcome($message)&nbsp;{<br>&nbsp;&nbsp;&nbsp;$message();<br>}<br><br>welcome(function()&nbsp;{<br>&nbsp;&nbsp;&nbsp;echo&nbsp;"Hello!";<br>});<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">În acest caz, funcția welcome() are un parametru $message, care este apelat ca o funcție în interiorul funcției $message().</p>
     <p class="paragraph">La apelul funcției welcome(), parametrului $message i se transmite o funcție anonimă care afișează șirul "Hello!". În final, la apelul:</p>
     <div class="code-inline">
      <pre><code>$message();</code></pre>
     </div>
     <p class="paragraph">Se va executa funcția:</p>
     <div class="code-inline">
      <pre><code>function()&nbsp;{<br>&nbsp;&nbsp;&nbsp;echo&nbsp;"Hello!";<br>}</code></pre>
     </div>
     <p class="paragraph">Astfel, putem transmite funcții anonime diferite aceleiași funcții:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>function&nbsp;welcome($message)&nbsp;{<br>&nbsp;&nbsp;&nbsp;$message();<br>}<br><br>$goodMorning&nbsp;=&nbsp;function()&nbsp;{&nbsp;echo&nbsp;"&lt;h3&gt;Good&nbsp;Morning&lt;/h3&gt;";&nbsp;};<br>$goodEvening&nbsp;=&nbsp;function()&nbsp;{&nbsp;echo&nbsp;"&lt;h3&gt;Good&nbsp;Evening&lt;/h3&gt;";&nbsp;};<br><br>welcome($goodMorning);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Good&nbsp;Morning<br>welcome($goodEvening);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Good&nbsp;Evening<br>welcome(function(){&nbsp;echo&nbsp;"&lt;h3&gt;Hello&lt;/h3&gt;";&nbsp;});&nbsp;//&nbsp;Hello<br>?&gt;</code></pre>
     </div>
     <div class="image-container">
      <img th:src="@{/images/PHP/2.Elemente%20de%20baza%20PHP/14.Functii%20anonime/images/image2.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">Utilitatea transmiterii funcțiilor anonime ca parametri constă în faptul că putem defini o funcție, dar la momentul definirii nu știm exact ce acțiuni va executa la apelare sau putem face logica funcției mai flexibilă. De exemplu, să presupunem că trebuie să definim o funcție care afișează suma elementelor unui array:</p>
     <div class="code-inline">
      <pre><code>function&nbsp;sum($numbers)&nbsp;{<br>&nbsp;&nbsp;&nbsp;$result&nbsp;=&nbsp;0;<br>&nbsp;&nbsp;&nbsp;foreach($numbers&nbsp;as&nbsp;$number)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;+=&nbsp;$number;<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;return&nbsp;$result;<br>}<br><br>$myNumbers&nbsp;=&nbsp;[-2,&nbsp;-1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4,&nbsp;5];<br>$numbersSum&nbsp;=&nbsp;sum($myNumbers);<br>echo&nbsp;$numbersSum;&nbsp;&nbsp;//&nbsp;12</code></pre>
     </div>
     <p class="paragraph">Dar să mergem mai departe: să presupunem că dorim ca funcția să calculeze suma doar a numerelor care îndeplinesc o anumită condiție, de exemplu, doar a numerelor pozitive sau doar a numerelor pare.</p>
     <p class="paragraph">Dar la momentul definirii funcției, nu știm ce condiție vom dori să folosim în viitor. În acest caz, putem folosi funcții anonime:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>function&nbsp;sum($numbers,&nbsp;$condition)&nbsp;{<br>&nbsp;&nbsp;&nbsp;$result&nbsp;=&nbsp;0;<br>&nbsp;&nbsp;&nbsp;foreach($numbers&nbsp;as&nbsp;$number)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($condition($number))&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;+=&nbsp;$number;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;return&nbsp;$result;<br>}<br><br>//&nbsp;pentru&nbsp;numere&nbsp;pare<br>$isEvenNumber&nbsp;=&nbsp;function($n)&nbsp;{&nbsp;return&nbsp;$n&nbsp;%&nbsp;2&nbsp;===&nbsp;0;&nbsp;};<br>//&nbsp;pentru&nbsp;numere&nbsp;pozitive<br>$isPositiveNumber&nbsp;=&nbsp;function($n)&nbsp;{&nbsp;return&nbsp;$n&nbsp;&gt;&nbsp;0;&nbsp;};<br><br>$myNumbers&nbsp;=&nbsp;[-2,&nbsp;-1,&nbsp;0,&nbsp;1,&nbsp;2,&nbsp;3,&nbsp;4,&nbsp;5];<br>$positiveSum&nbsp;=&nbsp;sum($myNumbers,&nbsp;$isPositiveNumber);<br>$evenSum&nbsp;=&nbsp;sum($myNumbers,&nbsp;$isEvenNumber);<br>echo&nbsp;"Suma&nbsp;numerelor&nbsp;pozitive:&nbsp;$positiveSum&nbsp;&lt;br&nbsp;/&gt;&nbsp;Suma&nbsp;numerelor&nbsp;pare:&nbsp;$evenSum";<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">Rezultatul scriptului:</p>
     <div class="image-container">
      <img th:src="@{/images/PHP/2.Elemente%20de%20baza%20PHP/14.Functii%20anonime/images/image3.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">Aici, funcția sum() acceptă ca al doilea parametru - $condition - o altă funcție. În buclă, la parcurgerea array-ului, verificăm cu ajutorul acestei funcții dacă un element al array-ului îndeplinește condiția:</p>
     <div class="code-inline">
      <pre><code>if&nbsp;($condition($number))</code></pre>
     </div>
     <p class="paragraph">În acest moment, nu știm ce condiție va fi, cum va funcționa exact funcția $condition. Știm doar că primește un număr și returnează true dacă numărul îndeplinește condiția sau false dacă nu îndeplinește.</p>
     <p class="paragraph">Dacă numărul îndeplinește condiția, îl adăugăm la rezultatul total:</p>
     <div class="code-inline">
      <pre><code>$result&nbsp;+=&nbsp;$number;</code></pre>
     </div>
     <p class="paragraph">La apelul funcției sum(), se transmit funcții anonime specifice ca parametru $condition. De exemplu, funcția care determină dacă un număr este par:</p>
     <div class="code-inline">
      <pre><code>$isEvenNumber&nbsp;=&nbsp;function($n)&nbsp;{&nbsp;return&nbsp;$n&nbsp;%&nbsp;2&nbsp;===&nbsp;0;&nbsp;};</code></pre>
     </div>
     <p class="paragraph">Logica funcției este simplă: dacă restul împărțirii numărului la 2 este 0, numărul este par și funcția returnează true.</p>
     <p class="paragraph">Apoi, transmitem această funcție:</p>
     <div class="code-inline">
      <pre><code>$evenSum&nbsp;=&nbsp;sum($myNumbers,&nbsp;$isEvenNumber);</code></pre>
     </div>
     <p class="paragraph">În final, la apelul if ($condition($number)), se va executa efectiv funcția $isEvenNumber().</p>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
