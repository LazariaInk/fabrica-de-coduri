<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='PHP', activeChapter='2.Elemente de baza PHP', activeLesson='22.Operatii cu array-uri'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Operații cu array-uri</h1>
     <h2 class="subtitle">Funcția is_array</h2>
     <p class="paragraph">Funcția is_array() verifică dacă o variabilă este un array și, dacă este, returnează true, altfel returnează false. De exemplu:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>$users&nbsp;=&nbsp;["Tom",&nbsp;"Bob",&nbsp;"Sam"];<br>$isArray&nbsp;=&nbsp;is_array($users);<br>echo&nbsp;($isArray==true)?"este&nbsp;un&nbsp;array":"nu&nbsp;este&nbsp;un&nbsp;array";<br>?&gt;</code></pre>
     </div>
     <h2 class="subtitle">Funcțiile count / sizeof</h2>
     <p class="paragraph">Funcțiile count() și sizeof() obțin numărul de elemente dintr-un array:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>$users&nbsp;=&nbsp;["Tom",&nbsp;"Bob",&nbsp;"Sam"];<br>$number&nbsp;=&nbsp;count($users);<br>//&nbsp;același&nbsp;lucru&nbsp;cu<br>//&nbsp;$number&nbsp;=&nbsp;sizeof($users);<br>echo&nbsp;"Array-ul&nbsp;users&nbsp;are&nbsp;$number&nbsp;elemente";<br>?&gt;</code></pre>
     </div>
     <h2 class="subtitle">Funcția shuffle</h2>
     <p class="paragraph">Funcția shuffle amestecă elementele array-ului în mod aleatoriu:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>$users&nbsp;=&nbsp;["Tom",&nbsp;"Bob",&nbsp;"Sam",&nbsp;"Alice"];<br>shuffle($users);<br>print_r($users);<br>//&nbsp;un&nbsp;exemplu&nbsp;de&nbsp;rezultat&nbsp;posibil<br>//&nbsp;Array&nbsp;(&nbsp;[0]&nbsp;=&gt;&nbsp;Bob&nbsp;[1]&nbsp;=&gt;&nbsp;Tom&nbsp;[2]&nbsp;=&gt;&nbsp;Alice&nbsp;[3]&nbsp;=&gt;&nbsp;Sam&nbsp;)<br>?&gt;</code></pre>
     </div>
     <h2 class="subtitle">Funcția compact.</h2>
     <p class="paragraph">Funcția compact permite crearea unui array asociativ dintr-un set de variabile, unde cheile vor fi numele variabilelor:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>$model&nbsp;=&nbsp;"Apple&nbsp;II";<br>$producer&nbsp;=&nbsp;"Apple";<br>$year&nbsp;=&nbsp;1978;<br><br>$data&nbsp;=&nbsp;compact("model",&nbsp;"producer",&nbsp;"year");<br>print_r($data);<br>//&nbsp;rezultatul&nbsp;va&nbsp;fi<br>//&nbsp;Array&nbsp;(&nbsp;[model]&nbsp;=&gt;&nbsp;Apple&nbsp;II&nbsp;[producer]&nbsp;=&gt;&nbsp;Apple&nbsp;[year]&nbsp;=&gt;&nbsp;1978&nbsp;)<br>?&gt;</code></pre>
     </div>
     <h2 class="subtitle">Sortarea array-urilor</h2>
     <p class="paragraph">În PHP există două tipuri de sortare: sortarea șirurilor în ordine alfabetică și sortarea numerelor în ordine crescătoare/descrescătoare.</p>
     <p class="paragraph">Dacă valorile sortate sunt șiruri, acestea vor fi sortate în ordine alfabetică; dacă sunt numere, acestea vor fi sortate în ordine crescătoare. PHP alege automat tipul de sortare.</p>
     <p class="paragraph">Pentru sortarea în ordine crescătoare se folosește funcția asort:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>$users&nbsp;=&nbsp;["Tom",&nbsp;"Bob",&nbsp;"Sam",&nbsp;"Alice"];<br>asort($users);<br>print_r($users);<br>//&nbsp;rezultatul&nbsp;sortat<br>//&nbsp;Array&nbsp;(&nbsp;[3]&nbsp;=&gt;&nbsp;Alice&nbsp;[1]&nbsp;=&gt;&nbsp;Bob&nbsp;[2]&nbsp;=&gt;&nbsp;Sam&nbsp;[0]&nbsp;=&gt;&nbsp;Tom&nbsp;)<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">Funcția asort sortează array-ul pe baza valorilor elementelor. De asemenea, cu un parametru suplimentar, putem specifica tipul de sortare:</p>
     <ul class="enumeration">
      <li>SORT_REGULAR: sortare automată</li>
      <li>SORT_NUMERIC: sortare numerică</li>
      <li>SORT_STRING: sortare alfabetică</li>
     </ul>
     <p class="paragraph">Indicăm tipul de sortare:</p>
     <div class="code-inline">
      <pre><code>asort($users,&nbsp;SORT_STRING);</code></pre>
     </div>
     <p class="paragraph">Pentru sortarea array-ului în ordine descrescătoare se folosește funcția arsort:</p>
     <div class="code-inline">
      <pre><code>arsort($users);</code></pre>
     </div>
     <h2 class="subtitle">Sortarea pe baza cheilor</h2>
     <p class="paragraph">Funcția asort efectuează sortarea pe baza valorilor elementelor, dar există și sortarea pe baza cheilor, reprezentată de funcția ksort:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>$states&nbsp;=&nbsp;["Spain"&nbsp;=&gt;&nbsp;"Madrid",&nbsp;"France"&nbsp;=&gt;&nbsp;"Paris",&nbsp;"Germany"&nbsp;=&gt;&nbsp;"Berlin"];<br>asort($states);<br>print_r($states);<br>//&nbsp;array-ul&nbsp;după&nbsp;asort&nbsp;-&nbsp;sortare&nbsp;pe&nbsp;baza&nbsp;valorilor<br>//&nbsp;Array&nbsp;(&nbsp;[Germany]&nbsp;=&gt;&nbsp;Berlin&nbsp;[Spain]&nbsp;=&gt;&nbsp;Madrid&nbsp;[France]&nbsp;=&gt;&nbsp;Paris&nbsp;)<br><br>ksort($states);<br>print_r($states);<br>//&nbsp;array-ul&nbsp;după&nbsp;ksort&nbsp;-&nbsp;sortare&nbsp;pe&nbsp;baza&nbsp;cheilor<br>//&nbsp;Array&nbsp;(&nbsp;[France]&nbsp;=&gt;&nbsp;Paris&nbsp;[Germany]&nbsp;=&gt;&nbsp;Berlin&nbsp;[Spain]&nbsp;=&gt;&nbsp;Madrid&nbsp;)<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">Pentru sortarea pe baza cheilor în ordine descrescătoare se folosește funcția krsort:</p>
     <div class="code-inline">
      <pre><code>krsort($states);</code></pre>
     </div>
     <h2 class="subtitle">Sortarea naturală</h2>
     <p class="paragraph">Deși funcțiile de sortare descrise mai sus funcționează bine, ele pot avea limitări. De exemplu, să sortăm următorul array:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>$os&nbsp;=&nbsp;["Windows&nbsp;7",&nbsp;"Windows&nbsp;8",&nbsp;"Windows&nbsp;10"];<br>asort($os);<br>print_r($os);<br>//&nbsp;rezultatul<br>//&nbsp;Array&nbsp;(&nbsp;[2]&nbsp;=&gt;&nbsp;Windows&nbsp;10&nbsp;[0]&nbsp;=&gt;&nbsp;Windows&nbsp;7&nbsp;[1]&nbsp;=&gt;&nbsp;Windows&nbsp;8&nbsp;)<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">Cum valorile sunt șiruri, PHP le sortează în ordine alfabetică, ceea ce nu ține cont de numere și case-sensitive. Pentru a rezolva această problemă, PHP oferă funcția natsort(), care efectuează sortarea naturală:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>$os&nbsp;=&nbsp;["Windows&nbsp;7",&nbsp;"Windows&nbsp;8",&nbsp;"Windows&nbsp;10"];<br>natsort($os);<br>print_r($os);<br>//&nbsp;rezultatul<br>//&nbsp;Array&nbsp;(&nbsp;[0]&nbsp;=&gt;&nbsp;Windows&nbsp;7&nbsp;[1]&nbsp;=&gt;&nbsp;Windows&nbsp;8&nbsp;[2]&nbsp;=&gt;&nbsp;Windows&nbsp;10&nbsp;)<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">Dacă dorim ca sortarea să nu fie case-sensitive, putem folosi funcția natcasesort():</p>
     <div class="code-inline">
      <pre><code>natcasesort($os);</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
