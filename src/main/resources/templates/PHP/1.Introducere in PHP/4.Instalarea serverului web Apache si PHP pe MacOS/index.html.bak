<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4253419731329045"
            crossorigin="anonymous"></script>


  <link rel="canonical" th:href="${canonicalUrl}" />

    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='PHP', activeChapter='1.Introducere in PHP', activeLesson='4.Instalarea serverului web Apache si PHP pe MacOS'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Instalarea serverului web Apache și PHP pe MacOS</h1>
     <p class="paragraph">Instalarea serverului web Apache și PHP pe Mac OS diferă oarecum de procesul de instalare pe Windows. În primul rând, trebuie menționat că Mac OS are deja Apache integrat. Totuși, începând cu versiunea macOS Monterey, PHP a fost eliminat din sistemul de operare, fiind instalat implicit în versiunile anterioare.</p>
     <p class="paragraph">În plus, configurarea serverului web integrat poate fi complicată, iar unele pachete pot lipsi. În acest caz, este mai convenabil să utilizăm managerul de pachete Homebrew, care facilitează considerabil instalarea și configurarea tuturor componentelor necesare. Așadar, vom analiza instalarea și configurarea Apache și PHP folosind Homebrew.</p>
     <p class="paragraph">Mai întâi, trebuie să instalăm managerul de pachete Homebrew prin terminal, utilizând comanda:</p>
     <div class="code-inline">
      <pre><code>/bin/bash&nbsp;-c&nbsp;"$(curl&nbsp;-fsSL&nbsp;https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"</code></pre>
     </div>
     <p class="paragraph">Pentru a ne asigura că Homebrew este instalat, putem verifica versiunea acestuia cu următoarea comandă:</p>
     <div class="code-inline">
      <pre><code>brew&nbsp;--version</code></pre>
     </div>
     <p class="paragraph">Terminalul ar trebui să afișeze ceva de genul:</p>
     <div class="code-inline">
      <pre><code>Homebrew&nbsp;3.3.1&nbsp;Homebrew/homebrew-core&nbsp;(git&nbsp;revision&nbsp;1362c572e16;&nbsp;last&nbsp;commit&nbsp;2021-10-29)</code></pre>
     </div>
     <p class="paragraph">Apoi instalăm PHP cu următoarea comandă:</p>
     <div class="code-inline">
      <pre><code>brew&nbsp;install&nbsp;php</code></pre>
     </div>
     <p class="paragraph">Instalăm serverul web Apache cu următoarea comandă:</p>
     <div class="code-inline">
      <pre><code>brew&nbsp;install&nbsp;httpd</code></pre>
     </div>
     <p class="paragraph">După instalarea serverului web Apache, verificăm funcționalitatea acestuia. Îl pornim cu următoarea comandă:</p>
     <div class="code-inline">
      <pre><code>brew&nbsp;services&nbsp;start&nbsp;httpd</code></pre>
     </div>
     <p class="paragraph">Dacă serverul web pornește cu succes, putem accesa adresa http://localhost:8080 în browser. Browserul ar trebui să afișeze mesajul "It works!".</p>
     <div class="image-container">
      <img th:src="@{/images/PHP/1.Introducere%20in%20PHP/4.Instalarea%20serverului%20web%20Apache%20si%20PHP%20pe%20MacOS/images/image1.png}" alt="" class="responsive-image">
     </div>
     <h2 class="subtitle">Configurarea Apache</h2>
     <p class="paragraph">Acum configurăm Apache. Trebuie să modificăm fișierul de configurare al serverului web. Locația fișierului de configurare diferă în funcție de arhitectura Mac:</p>
     <ul class="enumeration">
      <li>Pentru arhitectura Intel: /usr/local/etc/httpd/httpd.conf</li>
      <li>Pentru arhitectura Apple M1: /opt/homebrew/etc/httpd/httpd.conf</li>
     </ul>
     <p class="paragraph">Pentru a modifica fișierul, vom folosi un editor de text. Putem utiliza editorul de text integrat, cum ar fi TextEdit.</p>
     <p class="paragraph">Dacă arhitectura este Intel, introducem în terminal următoarea comandă:</p>
     <div class="code-inline">
      <pre><code>open&nbsp;-e&nbsp;/usr/local/etc/httpd/httpd.conf</code></pre>
     </div>
     <div class="image-container">
      <img th:src="@{/images/PHP/1.Introducere%20in%20PHP/4.Instalarea%20serverului%20web%20Apache%20si%20PHP%20pe%20MacOS/images/image2.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">Dacă arhitectura este Apple M1, introducem în terminal următoarea comandă:</p>
     <div class="code-inline">
      <pre><code>open&nbsp;-e&nbsp;/opt/homebrew/etc/httpd/httpd.conf</code></pre>
     </div>
     <p class="paragraph">Mai întâi, modificăm portul - implicit este 8080. Găsim următoarea linie:</p>
     <div class="code-inline">
      <pre><code>Listen&nbsp;8080</code></pre>
     </div>
     <p class="paragraph">Parametrul Listen indică portul la care serverul web va asculta. Îl înlocuim cu următoarea linie:</p>
     <div class="code-inline">
      <pre><code>Listen&nbsp;80</code></pre>
     </div>
     <p class="paragraph">Apoi configurăm folderul pentru fișierele serverului web. Implicit, acesta este folderul "/usr/local/var/www". Îl modificăm.</p>
     <p class="paragraph">Creăm în folderul utilizatorului curent un nou folder, pe care îl numim localhost. De exemplu, dacă utilizatorul meu se numește fdc, folderul documentelor serverului web va avea calea Users/fdc/localhost. Setăm acest folder ca director pentru fișierele serverului web.</p>
     <p class="paragraph">Important: folderul localhost trebuie să fie deschis pentru citire și scriere, altfel Apache nu va putea lucra cu el. Putem deschide accesul la folder din proprietățile acestuia.</p>
     <p class="paragraph">Dacă arhitectura este Intel, găsim în fișier următoarele linii:</p>
     <div class="code-inline">
      <pre><code>DocumentRoot&nbsp;"/usr/local/var/www"<br>&lt;Directory&nbsp;"/usr/local/var/www"&gt;</code></pre>
     </div>
     <p class="paragraph">Dacă arhitectura este Apple M1, găsim în fișier următoarele linii:</p>
     <div class="code-inline">
      <pre><code>DocumentRoot&nbsp;"/opt/homebrew/var/www"<br>&lt;Directory&nbsp;"/opt/homebrew/var/www"&gt;</code></pre>
     </div>
     <p class="paragraph">Parametrii DocumentRoot și Directory indică directorul fișierelor serverului web. Îi modificăm, specificând directorul creat de noi:</p>
     <div class="code-inline">
      <pre><code>DocumentRoot&nbsp;"/Users/fdc/localhost"<br>&lt;Directory&nbsp;"/Users/fdc/localhost"&gt;</code></pre>
     </div>
     <p class="paragraph">Reamintesc că în loc de "fdc" va fi numele utilizatorului curent.</p>
     <p class="paragraph">Apoi setăm numele serverului. Găsim următoarea linie:</p>
     <div class="code-inline">
      <pre><code>#ServerName&nbsp;www.example.com:8080</code></pre>
     </div>
     <p class="paragraph">O înlocuim cu următoarea linie:</p>
     <div class="code-inline">
      <pre><code>ServerName&nbsp;localhost</code></pre>
     </div>
     <p class="paragraph">Modificăm căile fișierelor în care se înregistrează erorile sau vizitele pe site.</p>
     <p class="paragraph">Dacă arhitectura este Intel, găsim linia:</p>
     <div class="code-inline">
      <pre><code>ErrorLog&nbsp;"/usr/local/var/log/httpd/error_log"</code></pre>
     </div>
     <p class="paragraph">Dacă arhitectura este Apple M1, găsim linia:</p>
     <div class="code-inline">
      <pre><code>ErrorLog&nbsp;"/opt/homebrew/var/log/httpd/error_log"</code></pre>
     </div>
     <p class="paragraph">Și o înlocuim cu:</p>
     <div class="code-inline">
      <pre><code>ErrorLog&nbsp;"/Users/fdc/localhost/error.log"</code></pre>
     </div>
     <p class="paragraph">Modificăm calea fișierului de log pentru vizite. Dacă arhitectura este Intel, găsim linia:</p>
     <div class="code-inline">
      <pre><code>CustomLog&nbsp;"/Users/fdc/localhost/access_log"&nbsp;common</code></pre>
     </div>
     <p class="paragraph">Dacă arhitectura este Apple M1, găsim linia:</p>
     <div class="code-inline">
      <pre><code>CustomLog&nbsp;"/opt/homebrew/var/log/httpd/access_log"&nbsp;common</code></pre>
     </div>
     <p class="paragraph">Și o înlocuim cu:</p>
     <div class="code-inline">
      <pre><code>CustomLog&nbsp;"/Users/fdc/localhost/access_log"&nbsp;common</code></pre>
     </div>
     <p class="paragraph">Astfel, fișierul error.log, în care sunt înregistrate erorile, și fișierul access.log, în care sunt înregistrate datele despre vizitele pe site, vor fi situate în folderul c:/localhost.</p>
     <h2 class="subtitle">Configurarea PHP</h2>
     <p class="paragraph">Acum legăm Apache cu PHP. Mai întâi, trebuie să aflăm versiunea PHP. Pentru aceasta, introducem în terminal comanda:</p>
     <div class="code-inline">
      <pre><code>php&nbsp;-v</code></pre>
     </div>
     <p class="paragraph">Ar trebui să afișeze ceva de genul:</p>
     <div class="code-inline">
      <pre><code>PHP&nbsp;8.1.1&nbsp;(cli)&nbsp;(built:&nbsp;Jan&nbsp;08&nbsp;2022&nbsp;08:25:03)&nbsp;(&nbsp;NTS&nbsp;)<br>Copyright&nbsp;(c)&nbsp;The&nbsp;PHP&nbsp;Group<br>Zend&nbsp;Engine&nbsp;v4.1.1,&nbsp;Copyright&nbsp;(c)&nbsp;Zend&nbsp;Technologies<br>&nbsp;&nbsp;&nbsp;with&nbsp;Zend&nbsp;OPcache&nbsp;v8.1.1,&nbsp;Copyright&nbsp;(c),&nbsp;by&nbsp;Zend&nbsp;Technologies</code></pre>
     </div>
     <p class="paragraph">Ne interesează primele două cifre ale versiunii. În cazul meu, versiunea este 8.1. În funcție de arhitectura computerului, configurarea PHP diferă.</p>
     <p class="paragraph">Găsim în fișier linia:</p>
     <div class="code-inline">
      <pre><code>#LoadModule&nbsp;rewrite_module&nbsp;lib/httpd/modules/mod_rewrite.so</code></pre>
     </div>
     <p class="paragraph">Dacă arhitectura este Intel, adăugăm după această linie:</p>
     <div class="code-inline">
      <pre><code>LoadModule&nbsp;php_module&nbsp;/usr/local/opt/php@8.1/lib/httpd/modules/libphp.so</code></pre>
     </div>
     <p class="paragraph">Dacă arhitectura este Apple M1, adăugăm:</p>
     <div class="code-inline">
      <pre><code>LoadModule&nbsp;php_module<br>/opt/homebrew/opt/php@8.1/lib/httpd/modules/libphp.so</code></pre>
     </div>
     <p class="paragraph">Astfel, adăugăm modulul php. Observați partea php@8.1. Deoarece versiunea mea este 8.1, specific această versiune a modulului. Rezultatul ar trebui să fie:</p>
     <div class="code-inline">
      <pre><code>#LoadModule&nbsp;rewrite_module&nbsp;lib/httpd/modules/mod_rewrite.so<br>LoadModule&nbsp;php_module&nbsp;/usr/local/opt/php@8.1/lib/httpd/modules/libphp.so&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;pentru&nbsp;Intel<br>LoadModule&nbsp;php_module&nbsp;/opt/homebrew/opt/php@8.1/lib/httpd/modules/libphp.so&nbsp;//&nbsp;pentru&nbsp;Apple&nbsp;M1</code></pre>
     </div>
     <p class="paragraph">Apoi găsim blocul &lt;IfModule mime_module&gt;:</p>
     <div class="code-inline">
      <pre><code>&lt;IfModule&nbsp;mime_module&gt;<br>&nbsp;&nbsp;&nbsp;#<br>&nbsp;&nbsp;&nbsp;#&nbsp;TypesConfig&nbsp;points&nbsp;to&nbsp;the&nbsp;file&nbsp;containing&nbsp;the&nbsp;list&nbsp;of&nbsp;mappings&nbsp;from<br>&nbsp;&nbsp;&nbsp;#&nbsp;filename&nbsp;extension&nbsp;to&nbsp;MIME-type.</code></pre>
     </div>
     <p class="paragraph">Și sub linia &lt;IfModule mime_module&gt; adăugăm două linii:</p>
     <div class="code-inline">
      <pre><code>AddType&nbsp;application/x-httpd-php&nbsp;.php<br>AddType&nbsp;application/x-httpd-php-source&nbsp;.phps</code></pre>
     </div>
     <p class="paragraph">Rezultatul ar trebui să fie:</p>
     <div class="code-inline">
      <pre><code>&lt;IfModule&nbsp;mime_module&gt;<br>&nbsp;&nbsp;&nbsp;AddType&nbsp;application/x-httpd-php&nbsp;.php<br>&nbsp;&nbsp;&nbsp;AddType&nbsp;application/x-httpd-php-source&nbsp;.phps<br>&nbsp;&nbsp;&nbsp;#<br>&nbsp;&nbsp;&nbsp;#&nbsp;TypesConfig&nbsp;points&nbsp;to&nbsp;the&nbsp;file&nbsp;containing&nbsp;the&nbsp;list&nbsp;of&nbsp;mappings&nbsp;from<br>&nbsp;&nbsp;&nbsp;#&nbsp;filename&nbsp;extension&nbsp;to&nbsp;MIME-type.<br>&nbsp;&nbsp;&nbsp;#</code></pre>
     </div>
     <p class="paragraph">În acest caz, am adăugat suport pentru fișierele cu extensiile .php și .phps.</p>
     <p class="paragraph">Și la sfârșit găsim blocul &lt;IfModule dir_module&gt;:</p>
     <div class="code-inline">
      <pre><code>&lt;IfModule&nbsp;dir_module&gt;<br>&nbsp;&nbsp;&nbsp;DirectoryIndex&nbsp;index.html<br>&lt;/IfModule&gt;</code></pre>
     </div>
     <p class="paragraph">Și îl înlocuim cu următorul:</p>
     <div class="code-inline">
      <pre><code>&lt;IfModule&nbsp;dir_module&gt;<br>&nbsp;&nbsp;&nbsp;DirectoryIndex&nbsp;index.html&nbsp;index.php<br>&lt;/IfModule&gt;</code></pre>
     </div>
     <p class="paragraph">În acest caz, definim fișierele care vor fi executate la accesarea rădăcinii fișierului sau directorului. Practic, definim paginile principale ale site-ului: index.html și index.php.</p>
     <p class="paragraph">Aceasta este configurația minimă necesară pentru a lucra cu PHP.</p>
     <p class="paragraph">Acum trebuie să ne asigurăm că PHP este conectat și funcționează corect. Pentru aceasta, vom merge în folderul /Users/fdc/localhost, pe care l-am creat pentru stocarea fișierelor serverului web, și vom adăuga în el un fișier text obișnuit. Îl vom redenumi în index.php și vom adăuga următorul conținut:</p>
     <div class="code-inline">
      <pre><code>&lt;?php<br>phpinfo();<br>?&gt;</code></pre>
     </div>
     <p class="paragraph">În acest caz, am creat un script simplu care afișează informații generale despre PHP.</p>
     <p class="paragraph">Acum vom reporni Apache. Pentru aceasta, introducem succesiv în terminal următoarele comenzi:</p>
     <div class="code-inline">
      <pre><code>brew&nbsp;services&nbsp;stop&nbsp;httpd<br>brew&nbsp;services&nbsp;start&nbsp;httpd</code></pre>
     </div>
     <p class="paragraph">După repornirea serverului web, accesăm scriptul index.php creat mai sus, introducând în bara de adrese a browserului adresa http://localhost/index.php.</p>
     <div class="image-container">
      <img th:src="@{/images/PHP/1.Introducere%20in%20PHP/4.Instalarea%20serverului%20web%20Apache%20si%20PHP%20pe%20MacOS/images/image3.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">Ce s-a întâmplat aici? Când accesăm site-ul pe mașina locală, adresa specificată este http://localhost. Apoi se specifică numele resursei la care se face referire.</p>
     <p class="paragraph">În acest caz, resursa utilizată este fișierul index.php. Și deoarece în fișierul httpd.conf, ca director de stocare a documentelor serverului web, este specificat directorul /Users/fdc/localhost, în acest director serverul web va căuta fișierele necesare.</p>
     <p class="paragraph">Și, deoarece mai sus, în timpul configurării, am specificat că fișierul index.php poate fi folosit ca pagină principală, putem accesa această resursă pur și simplu prin http://localhost/</p>
     <p class="paragraph">Astfel, acum putem crea propriile noastre site-uri în PHP pe MacOS.</p>
     <h2 class="subtitle">Configurarea PHP</h2>
     <p class="paragraph">Ca și pentru Windows, configurația PHP este stocată în fișierul php.ini. Pe MacOS, acest fișier este localizat la următoarea cale:</p>
     <div class="code-inline">
      <pre><code>/usr/local/etc/php/[versiune]/php.ini</code></pre>
     </div>
     <p class="paragraph">De exemplu, am instalat versiunea PHP 8.1.1, așa că în cazul meu fișierul php.ini este localizat la calea "/usr/local/etc/php/8.1/php.ini". Prin urmare, dacă trebuie să-l editez în editorul de text implicit TextEdit, pot introduce în terminal comanda:</p>
     <div class="code-inline">
      <pre><code>open&nbsp;-e&nbsp;/usr/local/etc/php/8.1/php.ini</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
