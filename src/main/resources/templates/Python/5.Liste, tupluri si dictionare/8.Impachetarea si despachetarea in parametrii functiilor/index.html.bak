<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='Python', activeChapter='5.Liste, tupluri si dictionare', activeLesson='8.Impachetarea si despachetarea in parametrii functiilor'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Împachetarea și despachetarea în parametrii funcțiilor</h1>
     <p class="paragraph">Una dintre utilizările comune ale împachetării și despachetării este în parametrii funcțiilor. Astfel, în definițiile diferitelor funcții, este frecvent să vedem că ele acceptă parametri precum *args și **kwargs.</p>
     <p class="paragraph">Termenii args și kwargs sunt convenții de programare în Python; în realitate, în locul lor pot fi utilizate orice denumiri. *args reprezintă parametrii care sunt transmiși pe poziție, în timp ce **kwargs se referă la parametrii transmiși pe nume.</p>
     <p class="paragraph">Operatorul * poate fi utilizat cu orice obiect iterabil (de exemplu, tupluri, liste și șiruri de caractere), în timp ce operatorul ** poate fi utilizat doar cu dicționare.</p>
     <h2 class="subtitle">*args</h2>
     <p class="paragraph">Operatorul * permite transmiterea mai multor valori într-o funcție, iar toate vor fi împachetate într-un tuplu:</p>
     <div class="code-inline">
      <pre><code>def&nbsp;fun(*args):<br>&nbsp;&nbsp;&nbsp;#&nbsp;accesăm&nbsp;primul&nbsp;element&nbsp;al&nbsp;tuplului<br>&nbsp;&nbsp;&nbsp;print(args[0])<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;#&nbsp;afișăm&nbsp;întregul&nbsp;tuplu<br>&nbsp;&nbsp;&nbsp;print(args)<br>&nbsp;<br>fun("Python",&nbsp;"C++",&nbsp;"Java",&nbsp;"C#")</code></pre>
     </div>
     <p class="paragraph">Aici, funcția fun acceptă un tuplu de valori. La apelare, putem transmite un număr variabil de valori. În exemplul de mai sus, sunt transmise patru șiruri de caractere, care formează un tuplu. Ieșirea în consolă a programului:</p>
     <div class="code-inline">
      <pre><code>Python<br>('Python',&nbsp;'C++',&nbsp;'Java',&nbsp;'C#')</code></pre>
     </div>
     <p class="paragraph">Datorită acestei capacități, putem transmite un număr variabil de valori într-o funcție:</p>
     <div class="code-inline">
      <pre><code>def&nbsp;sum(*args):<br>&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;0<br>&nbsp;&nbsp;&nbsp;for&nbsp;arg&nbsp;in&nbsp;args:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;+=&nbsp;arg<br>&nbsp;&nbsp;&nbsp;return&nbsp;result<br>&nbsp;<br>print(sum(1,&nbsp;2,&nbsp;3))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;6<br>print(sum(1,&nbsp;2,&nbsp;3,&nbsp;4))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;10<br>print(sum(1,&nbsp;2,&nbsp;3,&nbsp;4,&nbsp;5))&nbsp;&nbsp;&nbsp;#&nbsp;15</code></pre>
     </div>
     <h2 class="subtitle">**kwargs</h2>
     <p class="paragraph">Operatorul ** împachetează argumentele transmise pe nume într-un dicționar. Numele parametrilor devin chei. De exemplu, să definim o funcție care doar va afișa toți parametrii transmiși:</p>
     <div class="code-inline">
      <pre><code>def&nbsp;fun(**kwargs):<br>&nbsp;&nbsp;&nbsp;print(kwargs)&nbsp;&nbsp;&nbsp;#&nbsp;afișăm&nbsp;dicționarul&nbsp;în&nbsp;consolă<br>&nbsp;<br>fun(name="Tom",&nbsp;age="38",&nbsp;company="Google")<br>fun(language="Python",&nbsp;version="3.11")</code></pre>
     </div>
     <p class="paragraph">Ieșirea în consolă a programului:</p>
     <div class="code-inline">
      <pre><code>{'name':&nbsp;'Tom',&nbsp;'age':&nbsp;'38',&nbsp;'company':&nbsp;'Google'}<br>{'language':&nbsp;'Python',&nbsp;'version':&nbsp;'3.11'}</code></pre>
     </div>
     <p class="paragraph">Deoarece argumentele sunt transmise funcției sub formă de dicționar, putem accesa valorile lor în interiorul funcției prin chei:</p>
     <div class="code-inline">
      <pre><code>def&nbsp;fun(**kwargs):<br>&nbsp;&nbsp;&nbsp;for&nbsp;key&nbsp;in&nbsp;kwargs:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(f"{key}&nbsp;=&nbsp;{kwargs[key]}")<br>&nbsp;<br>fun(name="Tom",&nbsp;age="38",&nbsp;company="Google")</code></pre>
     </div>
     <p class="paragraph">Ieșirea în consolă a programului:</p>
     <div class="code-inline">
      <pre><code>name&nbsp;=&nbsp;Tom<br>age&nbsp;=&nbsp;38<br>company&nbsp;=&nbsp;Google</code></pre>
     </div>
     <h2 class="subtitle">Despachetarea argumentelor</h2>
     <p class="paragraph">Mai sus am descris cum operatorii * și ** sunt utilizați pentru împachetarea argumentelor într-un tuplu și dicționar, respectiv. Dar aceiași operatori pot fi folosiți și pentru despachetare.</p>
     <h2 class="subtitle">Operatorul * și despachetarea</h2>
     <p class="paragraph">Să analizăm mai întâi o situație unde acest lucru poate fi util. Să presupunem că transmitem un tuplu într-o funcție:</p>
     <div class="code-inline">
      <pre><code>def&nbsp;sum(*args):<br>&nbsp;result&nbsp;=&nbsp;0<br>&nbsp;for&nbsp;arg&nbsp;in&nbsp;args:<br>&nbsp;&nbsp;&nbsp;result&nbsp;+=&nbsp;arg<br>&nbsp;return&nbsp;result<br>&nbsp;<br>numbers&nbsp;=&nbsp;(1,&nbsp;2,&nbsp;3,&nbsp;4,&nbsp;5)<br>print(sum(numbers))</code></pre>
     </div>
     <p class="paragraph">Aici, tuplul numbers este transmis funcției sum. Parametrul *args, de asemenea, reprezintă un tuplu, și pare că totul ar trebui să funcționeze. Cu toate acestea, vom întâmpina o eroare:</p>
     <div class="code-inline">
      <pre><code>TypeError:&nbsp;unsupported&nbsp;operand&nbsp;type(s)&nbsp;for&nbsp;+=:&nbsp;'int'&nbsp;and&nbsp;'tuple'</code></pre>
     </div>
     <p class="paragraph">În acest caz, tuplul numbers este transmis ca element al tuplului *args.</p>
     <p class="paragraph">Pentru ca elementele tuplului să fie transmise în tuplul *args ca valori separate, trebuie să efectuăm despachetarea acestora:</p>
     <div class="code-inline">
      <pre><code>def&nbsp;sum(*args):<br>&nbsp;result&nbsp;=&nbsp;0<br>&nbsp;for&nbsp;arg&nbsp;in&nbsp;args:<br>&nbsp;&nbsp;&nbsp;result&nbsp;+=&nbsp;arg<br>&nbsp;return&nbsp;result<br>&nbsp;<br>numbers&nbsp;=&nbsp;(1,&nbsp;2,&nbsp;3,&nbsp;4,&nbsp;5)<br>#&nbsp;aplicăm&nbsp;despachetarea&nbsp;-&nbsp;*numbers<br>print(sum(*numbers))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;15</code></pre>
     </div>
     <p class="paragraph">Aici, la transmiterea tuplului numbers în funcția sum, se aplică despachetarea: *numbers</p>
     <p class="paragraph">Un alt caz de despachetare poate fi situația în care funcția acceptă mai mulți parametri, iar noi transmitem un singur tuplu sau listă:</p>
     <div class="code-inline">
      <pre><code>def&nbsp;print_person(name,&nbsp;age,&nbsp;company):<br>&nbsp;print(f"Name:{name},&nbsp;Age:&nbsp;{age},&nbsp;Company:&nbsp;{company}")<br>&nbsp;<br>person&nbsp;=("Tom",&nbsp;38,&nbsp;"Google")<br>#&nbsp;efectuăm&nbsp;despachetarea&nbsp;tuplului&nbsp;person<br>print_person(*person)&nbsp;&nbsp;&nbsp;#&nbsp;Name:Tom,&nbsp;Age:&nbsp;38,&nbsp;Company:&nbsp;Google</code></pre>
     </div>
     <p class="paragraph">În acest caz, expresia *person despachetează tuplul person în valori separate, care sunt transmise parametrilor name, age și company.</p>
     <h2 class="subtitle">Operatorul ** și despachetarea</h2>
     <p class="paragraph">Operatorul ** este utilizat pentru despachetarea dicționarelor:</p>
     <div class="code-inline">
      <pre><code>def&nbsp;print_person(name,&nbsp;age,&nbsp;company):<br>&nbsp;print(f"Name:{name},&nbsp;Age:&nbsp;{age},&nbsp;Company:&nbsp;{company}")<br>&nbsp;<br>tom&nbsp;={"name":"Tom",&nbsp;"age":38,&nbsp;"company":"Google"}<br>#&nbsp;efectuăm&nbsp;despachetarea&nbsp;dicționarului&nbsp;tom<br>print_person(**tom)&nbsp;#&nbsp;Name:Tom,&nbsp;Age:&nbsp;38,&nbsp;Company:&nbsp;Google</code></pre>
     </div>
     <p class="paragraph">Aici, expresia **tom despachetează dicționarul în valori separate, care sunt transmise parametrilor name, age și company pe baza numelor cheilor.</p>
     <h2 class="subtitle">Combinarea parametrilor</h2>
     <p class="paragraph">Parametrii *args și **kwargs pot fi utilizați împreună cu alți parametri într-o funcție. De exemplu:</p>
     <div class="code-inline">
      <pre><code>def&nbsp;sum(num1,&nbsp;num2,&nbsp;*nums):<br>&nbsp;&nbsp;&nbsp;result=num1+num2<br>&nbsp;&nbsp;&nbsp;for&nbsp;n&nbsp;in&nbsp;nums:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;+=&nbsp;n<br>&nbsp;&nbsp;&nbsp;return&nbsp;result<br><br>print(sum(1,2,3))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;6<br>print(sum(1,2,3,4))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;10</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
