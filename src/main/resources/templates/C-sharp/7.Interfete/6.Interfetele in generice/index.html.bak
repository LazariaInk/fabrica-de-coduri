<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>
        body {
            background: #ffffff;
        }
    </style>
 </head>
 <body th:with="activeTopic='C-sharp', activeChapter='7.Interfete', activeLesson='6.Interfetele in generice'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Interfețele în generice</h1>
     <h2 class="subtitle">Interfețele ca restricții pentru generice</h2>
     <p class="paragraph">Interfețele pot fi utilizate ca restricții pentru generice. Dacă pentru restricții se poate specifica doar o singură clasă, pentru interfețe se pot specifica mai multe.</p>
     <p class="paragraph">Să presupunem că avem următoarele interfețe și o clasă care le implementează:</p>
     <div class="code-inline">
      <pre><code>interface&nbsp;IMessage<br>{<br>&nbsp;&nbsp;&nbsp;string&nbsp;Text&nbsp;{&nbsp;get;&nbsp;}&nbsp;//&nbsp;textul&nbsp;mesajului<br>}<br>interface&nbsp;IPrintable<br>{<br>&nbsp;&nbsp;&nbsp;void&nbsp;Print();<br>}<br>class&nbsp;Message&nbsp;:&nbsp;IMessage,&nbsp;IPrintable<br>{<br>&nbsp;&nbsp;&nbsp;public&nbsp;string&nbsp;Text&nbsp;{&nbsp;get;&nbsp;}<br>&nbsp;&nbsp;&nbsp;public&nbsp;Message(string&nbsp;text)&nbsp;=&gt;&nbsp;Text&nbsp;=&nbsp;text;<br><br>&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Print()&nbsp;=&gt;&nbsp;Console.WriteLine(Text);<br>}</code></pre>
     </div>
     <p class="paragraph">Interfața IMessage reprezintă o interfață pentru mesaj și definește proprietatea Text pentru stocarea textului mesajului. Interfața IPrintable definește metoda Print pentru imprimarea condiționată a mesajului. Iar clasa Message implementează aceste interfețe.</p>
     <p class="paragraph">Utilizăm interfețele enumerate mai sus ca restricții pentru o clasă generică:</p>
     <div class="code-inline">
      <pre><code>class&nbsp;Messenger&lt;T&gt;&nbsp;where&nbsp;T:&nbsp;IMessage,&nbsp;IPrintable<br>{<br>&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Send(T&nbsp;message)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("Trimiterea&nbsp;mesajului:");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;message.Print();<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <p class="paragraph">În acest caz, clasa unui mesager condiționat folosește parametrul T - tipul care implementează atât interfața IMessage, cât și IPrintable. De exemplu, clasa Message definită mai sus implementează ambele interfețe, așa că putem folosi acest tip pentru a tipiza obiectele Messenger:</p>
     <div class="code-inline">
      <pre><code>//&nbsp;creăm&nbsp;un&nbsp;mesager<br>var&nbsp;telegram&nbsp;=&nbsp;new&nbsp;Messenger&lt;Message&gt;();<br>//&nbsp;creăm&nbsp;un&nbsp;mesaj<br>var&nbsp;message&nbsp;=&nbsp;new&nbsp;Message("Hello&nbsp;World!");<br>//&nbsp;trimitem&nbsp;mesajul<br>telegram.Send(message);</code></pre>
     </div>
     <p class="paragraph">De asemenea, parametrul T poate reprezenta o interfață care moștenește ambele interfețe:</p>
     <div class="code-inline">
      <pre><code>interface&nbsp;IPrintableMessage:&nbsp;IPrintable,&nbsp;IMessage&nbsp;{&nbsp;}<br>class&nbsp;PrintableMessage&nbsp;:&nbsp;IPrintableMessage<br>{<br>&nbsp;&nbsp;&nbsp;public&nbsp;string&nbsp;Text&nbsp;{&nbsp;get;&nbsp;}<br>&nbsp;&nbsp;&nbsp;public&nbsp;PrintableMessage(string&nbsp;text)&nbsp;=&gt;&nbsp;Text&nbsp;=&nbsp;text;<br>&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Print()&nbsp;=&gt;&nbsp;Console.WriteLine(Text);<br>}</code></pre>
     </div>
     <p class="paragraph">În acest caz, putem tipiza obiectele Messenger cu tipul IPrintableMessage:</p>
     <div class="code-inline">
      <pre><code>var&nbsp;telegram&nbsp;=&nbsp;new&nbsp;Messenger&lt;IPrintableMessage&gt;();<br>var&nbsp;message&nbsp;=&nbsp;new&nbsp;PrintableMessage("Hello&nbsp;World!");<br>telegram.Send(message);</code></pre>
     </div>
     <h2 class="subtitle">Interfețe generice</h2>
     <p class="paragraph">La fel ca și clasele, interfețele pot fi generice:</p>
     <div class="code-inline">
      <pre><code>interface&nbsp;IUser&lt;T&gt;<br>{<br>&nbsp;&nbsp;&nbsp;T&nbsp;Id&nbsp;{&nbsp;get;&nbsp;}<br>}<br>class&nbsp;User&lt;T&gt;&nbsp;:&nbsp;IUser&lt;T&gt;<br>{<br>&nbsp;&nbsp;&nbsp;public&nbsp;T&nbsp;Id&nbsp;{&nbsp;get;&nbsp;}<br>&nbsp;&nbsp;&nbsp;public&nbsp;User(T&nbsp;id)&nbsp;=&gt;&nbsp;Id&nbsp;=&nbsp;id;<br>}</code></pre>
     </div>
     <p class="paragraph">Interfața IUser este tipizată cu parametrul T, care este folosit la implementarea interfeței în clasa User. Variabila _id este definită ca T, permițând astfel utilizarea diverselor tipuri pentru id.</p>
     <p class="paragraph">Definim două implementări: una care folosește tipul int ca parametru și alta care folosește tipul string:</p>
     <div class="code-inline">
      <pre><code>IUser&lt;int&gt;&nbsp;user1&nbsp;=&nbsp;new&nbsp;User&lt;int&gt;(6789);<br>Console.WriteLine(user1.Id);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;6789<br><br>IUser&lt;string&gt;&nbsp;user2&nbsp;=&nbsp;new&nbsp;User&lt;string&gt;("12345");<br>Console.WriteLine(user2.Id);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;12345</code></pre>
     </div>
     <p class="paragraph">De asemenea, la implementarea interfeței putem specifica explicit ce tip va fi folosit pentru parametrul T:</p>
     <div class="code-inline">
      <pre><code>class&nbsp;IntUser&nbsp;:&nbsp;IUser&lt;int&gt;<br>{<br>&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;Id&nbsp;{&nbsp;get;&nbsp;}<br>&nbsp;&nbsp;&nbsp;public&nbsp;IntUser(int&nbsp;id)&nbsp;=&gt;&nbsp;Id&nbsp;=&nbsp;id;<br>}</code></pre>
     </div>
     <p class="paragraph">Utilizare:</p>
     <div class="code-inline">
      <pre><code>IUser&lt;int&gt;&nbsp;user1&nbsp;=&nbsp;new&nbsp;IntUser(2345);<br>Console.WriteLine(user1.Id);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;2345<br><br>IntUser&nbsp;user2&nbsp;=&nbsp;new&nbsp;IntUser(9840);<br>Console.WriteLine(user2.Id);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;9840</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
