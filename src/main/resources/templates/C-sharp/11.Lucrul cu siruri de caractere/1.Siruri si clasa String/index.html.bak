<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4253419731329045"
            crossorigin="anonymous"></script>


  <link rel="canonical" th:href="${canonicalUrl}" />

    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>
        body {
            background: #ffffff;
        }
    </style>
 </head>
 <body th:with="activeTopic='C-sharp', activeChapter='11.Lucrul cu siruri de caractere', activeLesson='1.Siruri si clasa String'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Șiruri și clasa String</h1>
     <p class="paragraph">Un număr destul de mare de sarcini, care pot apărea în dezvoltarea aplicațiilor, sunt într-un fel sau altul legate de procesarea șirurilor de caractere - parsarea paginilor web, căutarea în text, unele sarcini analitice legate de extragerea informațiilor necesare din text, etc. De aceea, în acest sens, lucrul cu șirurile de caractere primește o atenție deosebită.</p>
     <p class="paragraph">În limbajul C# valorile de tip șir sunt reprezentate de tipul string, iar toată funcționalitatea lucrului cu acest tip este concentrată în clasa System.String. De fapt, string este un pseudonim pentru clasa String.</p>
     <p class="paragraph">Obiectele acestei clase reprezintă textul ca o secvență de caractere Unicode. Dimensiunea maximă a unui obiect String poate fi de 2 GB în memorie, sau aproximativ 1 miliard de caractere.</p>
     <h2 class="subtitle">Crearea șirurilor</h2>
     <p class="paragraph">Șirurile pot fi create atât folosind o variabilă de tip string și atribuindu-i o valoare, cât și utilizând unul dintre constructorii clasei String:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;s1&nbsp;=&nbsp;"hello";<br>string&nbsp;s2&nbsp;=&nbsp;new&nbsp;String('a',&nbsp;6);&nbsp;//&nbsp;rezultatul&nbsp;va&nbsp;fi&nbsp;șirul&nbsp;"aaaaaa"<br>string&nbsp;s3&nbsp;=&nbsp;new&nbsp;String(new&nbsp;char[]&nbsp;{&nbsp;'w',&nbsp;'o',&nbsp;'r',&nbsp;'l',&nbsp;'d'&nbsp;});<br>string&nbsp;s4&nbsp;=&nbsp;new&nbsp;String(new&nbsp;char[]&nbsp;{&nbsp;'w',&nbsp;'o',&nbsp;'r',&nbsp;'l',&nbsp;'d'&nbsp;},&nbsp;1,&nbsp;3);&nbsp;//&nbsp;orl<br><br>Console.WriteLine(s1);&nbsp;&nbsp;//&nbsp;hello<br>Console.WriteLine(s2);&nbsp;&nbsp;//&nbsp;aaaaaa<br>Console.WriteLine(s3);&nbsp;&nbsp;//&nbsp;world<br>Console.WriteLine(s4);&nbsp;&nbsp;//&nbsp;orl</code></pre>
     </div>
     <p class="paragraph">Constructorul String are diverse versiuni. Astfel, apelul constructorului:</p>
     <div class="code-inline">
      <pre><code>new&nbsp;String('a',&nbsp;6)</code></pre>
     </div>
     <p class="paragraph">Repetă de 6 ori obiectul din primul parametru, adică de fapt creează șirul "aaaaaa".</p>
     <p class="paragraph">Un alt constructor primește un tablou de caractere, din care se creează șirul:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;s3&nbsp;=&nbsp;new&nbsp;String(new&nbsp;char[]&nbsp;{&nbsp;'w',&nbsp;'o',&nbsp;'r',&nbsp;'l',&nbsp;'d'&nbsp;});</code></pre>
     </div>
     <p class="paragraph">Al treilea constructor utilizat mai sus în exemplu permite crearea unui șir dintr-o parte a tabloului de caractere. Al doilea parametru transmite indicele de început, de la care se extrag caracterele, iar al treilea parametru indică numărul de caractere:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;s4&nbsp;=&nbsp;new&nbsp;String(new&nbsp;char[]&nbsp;{&nbsp;'w',&nbsp;'o',&nbsp;'r',&nbsp;'l',&nbsp;'d'&nbsp;},&nbsp;1,&nbsp;3);&nbsp;//&nbsp;orl</code></pre>
     </div>
     <h2 class="subtitle">Șirul ca set de caractere</h2>
     <p class="paragraph">Deoarece șirul stochează o colecție de caractere, în el este definit un indexator pentru accesarea acestor caractere:</p>
     <div class="code-inline">
      <pre><code>public&nbsp;char&nbsp;this[int&nbsp;index]&nbsp;{get;}</code></pre>
     </div>
     <p class="paragraph">Aplicând indexatorul, putem accesa șirul ca un tablou de caractere și obține orice caracter al său prin index:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;message&nbsp;=&nbsp;"hello";<br>//&nbsp;obținem&nbsp;caracterul<br>char&nbsp;firstChar&nbsp;=&nbsp;message[1];&nbsp;//&nbsp;caracterul&nbsp;'e'<br>Console.WriteLine(firstChar);&nbsp;&nbsp;&nbsp;//&nbsp;e<br><br>Console.WriteLine(message.Length);&nbsp;&nbsp;//&nbsp;lungimea&nbsp;șirului</code></pre>
     </div>
     <p class="paragraph">Utilizând proprietatea Length, ca și în cazul unui tablou obișnuit, putem obține lungimea șirului.</p>
     <h2 class="subtitle">Parcurgerea șirurilor</h2>
     <p class="paragraph">Clasa String implementează interfața IEnumerable, datorită căreia șirul poate fi parcurs în ciclul foreach ca un set de obiecte char. De asemenea, putem parcurge șirul folosind alte tipuri de cicluri, aplicând accesul la caractere prin index:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;message&nbsp;=&nbsp;"hello";<br><br>for(var&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;message.Length;&nbsp;i++)<br>{<br>&nbsp;&nbsp;&nbsp;Console.WriteLine(message[i]);<br>}<br>foreach(var&nbsp;ch&nbsp;in&nbsp;message)<br>{<br>&nbsp;&nbsp;&nbsp;Console.WriteLine(ch);<br>}</code></pre>
     </div>
     <h2 class="subtitle">Compararea șirurilor</h2>
     <p class="paragraph">Spre deosebire de alte clase, șirurile sunt comparate după valoarea caracterelor lor, nu după referințe:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;message1&nbsp;=&nbsp;"hello";<br>string&nbsp;message2&nbsp;=&nbsp;"hello";<br><br>Console.WriteLine(message1&nbsp;==&nbsp;message2);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;true</code></pre>
     </div>
     <h2 class="subtitle">Șiruri multiline</h2>
     <p class="paragraph">Începând cu C# 11, folosind trei perechi de ghilimele duble, se poate crea un text multiline, inclusiv cu aplicarea interpolării:</p>
     <div class="code-inline">
      <pre><code>Print();<br>PrintValue("hello");<br><br>void&nbsp;Print()<br>{<br>&nbsp;&nbsp;&nbsp;string&nbsp;text&nbsp;=&nbsp;"""<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;element&nbsp;attr="content"&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;body&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/body&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/element&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;""";<br>&nbsp;&nbsp;&nbsp;Console.WriteLine(text);<br>}<br><br>void&nbsp;PrintValue(string&nbsp;val)<br>{<br>&nbsp;&nbsp;&nbsp;string&nbsp;text&nbsp;=&nbsp;$"""<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;element&nbsp;attr="content"&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;body&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{val}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/body&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/element&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;""";<br>&nbsp;&nbsp;&nbsp;//&nbsp;sau&nbsp;așa<br>&nbsp;&nbsp;&nbsp;//&nbsp;string&nbsp;text&nbsp;=&nbsp;&nbsp;$$"""<br>&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;element&nbsp;attr="content"&gt;<br>&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;body&gt;<br>&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{val}}<br>&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/body&gt;<br>&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/element&gt;<br>&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;""";<br>&nbsp;&nbsp;&nbsp;Console.WriteLine(text);<br>}</code></pre>
     </div>
     <h2 class="subtitle">Metode principale ale șirurilor</h2>
     <p class="paragraph">Funcționalitatea principală a clasei String este dezvăluită prin metodele sale, printre care putem evidenția următoarele:</p>
     <ul class="enumeration">
      <li>Compare: compară două șiruri ținând cont de cultura curentă (locale) a utilizatorului</li>
      <li>CompareOrdinal: compară două șiruri fără a ține cont de locale</li>
      <li>Contains: determină dacă o subșir se află în șir</li>
      <li>Concat: unește șiruri</li>
      <li>CopyTo: copiază o parte a șirului, începând de la un anumit index în tablou</li>
      <li>EndsWith: determină dacă sfârșitul șirului coincide cu subșirul</li>
      <li>Format: formatează șirul</li>
      <li>IndexOf: găsește indexul primei apariții a unui caracter sau subșir în șir</li>
      <li>Insert: inserează în șir un subșir</li>
      <li>Join: unește elementele unui tablou de șiruri</li>
      <li>LastIndexOf: găsește indexul ultimei apariții a unui caracter sau subșir în șir</li>
      <li>Replace: înlocuiește în șir un caracter sau subșir cu alt caracter sau subșir</li>
      <li>Split: împarte un șir în tablou de șiruri</li>
      <li>Substring: extrage din șir un subșir, începând de la o poziție specificată</li>
      <li>ToLower: convertește toate caracterele șirului în litere mici</li>
      <li>ToUpper: convertește toate caracterele șirului în litere mari</li>
      <li>Trim: elimină spațiile de la începutul și sfârșitul șirului</li>
     </ul>
     <p class="paragraph">În articolele următoare vom analiza funcționarea acestor metode.</p>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
