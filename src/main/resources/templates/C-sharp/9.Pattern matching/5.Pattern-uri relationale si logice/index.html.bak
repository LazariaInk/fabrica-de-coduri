<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>
        body {
            background: #ffffff;
        }
    </style>
 </head>
 <body th:with="activeTopic='C-sharp', activeChapter='9.Pattern matching', activeLesson='5.Pattern-uri relationale si logice'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Pattern-uri relaționale și logice</h1>
     <p class="paragraph">Pattern-ul relațional permite compararea valorii transmise în construcție cu anumite valori utilizând operații de comparație. De exemplu, în funcție de suma depozitului, dobânzile la acest depozit pot varia. Calculăm suma dobânzilor în funcție de suma depozitului utilizând pattern-ul relațional:</p>
     <div class="code-inline">
      <pre><code>decimal&nbsp;Calculate(decimal&nbsp;sum)<br>{<br>&nbsp;&nbsp;&nbsp;return&nbsp;sum&nbsp;switch&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;0&nbsp;=&gt;&nbsp;0,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;dacă&nbsp;suma&nbsp;este&nbsp;mai&nbsp;mică&nbsp;sau&nbsp;egală&nbsp;cu&nbsp;0,&nbsp;returnăm&nbsp;0<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;&nbsp;50000&nbsp;=&gt;&nbsp;sum&nbsp;*&nbsp;0.05m,&nbsp;//&nbsp;dacă&nbsp;suma&nbsp;este&nbsp;mai&nbsp;mică&nbsp;de&nbsp;50000,&nbsp;returnăm&nbsp;sum&nbsp;*&nbsp;0.05m<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;&nbsp;100000&nbsp;=&gt;&nbsp;sum&nbsp;*&nbsp;0.1m,&nbsp;//&nbsp;dacă&nbsp;suma&nbsp;este&nbsp;mai&nbsp;mică&nbsp;de&nbsp;100000,&nbsp;returnăm&nbsp;sum&nbsp;*&nbsp;0.1m<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_&nbsp;=&gt;&nbsp;sum&nbsp;*&nbsp;0.2m&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;în&nbsp;celelalte&nbsp;cazuri,&nbsp;returnăm&nbsp;sum&nbsp;*&nbsp;0.2m<br>&nbsp;&nbsp;&nbsp;};<br>}</code></pre>
     </div>
     <p class="paragraph">Aplicare:</p>
     <div class="code-inline">
      <pre><code>Console.WriteLine(Calculate(-200));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;0<br>Console.WriteLine(Calculate(0));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;0<br>Console.WriteLine(Calculate(10000));&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;500<br>Console.WriteLine(Calculate(60000));&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;6000<br>Console.WriteLine(Calculate(200000));&nbsp;&nbsp;&nbsp;//&nbsp;40000</code></pre>
     </div>
     <p class="paragraph">Pattern-ul logic permite utilizarea operatorilor logici and (înmulțire logică sau operația logică ȘI) și or (adunare logică sau operația logică SAU) pentru combinarea operațiilor de comparație. De exemplu, transmitem metoda vârsta și returnăm mesajul corespunzător:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;CheckAge(int&nbsp;age)<br>{<br>&nbsp;&nbsp;&nbsp;return&nbsp;age&nbsp;switch<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;1&nbsp;or&nbsp;&gt;110&nbsp;=&gt;&nbsp;"Vârstă&nbsp;nevalidă",&nbsp;&nbsp;&nbsp;//&nbsp;dacă&nbsp;vârsta&nbsp;este&nbsp;mai&nbsp;mare&nbsp;de&nbsp;110&nbsp;și&nbsp;mai&nbsp;mică&nbsp;de&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;=1&nbsp;and&nbsp;&lt;18&nbsp;=&gt;&nbsp;"Acces&nbsp;interzis",&nbsp;&nbsp;&nbsp;//&nbsp;dacă&nbsp;vârsta&nbsp;este&nbsp;egală&nbsp;sau&nbsp;mai&nbsp;mare&nbsp;de&nbsp;1&nbsp;și&nbsp;mai&nbsp;mică&nbsp;de&nbsp;18<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_&nbsp;=&gt;&nbsp;"Acces&nbsp;permis"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;în&nbsp;celelalte&nbsp;cazuri<br>&nbsp;&nbsp;&nbsp;};<br>}</code></pre>
     </div>
     <p class="paragraph">Aplicare:</p>
     <div class="code-inline">
      <pre><code>Console.WriteLine(CheckAge(200));&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Vârstă&nbsp;nevalidă<br>Console.WriteLine(CheckAge(0));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Vârstă&nbsp;nevalidă<br>Console.WriteLine(CheckAge(17));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Acces&nbsp;interzis<br>Console.WriteLine(CheckAge(18));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Acces&nbsp;permis</code></pre>
     </div>
     <p class="paragraph">Încă un operator logic - not este folosit pentru negare și returnează true dacă argumentul său este egal cu false:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;CheckAge(int&nbsp;age)&nbsp;=&gt;&nbsp;age&nbsp;switch<br>{<br>&nbsp;&nbsp;&nbsp;not&nbsp;33&nbsp;=&gt;&nbsp;"Vârstă&nbsp;obișnuită",&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;dacă&nbsp;vârsta&nbsp;NU&nbsp;este&nbsp;egală&nbsp;cu&nbsp;33<br>&nbsp;&nbsp;&nbsp;_&nbsp;=&gt;&nbsp;"Aveți&nbsp;33&nbsp;de&nbsp;ani"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;în&nbsp;celelalte&nbsp;cazuri,&nbsp;adică&nbsp;dacă&nbsp;vârsta&nbsp;este&nbsp;33<br>};</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
