<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4253419731329045"
            crossorigin="anonymous"></script>


  <link rel="canonical" th:href="${canonicalUrl}" />

    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>
        body {
            background: #ffffff;
        }
    </style>
 </head>
 <body th:with="activeTopic='C-sharp', activeChapter='3.Clase, structuri si spatii de nume in C-sharp', activeLesson='7.Spatii de nume'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Spații de nume</h1>
     <p class="paragraph">De obicei, clasele și alte tipuri definite în .NET nu există singure, ci sunt încapsulate în containere speciale numite spații de nume. Spațiile de nume permit organizarea codului programului în blocuri logice, permitând unirea și separarea unei anumite funcționalități de restul codului, funcționalitate care este legată de o idee comună sau care îndeplinește o anumită sarcină.</p>
     <p class="paragraph">Pentru definirea unui spațiu de nume se folosește cuvântul cheie namespace, urmat de numele spațiului de nume:</p>
     <div class="code-inline">
      <pre><code>namespace&nbsp;nume_spatiu_nume<br>{<br>&nbsp;&nbsp;&nbsp;//&nbsp;conținutul&nbsp;spațiului&nbsp;de&nbsp;nume<br>}</code></pre>
     </div>
     <p class="paragraph">De exemplu, să definim un spațiu de nume într-un fișier Program.cs care se va numi Base:</p>
     <div class="code-inline">
      <pre><code>namespace&nbsp;Base<br>{<br>&nbsp;&nbsp;&nbsp;class&nbsp;Person<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Person(string&nbsp;name)&nbsp;=&gt;&nbsp;this.name&nbsp;=&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Print()&nbsp;=&gt;&nbsp;Console.WriteLine($"Nume:&nbsp;{name}");<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <div class="image-container">
      <img th:src="@{/images/C-sharp/3.Clase,%20structuri%20si%20spatii%20de%20nume%20in%20C-sharp/7.Spatii%20de%20nume/images/image1.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">Aici spațiul de nume conține clasa Person, care are o variabilă name, un constructor și metoda Print.</p>
     <p class="paragraph">Acum să încercăm să folosim clasa Person:</p>
     <div class="code-inline">
      <pre><code>Person&nbsp;tom&nbsp;=&nbsp;new&nbsp;Person("Tom");&nbsp;//&nbsp;Eroare&nbsp;-&nbsp;Visual&nbsp;Studio&nbsp;nu&nbsp;vede&nbsp;clasa&nbsp;Person<br>tom.Print();<br><br>namespace&nbsp;Base<br>{<br>&nbsp;&nbsp;&nbsp;class&nbsp;Person<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Person(string&nbsp;name)&nbsp;=&gt;&nbsp;this.name&nbsp;=&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Print()&nbsp;=&gt;&nbsp;Console.WriteLine($"Nume:&nbsp;{name}");<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <p class="paragraph">Aici, pe prima linie, ne vom confrunta cu o eroare, deoarece Visual Studio nu poate găsi clasa Person. Pentru a accesa clasa Person, trebuie să folosim numele complet al acestei clase, incluzând spațiul de nume:</p>
     <div class="code-inline">
      <pre><code>Base.Person&nbsp;tom&nbsp;=&nbsp;new("Tom");<br>tom.Print();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Nume:&nbsp;Tom<br><br>namespace&nbsp;Base<br>{<br>&nbsp;&nbsp;&nbsp;class&nbsp;Person<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Person(string&nbsp;name)&nbsp;=&gt;&nbsp;this.name&nbsp;=&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Print()&nbsp;=&gt;&nbsp;Console.WriteLine($"Nume:&nbsp;{name}");<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <p class="paragraph">Deoarece clasa Person se află în spațiul de nume Base, numele complet al acesteia este Base.Person. Astfel, folosind acest nume, putem accesa clasa respectivă în afara spațiului său de nume.</p>
     <h2 class="subtitle">Conectarea spațiului de nume</h2>
     <p class="paragraph">Totuși, numele complet al clasei adaugă redundanță codului - mai ales dacă spațiul de nume conține mai multe clase pe care dorim să le folosim. Pentru a nu scrie numele complet al clasei, putem pur și simplu să conectăm spațiul de nume folosind directiva using:</p>
     <div class="code-inline">
      <pre><code>using&nbsp;Base;&nbsp;//&nbsp;conectarea&nbsp;spațiului&nbsp;de&nbsp;nume&nbsp;Base<br><br>Person&nbsp;tom&nbsp;=&nbsp;new("Tom");<br>tom.Print();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Nume:&nbsp;Tom<br><br>namespace&nbsp;Base<br>{<br>&nbsp;&nbsp;&nbsp;class&nbsp;Person<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Person(string&nbsp;name)&nbsp;=&gt;&nbsp;this.name&nbsp;=&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Print()&nbsp;=&gt;&nbsp;Console.WriteLine($"Nume:&nbsp;{name}");<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <div class="image-container">
      <img th:src="@{/images/C-sharp/3.Clase,%20structuri%20si%20spatii%20de%20nume%20in%20C-sharp/7.Spatii%20de%20nume/images/image2.png}" alt="" class="responsive-image">
     </div>
     <h2 class="subtitle">Spații de nume imbricate</h2>
     <p class="paragraph">Unele spații de nume pot conține altele. De exemplu:</p>
     <div class="code-inline">
      <pre><code>namespace&nbsp;Base<br>{<br>&nbsp;&nbsp;&nbsp;namespace&nbsp;PersonTypes<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Person<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OrganisationTypes.Company&nbsp;company;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Person(string&nbsp;name,&nbsp;OrganisationTypes.Company&nbsp;company)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.name&nbsp;=&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.company&nbsp;=&nbsp;company;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Print()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine($"Nume:&nbsp;{name}");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;company.Print();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;namespace&nbsp;OrganisationTypes<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Company<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;title;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Company(string&nbsp;title)&nbsp;=&gt;&nbsp;this.title&nbsp;=&nbsp;title;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Print()&nbsp;=&gt;&nbsp;Console.WriteLine($"Numele&nbsp;companiei:&nbsp;{title}");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <p class="paragraph">În acest caz, clasele Person și Company se află în spații de nume imbricate diferite, așa că pentru a folosi clasa Company în clasa Person, trebuie să specificăm numele clasei, incluzând spațiul de nume: OrganisationTypes.Company (deoarece ambele clase se află în final în spațiul comun Base, nu este necesar să includem Base în numele clasei) sau să conectăm spațiul de nume al clasei Company folosind directiva using.</p>
     <p class="paragraph">Pentru a accesa aceste clase în afara spațiului Base, trebuie să folosim întreaga cale a spațiului de nume:</p>
     <div class="code-inline">
      <pre><code>using&nbsp;Base.PersonTypes;&nbsp;//&nbsp;conectarea&nbsp;spațiului&nbsp;de&nbsp;nume&nbsp;Base.PersonTypes&nbsp;pentru&nbsp;clasa&nbsp;Person<br><br>Base.OrganisationTypes.Company&nbsp;microsoft&nbsp;=&nbsp;new("Microsoft");<br>Person&nbsp;tom&nbsp;=&nbsp;new("Tom",&nbsp;microsoft);<br>tom.Print();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Nume:&nbsp;Tom&nbsp;&nbsp;&nbsp;Numele&nbsp;companiei:&nbsp;Microsoft<br><br>namespace&nbsp;Base<br>{<br>&nbsp;&nbsp;&nbsp;namespace&nbsp;PersonTypes<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Person<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OrganisationTypes.Company&nbsp;company;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Person(string&nbsp;name,&nbsp;OrganisationTypes.Company&nbsp;company)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.name&nbsp;=&nbsp;name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.company&nbsp;=&nbsp;company;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Print()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine($"Nume:&nbsp;{name}");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;company.Print();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;namespace&nbsp;OrganisationTypes<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class&nbsp;Company<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string&nbsp;title;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Company(string&nbsp;title)&nbsp;=&gt;&nbsp;this.title&nbsp;=&nbsp;title;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Print()&nbsp;=&gt;&nbsp;Console.WriteLine($"Numele&nbsp;companiei:&nbsp;{title}");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <h2 class="subtitle">Spații de nume la nivel de fișier</h2>
     <p class="paragraph">Începând cu .NET 6 și C# 10, se pot defini spații de nume la nivel de fișier. De exemplu, să adăugăm un nou fișier cu cod C# în proiect. În Visual Studio, facem clic dreapta pe numele proiectului și în meniul apărut selectăm Add -&gt; New Item...</p>
     <div class="image-container">
      <img th:src="@{/images/C-sharp/3.Clase,%20structuri%20si%20spatii%20de%20nume%20in%20C-sharp/7.Spatii%20de%20nume/images/image3.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">În fereastra de adăugare a unui nou element, selectăm Class și în câmpul Name specificăm numele fișierului Base.cs.</p>
     <div class="image-container">
      <img th:src="@{/images/C-sharp/3.Clase,%20structuri%20si%20spatii%20de%20nume%20in%20C-sharp/7.Spatii%20de%20nume/images/image4.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">După aceasta, în proiect va fi adăugat fișierul Base.cs. Ștergem conținutul implicit și definim următorul cod:</p>
     <div class="code-inline">
      <pre><code>namespace&nbsp;Base;<br><br>class&nbsp;Person<br>{<br>&nbsp;&nbsp;&nbsp;string&nbsp;name;<br>&nbsp;&nbsp;&nbsp;public&nbsp;Person(string&nbsp;name)&nbsp;=&gt;&nbsp;this.name&nbsp;=&nbsp;name;<br>&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Print()&nbsp;=&gt;&nbsp;Console.WriteLine($"Nume:&nbsp;{name}");<br>}</code></pre>
     </div>
     <p class="paragraph">Directiva namespace Base de la începutul fișierului indică faptul că tot conținutul fișierului va aparține spațiului de nume Base.</p>
     <p class="paragraph">Acum conectăm acest spațiu de nume în fișierul Program.cs:</p>
     <div class="code-inline">
      <pre><code>using&nbsp;Base;&nbsp;//&nbsp;conectarea&nbsp;spațiului&nbsp;de&nbsp;nume&nbsp;Base<br><br>Person&nbsp;tom&nbsp;=&nbsp;new("Tom");<br>tom.Print();</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
