<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>
        body {
            background: #ffffff;
        }
    </style>
 </head>
 <body th:with="activeTopic='C-sharp', activeChapter='2.Structura programului', activeLesson='5.Intrare-iesire in consola'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Intrare-ieșire în consolă</h1>
     <h2 class="subtitle">Ieșirea în consolă</h2>
     <p class="paragraph">Pentru a afișa informații în consolă, am utilizat deja metoda încorporată Console.WriteLine. Așadar, dacă dorim să afișăm informații în consolă, trebuie să le transmitem metodei Console.WriteLine:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;hello&nbsp;=&nbsp;"Salut&nbsp;lume";<br>Console.WriteLine(hello);<br>Console.WriteLine("Bun&nbsp;venit&nbsp;în&nbsp;C#!");<br>Console.WriteLine("La&nbsp;revedere,&nbsp;lume...");<br>Console.WriteLine(24.5);</code></pre>
     </div>
     <p class="paragraph">Ieșirea în consolă:</p>
     <div class="image-container">
      <img th:src="@{/images/2.Structura%20programului/5.Intrare-iesire%20in%20consola/images/image1.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">Adesea este necesar să afișăm în consolă, pe aceeași linie, valorile mai multor variabile. În acest caz, putem utiliza interpolarea:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;name&nbsp;=&nbsp;"Tom";<br>int&nbsp;age&nbsp;=&nbsp;34;<br>double&nbsp;height&nbsp;=&nbsp;1.7;<br>Console.WriteLine($"Nume:&nbsp;{name}&nbsp;&nbsp;Vârstă:&nbsp;{age}&nbsp;&nbsp;Înălțime:&nbsp;{height}m");</code></pre>
     </div>
     <p class="paragraph">Pentru a introduce valori individuale în șirul de caractere afișat în consolă, se folosesc acoladele, în care se încadrează valoarea introdusă. Aceasta poate fi valoarea unei variabile ({name}) sau o expresie mai complexă (de exemplu, operația de adunare {4 + 7}). În fața întregului șir se pune semnul dolar $.</p>
     <p class="paragraph">La afișarea în consolă, în locul expresiilor încadrate în acolade, vor fi afișate valorile lor:</p>
     <div class="code-inline">
      <pre><code>Nume:&nbsp;Tom&nbsp;&nbsp;Vârstă:&nbsp;34&nbsp;&nbsp;Înălțime:&nbsp;1,7m</code></pre>
     </div>
     <p class="paragraph">Există un alt mod de a afișa mai multe valori simultan în consolă:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;name&nbsp;=&nbsp;"Tom";<br>int&nbsp;age&nbsp;=&nbsp;34;<br>double&nbsp;height&nbsp;=&nbsp;1.7;<br>Console.WriteLine("Nume:&nbsp;{0}&nbsp;&nbsp;Vârstă:&nbsp;{2}&nbsp;&nbsp;Înălțime:&nbsp;{1}m",&nbsp;name,&nbsp;height,&nbsp;age);</code></pre>
     </div>
     <p class="paragraph">Aici vedem că șirul din Console.WriteLine conține câteva numere în acolade: {0}, {1}, {2}. Acestea sunt substituenți, în locul cărora, la afișarea în consolă, vor fi plasate anumite valori. Valorile care vor fi plasate sunt indicate după șir, separate prin virgulă.</p>
     <p class="paragraph">Ordinea acestor substituenți este importantă. De exemplu, în acest caz, după șir, prima variabilă indicată este name, apoi height și apoi age. Prin urmare, valoarea variabilei name va fi introdusă în locul primului substituent - {0} (numerotarea începe de la zero), height - în locul {1}, iar age - în locul {2}. Astfel, la afișarea în consolă, șirul:</p>
     <div class="code-inline">
      <pre><code>"Nume:&nbsp;{0}&nbsp;&nbsp;Vârstă:&nbsp;{2}&nbsp;&nbsp;Înălțime:&nbsp;{1}m"</code></pre>
     </div>
     <p class="paragraph">va fi înlocuit cu:</p>
     <div class="code-inline">
      <pre><code>"Nume:&nbsp;Tom&nbsp;&nbsp;Vârstă:&nbsp;34&nbsp;&nbsp;Înălțime:&nbsp;1,7m"</code></pre>
     </div>
     <h2 class="subtitle">Console.Write</h2>
     <p class="paragraph">Pe lângă Console.WriteLine(), se poate folosi și metoda Console.Write(). Aceasta funcționează la fel, cu excepția faptului că nu adaugă o trecere la linia următoare, astfel încât ieșirea ulterioară în consolă va fi afișată pe aceeași linie.</p>
     <div class="code-inline">
      <pre><code>string&nbsp;name&nbsp;=&nbsp;"Tom";<br>int&nbsp;age&nbsp;=&nbsp;34;<br>double&nbsp;height&nbsp;=&nbsp;1.7;<br>Console.Write($"Nume:&nbsp;{name}&nbsp;&nbsp;Vârstă:&nbsp;{age}&nbsp;&nbsp;Înălțime:&nbsp;{height}m");</code></pre>
     </div>
     <h2 class="subtitle">Intrarea în consolă</h2>
     <p class="paragraph">Pe lângă afișarea informațiilor în consolă, putem obține informații din consolă. Pentru aceasta, se folosește metoda Console.ReadLine(). Aceasta permite obținerea șirului de caractere introdus.</p>
     <div class="code-inline">
      <pre><code>Console.Write("Introduceți&nbsp;numele&nbsp;dvs.:&nbsp;");<br>string?&nbsp;name&nbsp;=&nbsp;Console.ReadLine();<br>Console.WriteLine($"Salut,&nbsp;{name}");</code></pre>
     </div>
     <p class="paragraph">În acest caz, tot ce introduce utilizatorul este transmis variabilei name cu ajutorul metodei Console.ReadLine().</p>
     <p class="paragraph">Exemplu de rulare a programului:</p>
     <div class="code-inline">
      <pre><code>Introduceți&nbsp;numele&nbsp;dvs.:&nbsp;Tom<br>Salut,&nbsp;Tom</code></pre>
     </div>
     <p class="paragraph">Particularitatea metodei Console.ReadLine() este că poate citi informații din consolă doar sub formă de șir de caractere. În plus, este posibilă situația în care pentru metoda Console.ReadLine nu există șiruri disponibile pentru citire, adică atunci când nu are ce citi, returnează valoarea null, adică, practic, absența unei valori.</p>
     <p class="paragraph">Pentru a reflecta această situație, definim variabila name, în care obținem intrarea din consolă, ca variabilă de tip string?. Aici, string indică faptul că variabila poate stoca valori de tip șir de caractere. Iar semnul întrebării ? indică faptul că variabila poate stoca și valoarea null, adică, practic, să nu aibă nicio valoare. Ulterior, vom discuta mai detaliat despre null și cum să lucrăm cu acesta.</p>
     <p class="paragraph">Totuși, poate apărea întrebarea: ce facem dacă dorim să introducem vârsta într-o variabilă de tip int sau altă informație în variabile de tip double sau decimal? Implicit, platforma .NET oferă o serie de metode care permit conversia diverselor valori la tipurile int, double etc. Unele dintre aceste metode sunt:</p>
     <ul class="enumeration">
      <li>Convert.ToInt32() (convertește la tipul int)</li>
      <li>Convert.ToDouble() (convertește la tipul double)</li>
      <li>Convert.ToDecimal() (convertește la tipul decimal)</li>
     </ul>
     <p class="paragraph">Exemplu de introducere a valorilor:</p>
     <div class="code-inline">
      <pre><code>Console.Write("Introduceți&nbsp;numele:&nbsp;");<br>string?&nbsp;name&nbsp;=&nbsp;Console.ReadLine();<br><br>Console.Write("Introduceți&nbsp;vârsta:&nbsp;");<br>int&nbsp;age&nbsp;=&nbsp;Convert.ToInt32(Console.ReadLine());<br><br>Console.Write("Introduceți&nbsp;înălțimea:&nbsp;");<br>double&nbsp;height&nbsp;=&nbsp;Convert.ToDouble(Console.ReadLine());<br><br>Console.Write("Introduceți&nbsp;salariul:&nbsp;");<br>decimal&nbsp;salary&nbsp;=&nbsp;Convert.ToDecimal(Console.ReadLine());<br><br>Console.WriteLine($"Nume:&nbsp;{name}&nbsp;&nbsp;Vârstă:&nbsp;{age}&nbsp;&nbsp;Înălțime:&nbsp;{height}m&nbsp;&nbsp;Salariu:&nbsp;{salary}$");</code></pre>
     </div>
     <p class="paragraph">La introducerea datelor, este important să ținem cont de sistemul de operare curent. În unele culturi, separatorul între partea întreagă și cea fracționară este punctul (SUA, Marea Britanie...), în altele - virgula (Rusia, Germania...). De exemplu, dacă sistemul de operare curent este în limba rusă, trebuie să introducem numerele fracționare cu separatorul virgulă. Dacă localizarea este în engleză, separatorul între partea întreagă și cea fracționară va fi punctul.</p>
     <p class="paragraph">Exemplu de rulare a programului:</p>
     <div class="image-container">
      <img th:src="@{/images/2.Structura%20programului/5.Intrare-iesire%20in%20consola/images/image2.png}" alt="" class="responsive-image">
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
