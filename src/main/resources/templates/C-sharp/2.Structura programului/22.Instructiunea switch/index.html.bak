<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>
        body {
            background: #ffffff;
        }
    </style>
 </head>
 <body th:with="activeTopic='C-sharp', activeChapter='2.Structura programului', activeLesson='22.Instructiunea switch'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Instrucțiunea switch</h1>
     <p class="paragraph">Instrucțiunea switch/case evaluează o expresie și compară valoarea acesteia cu un set de valori. În cazul unei potriviri, execută un anumit cod.</p>
     <p class="paragraph">Instrucțiunea switch are următoarea formă:</p>
     <div class="code-inline">
      <pre><code>switch&nbsp;(expresie)<br>{<br>&nbsp;&nbsp;&nbsp;case&nbsp;valoare1:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;codul&nbsp;executat&nbsp;dacă&nbsp;expresia&nbsp;are&nbsp;valoarea1<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;case&nbsp;valoare2:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;codul&nbsp;executat&nbsp;dacă&nbsp;expresia&nbsp;are&nbsp;valoarea2<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;//&nbsp;.............<br>&nbsp;&nbsp;&nbsp;case&nbsp;valoareN:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;codul&nbsp;executat&nbsp;dacă&nbsp;expresia&nbsp;are&nbsp;valoareaN<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;default:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;codul&nbsp;executat&nbsp;dacă&nbsp;expresia&nbsp;nu&nbsp;are&nbsp;niciuna&nbsp;dintre&nbsp;valorile&nbsp;de&nbsp;mai&nbsp;sus<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>}</code></pre>
     </div>
     <p class="paragraph">După cuvântul cheie switch în paranteze se află expresia care urmează să fie evaluată. Valoarea acestei expresii este comparată pe rând cu valorile specificate după operatorul case. Dacă se găsește o potrivire, se va executa blocul case corespunzător.</p>
     <p class="paragraph">La sfârșitul fiecărui bloc case trebuie să fie plasat unul dintre operatorii de transfer: break, goto case, return sau throw. De obicei, se folosește operatorul break. Prin utilizarea acestuia, celelalte blocuri case nu vor fi executate.</p>
     <p class="paragraph">Exemplu:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;name&nbsp;=&nbsp;"Tom";<br><br>switch&nbsp;(name)<br>{<br>&nbsp;&nbsp;&nbsp;case&nbsp;"Bob":<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("Numele&nbsp;tău&nbsp;este&nbsp;Bob");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;case&nbsp;"Tom":<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("Numele&nbsp;tău&nbsp;este&nbsp;Tom");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;case&nbsp;"Sam":<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("Numele&nbsp;tău&nbsp;este&nbsp;Sam");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>}</code></pre>
     </div>
     <p class="paragraph">În acest exemplu, instrucțiunea switch compară valoarea variabilei name cu un set de valori specificate după operatorii case. Deoarece valoarea variabilei name este șirul "Tom", se va executa blocul:</p>
     <div class="code-inline">
      <pre><code>case&nbsp;"Tom":<br>&nbsp;&nbsp;&nbsp;Console.WriteLine("Numele&nbsp;tău&nbsp;este&nbsp;Tom");<br>&nbsp;&nbsp;&nbsp;break;</code></pre>
     </div>
     <p class="paragraph">Astfel, pe consolă va apărea mesajul:</p>
     <div class="code-inline">
      <pre><code>Numele&nbsp;tău&nbsp;este&nbsp;Tom</code></pre>
     </div>
     <p class="paragraph">Dacă valoarea variabilei name nu se potrivește cu niciuna dintre valorile specificate după operatorii case, atunci nu se execută niciun bloc case. Totuși, dacă dorim să executăm anumite acțiuni chiar și în acest caz, putem adăuga un bloc opțional default. De exemplu:</p>
     <div class="code-inline">
      <pre><code>string&nbsp;name&nbsp;=&nbsp;"Alex";<br><br>switch&nbsp;(name)<br>{<br>&nbsp;&nbsp;&nbsp;case&nbsp;"Bob":<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("Numele&nbsp;tău&nbsp;este&nbsp;Bob");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;case&nbsp;"Tom":<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("Numele&nbsp;tău&nbsp;este&nbsp;Tom");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;case&nbsp;"Sam":<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("Numele&nbsp;tău&nbsp;este&nbsp;Sam");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;default:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("Nume&nbsp;necunoscut");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>}</code></pre>
     </div>
     <p class="paragraph">În acest caz, niciuna dintre valorile specificate după operatorii case nu se potrivește cu valoarea variabilei name, deci se va executa blocul default:</p>
     <div class="code-inline">
      <pre><code>default:<br>&nbsp;&nbsp;&nbsp;Console.WriteLine("Nume&nbsp;necunoscut");<br>&nbsp;&nbsp;&nbsp;break;</code></pre>
     </div>
     <p class="paragraph">Dacă dorim ca, după executarea unui bloc case, să se execute un alt bloc case, putem folosi operatorul goto case în loc de break:</p>
     <div class="code-inline">
      <pre><code>int&nbsp;number&nbsp;=&nbsp;1;<br><br>switch&nbsp;(number)<br>{<br>&nbsp;&nbsp;&nbsp;case&nbsp;1:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("case&nbsp;1");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;goto&nbsp;case&nbsp;5;&nbsp;//&nbsp;transfer&nbsp;către&nbsp;case&nbsp;5<br>&nbsp;&nbsp;&nbsp;case&nbsp;3:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("case&nbsp;3");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;case&nbsp;5:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("case&nbsp;5");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>&nbsp;&nbsp;&nbsp;default:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine("default");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;<br>}</code></pre>
     </div>
     <h2 class="subtitle">Returnarea unei valori din switch</h2>
     <p class="paragraph">Instrucțiunea switch permite returnarea unei valori. Pentru returnarea unei valori în blocurile case poate fi utilizat operatorul return. De exemplu, să definim următoarea metodă:</p>
     <div class="code-inline">
      <pre><code>int&nbsp;DoOperation(int&nbsp;op,&nbsp;int&nbsp;a,&nbsp;int&nbsp;b)<br>{<br>&nbsp;&nbsp;&nbsp;switch&nbsp;(op)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;1:&nbsp;return&nbsp;a&nbsp;+&nbsp;b;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:&nbsp;return&nbsp;a&nbsp;-&nbsp;b;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;3:&nbsp;return&nbsp;a&nbsp;*&nbsp;b;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:&nbsp;return&nbsp;0;<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <p class="paragraph">În metoda DoOperation se transmite un cod numeric al operației și doi operanzi. În funcție de codul operației, se va efectua o anumită operație asupra operanzilor, iar rezultatul acesteia este returnat din metodă. Dacă codul operației nu este 1, 2 sau 3, atunci metoda va returna 0.</p>
     <p class="paragraph">Apoi putem apela această metodă:</p>
     <div class="code-inline">
      <pre><code>int&nbsp;DoOperation(int&nbsp;op,&nbsp;int&nbsp;a,&nbsp;int&nbsp;b)<br>{<br>&nbsp;&nbsp;&nbsp;switch&nbsp;(op)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;1:&nbsp;return&nbsp;a&nbsp;+&nbsp;b;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;2:&nbsp;return&nbsp;a&nbsp;-&nbsp;b;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;3:&nbsp;return&nbsp;a&nbsp;*&nbsp;b;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:&nbsp;return&nbsp;0;<br>&nbsp;&nbsp;&nbsp;}<br>}<br><br>int&nbsp;result1&nbsp;=&nbsp;DoOperation(1,&nbsp;10,&nbsp;5);&nbsp;//&nbsp;15<br>Console.WriteLine(result1);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;15<br><br>int&nbsp;result2&nbsp;=&nbsp;DoOperation(3,&nbsp;10,&nbsp;5);&nbsp;//&nbsp;50<br>Console.WriteLine(result2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;50</code></pre>
     </div>
     <h2 class="subtitle">Obținerea rezultatului din switch</h2>
     <p class="paragraph">Deși instrucțiunea switch din exemplul anterior funcționează perfect, o putem simplifica pentru a obține rezultatul direct din instrucțiunea switch:</p>
     <div class="code-inline">
      <pre><code>int&nbsp;DoOperation(int&nbsp;op,&nbsp;int&nbsp;a,&nbsp;int&nbsp;b)<br>{<br>&nbsp;&nbsp;&nbsp;int&nbsp;result&nbsp;=&nbsp;op&nbsp;switch&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;a&nbsp;+&nbsp;b,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;a&nbsp;-&nbsp;b,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;=&gt;&nbsp;a&nbsp;*&nbsp;b,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_&nbsp;=&gt;&nbsp;0<br>&nbsp;&nbsp;&nbsp;};<br>&nbsp;&nbsp;&nbsp;return&nbsp;result;<br>}</code></pre>
     </div>
     <p class="paragraph">Acum nu mai este necesar operatorul case, iar după valoarea comparată este plasat operatorul săgeată =&gt;. Valoarea din partea dreaptă a săgeții servește drept valoare returnată. În locul operatorului default se folosește _. În cele din urmă, rezultatul instrucțiunii switch va fi atribuit variabilei result.</p>
     <p class="paragraph">Putem returna direct rezultatul din metodă fără a atribui variabilei rezultatul instrucțiunii switch:</p>
     <div class="code-inline">
      <pre><code>int&nbsp;DoOperation(int&nbsp;op,&nbsp;int&nbsp;a,&nbsp;int&nbsp;b)<br>{<br>&nbsp;&nbsp;&nbsp;return&nbsp;op&nbsp;switch<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;a&nbsp;+&nbsp;b,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;a&nbsp;-&nbsp;b,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;=&gt;&nbsp;a&nbsp;*&nbsp;b,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_&nbsp;=&gt;&nbsp;0<br>&nbsp;&nbsp;&nbsp;};<br>}</code></pre>
     </div>
     <p class="paragraph">Sau putem face metoda și mai scurtă:</p>
     <div class="code-inline">
      <pre><code>int&nbsp;DoOperation(int&nbsp;op,&nbsp;int&nbsp;a,&nbsp;int&nbsp;b)&nbsp;=&gt;&nbsp;op&nbsp;switch<br>{<br>&nbsp;&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;a&nbsp;+&nbsp;b,<br>&nbsp;&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;a&nbsp;-&nbsp;b,<br>&nbsp;&nbsp;&nbsp;3&nbsp;=&gt;&nbsp;a&nbsp;*&nbsp;b,<br>&nbsp;&nbsp;&nbsp;_&nbsp;=&gt;&nbsp;0<br>};</code></pre>
     </div>
     <p class="paragraph">Este important de menționat că această simplificare se aplică doar construcțiilor switch care returnează anumite valori, cum este în exemplul de mai sus.</p>
     <p class="paragraph">De asemenea, trebuie să ne asigurăm că metoda returnează o valoare în toate cazurile posibile. De exemplu, următoarea versiune a metodei nu va funcționa:</p>
     <div class="code-inline">
      <pre><code>int&nbsp;DoOperation(int&nbsp;op,&nbsp;int&nbsp;a,&nbsp;int&nbsp;b)<br>{<br>&nbsp;&nbsp;&nbsp;return&nbsp;op&nbsp;switch<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;=&gt;&nbsp;a&nbsp;+&nbsp;b,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;=&gt;&nbsp;a&nbsp;-&nbsp;b,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;=&gt;&nbsp;a&nbsp;*&nbsp;b<br>&nbsp;&nbsp;&nbsp;};<br>}</code></pre>
     </div>
     <p class="paragraph">Această versiune a metodei returnează o valoare doar dacă codul operației este 1, 2 sau 3. Dar ce se întâmplă dacă se transmite valoarea 4 sau altă valoare? Această versiune a metodei nu se va compila.</p>
     <p class="paragraph">De aceea, trebuie să prevedem returnarea unei valori din metodă în toate cazurile posibile. Putem face acest lucru adăugând un bloc default (sau _) în instrucțiunea switch, care va returna o valoare pentru toate celelalte cazuri.</p>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
