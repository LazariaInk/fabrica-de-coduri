<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4253419731329045"
            crossorigin="anonymous"></script>


  <link rel="canonical" th:href="${canonicalUrl}" />

    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>
        body {
            background: #ffffff;
        }
    </style>
 </head>
 <body th:with="activeTopic='C-sharp', activeChapter='17.LINQ', activeLesson='5.Unirea, intersectarea si diferenta colectiilor'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Unirea, intersectarea și diferența colecțiilor</h1>
     <p class="paragraph">LINQ oferă mai multe metode pentru a lucra cu colecțiile ca și cu mulțimile, și anume pentru a găsi diferența, unirea și intersectarea acestora.</p>
     <h2 class="subtitle">Diferența secvențelor</h2>
     <p class="paragraph">Cu ajutorul metodei Except() se poate obține diferența dintre două secvențe:</p>
     <div class="code-inline">
      <pre><code>string[]&nbsp;soft&nbsp;=&nbsp;{&nbsp;"Microsoft",&nbsp;"Google",&nbsp;"Apple"&nbsp;};<br>string[]&nbsp;hard&nbsp;=&nbsp;{&nbsp;"Apple",&nbsp;"IBM",&nbsp;"Samsung"&nbsp;};<br><br>//&nbsp;diferența&nbsp;secvențelor<br>var&nbsp;result&nbsp;=&nbsp;soft.Except(hard);<br><br>foreach&nbsp;(string&nbsp;s&nbsp;in&nbsp;result)<br>&nbsp;&nbsp;&nbsp;Console.WriteLine(s);</code></pre>
     </div>
     <p class="paragraph">În acest caz, din array-ul soft sunt eliminate toate elementele care există în array-ul hard. Rezultatul operației va fi două elemente:</p>
     <div class="code-inline">
      <pre><code>Microsoft<br>Google</code></pre>
     </div>
     <h2 class="subtitle">Intersectarea secvențelor</h2>
     <p class="paragraph">Pentru a obține intersectarea secvențelor, adică elementele comune pentru ambele seturi, se folosește metoda Intersect:</p>
     <div class="code-inline">
      <pre><code>string[]&nbsp;soft&nbsp;=&nbsp;{&nbsp;"Microsoft",&nbsp;"Google",&nbsp;"Apple"&nbsp;};<br>string[]&nbsp;hard&nbsp;=&nbsp;{&nbsp;"Apple",&nbsp;"IBM",&nbsp;"Samsung"&nbsp;};<br><br>//&nbsp;intersectarea&nbsp;secvențelor<br>var&nbsp;result&nbsp;=&nbsp;soft.Intersect(hard);<br><br>foreach&nbsp;(string&nbsp;s&nbsp;in&nbsp;result)<br>&nbsp;&nbsp;&nbsp;Console.WriteLine(s);</code></pre>
     </div>
     <p class="paragraph">Deoarece ambele seturi au doar un singur element comun, doar acesta va fi inclus în selecția rezultată:</p>
     <div class="code-inline">
      <pre><code>Apple</code></pre>
     </div>
     <h2 class="subtitle">Eliminarea duplicatelor</h2>
     <p class="paragraph">Pentru a elimina duplicatele dintr-un set se utilizează metoda Distinct:</p>
     <div class="code-inline">
      <pre><code>string[]&nbsp;soft&nbsp;=&nbsp;{&nbsp;"Microsoft",&nbsp;"Google",&nbsp;"Apple",&nbsp;"Microsoft",&nbsp;"Google"&nbsp;};<br><br>//&nbsp;eliminarea&nbsp;duplicatelor<br>var&nbsp;result&nbsp;=&nbsp;soft.Distinct();<br><br>foreach&nbsp;(string&nbsp;s&nbsp;in&nbsp;result)<br>&nbsp;&nbsp;&nbsp;Console.WriteLine(s);</code></pre>
     </div>
     <p class="paragraph">Rezultatul:</p>
     <div class="code-inline">
      <pre><code>Microsoft<br>Google<br>Apple</code></pre>
     </div>
     <h2 class="subtitle">Unirea secvențelor</h2>
     <p class="paragraph">Pentru a uni două secvențe se utilizează metoda Union. Rezultatul său este un nou set care conține elemente atât din prima cât și din a doua secvență. Elementele duplicate sunt adăugate în rezultat doar o singură dată:</p>
     <div class="code-inline">
      <pre><code>string[]&nbsp;soft&nbsp;=&nbsp;{&nbsp;"Microsoft",&nbsp;"Google",&nbsp;"Apple"&nbsp;};<br>string[]&nbsp;hard&nbsp;=&nbsp;{&nbsp;"Apple",&nbsp;"IBM",&nbsp;"Samsung"&nbsp;};<br><br>//&nbsp;unirea&nbsp;secvențelor<br>var&nbsp;result&nbsp;=&nbsp;soft.Union(hard);<br><br>foreach&nbsp;(string&nbsp;s&nbsp;in&nbsp;result)<br>&nbsp;&nbsp;&nbsp;Console.WriteLine(s);</code></pre>
     </div>
     <p class="paragraph">Rezultatul operației va fi următorul set:</p>
     <div class="code-inline">
      <pre><code>Microsoft<br>Google<br>Apple<br>IBM<br>Samsung</code></pre>
     </div>
     <p class="paragraph">Dacă dorim o simplă concatenare a celor două seturi, putem folosi metoda Concat:</p>
     <div class="code-inline">
      <pre><code>var&nbsp;result&nbsp;=&nbsp;soft.Concat(hard);</code></pre>
     </div>
     <p class="paragraph">În acest caz, elementele care apar în ambele seturi se vor dubla în secvența rezultată.</p>
     <p class="paragraph">Aplicarea consecutivă a metodelor Concat și Distinct va fi similară cu acțiunea metodei Union.</p>
     <h2 class="subtitle">Lucrul cu obiecte complexe</h2>
     <p class="paragraph">Pentru compararea obiectelor în secvențe se folosesc implementările metodelor GetHashCode() și Equals(). Prin urmare, dacă dorim să lucrăm cu secvențe care conțin obiecte ale claselor sau structurilor proprii, trebuie să definim aceste metode pentru ele:</p>
     <div class="code-inline">
      <pre><code>Person[]&nbsp;students&nbsp;=&nbsp;{&nbsp;new&nbsp;Person("Tom"),&nbsp;new&nbsp;Person("Bob"),&nbsp;new&nbsp;Person("Sam")&nbsp;};<br>Person[]&nbsp;employees&nbsp;=&nbsp;{&nbsp;new&nbsp;Person("Tom"),&nbsp;new&nbsp;Person("Bob"),&nbsp;new&nbsp;Person("Mike")&nbsp;};<br><br>//&nbsp;unirea&nbsp;secvențelor<br>var&nbsp;people&nbsp;=&nbsp;students.Union(employees);<br><br>foreach&nbsp;(Person&nbsp;person&nbsp;in&nbsp;people)<br>&nbsp;&nbsp;&nbsp;Console.WriteLine(person.Name);<br><br>class&nbsp;Person<br>{<br>&nbsp;&nbsp;&nbsp;public&nbsp;string&nbsp;Name&nbsp;{&nbsp;get;&nbsp;}<br>&nbsp;&nbsp;&nbsp;public&nbsp;Person(string&nbsp;name)&nbsp;=&gt;&nbsp;Name&nbsp;=&nbsp;name;<br><br>&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;bool&nbsp;Equals(object?&nbsp;obj)<br>&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(obj&nbsp;is&nbsp;Person&nbsp;person)&nbsp;return&nbsp;Name&nbsp;==&nbsp;person.Name;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;<br>&nbsp;&nbsp;&nbsp;}<br><br>&nbsp;&nbsp;&nbsp;public&nbsp;override&nbsp;int&nbsp;GetHashCode()&nbsp;=&gt;&nbsp;Name.GetHashCode();<br>}</code></pre>
     </div>
     <p class="paragraph">Aici, obiectele Person sunt comparate pe baza valorii proprietății lor Name - dacă numele sunt egale, și obiectele Person sunt egale. Afișarea pe consolă:</p>
     <div class="code-inline">
      <pre><code>Tom<br>Bob<br>Sam<br>Mike</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
