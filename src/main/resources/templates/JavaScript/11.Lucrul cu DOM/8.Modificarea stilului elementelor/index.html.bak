<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4253419731329045"
            crossorigin="anonymous"></script>


  <link rel="canonical" th:href="${canonicalUrl}" />

    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='JavaScript', activeChapter='11.Lucrul cu DOM', activeLesson='8.Modificarea stilului elementelor'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Modificarea stilului elementelor</h1>
     <p class="paragraph">Pentru lucrul cu proprietățile stilistice ale elementelor în JavaScript, se folosesc, în principal, două abordări:</p>
     <ul class="enumeration">
      <li>Modificarea proprietății style</li>
      <li>Modificarea valorii atributului class</li>
     </ul>
     <h2 class="subtitle">Proprietatea style</h2>
     <p class="paragraph">Proprietatea style reprezintă un obiect complex CSSStyleDeclaration și se corelează direct cu atributul style al elementului HTML. Acest obiect conține un set de proprietăți CSS, la care se poate accesa în următorul mod:</p>
     <div class="code-inline">
      <pre><code>element.style.proprietateCSS</code></pre>
     </div>
     <p class="paragraph">De exemplu, să setăm culoarea fontului unui titlu:</p>
     <div class="code-inline">
      <pre><code>&lt;!DOCTYPE&nbsp;html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;charset="utf-8"&nbsp;/&gt;<br>&nbsp;&nbsp;&nbsp;&lt;title&gt;FDC.COM&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&nbsp;&nbsp;&nbsp;&lt;h1&nbsp;id="header"&gt;Home&nbsp;Page&lt;/h1&gt;<br>&nbsp;&nbsp;&nbsp;&lt;script&gt;<br>&nbsp;&nbsp;&nbsp;const&nbsp;header&nbsp;=&nbsp;document.getElementById("header");<br>&nbsp;&nbsp;&nbsp;//&nbsp;obținem&nbsp;valoarea&nbsp;proprietății&nbsp;color<br>&nbsp;&nbsp;&nbsp;console.log(header.style.color);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;șir&nbsp;gol<br>&nbsp;&nbsp;&nbsp;//&nbsp;modificăm&nbsp;valoarea&nbsp;proprietății&nbsp;color<br>&nbsp;&nbsp;&nbsp;header.style.color&nbsp;=&nbsp;"navy";<br>&nbsp;&nbsp;&nbsp;//&nbsp;obținem&nbsp;din&nbsp;nou&nbsp;valoarea&nbsp;proprietății&nbsp;color<br>&nbsp;&nbsp;&nbsp;console.log(header.style.color);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;navy<br>&nbsp;&nbsp;&nbsp;&lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</code></pre>
     </div>
     <p class="paragraph">Aici, pentru titlu, stabilim culoarea albastră navy. În acest caz, numele proprietății color corespunde cu proprietatea css. Analog, am fi putut stabili culoarea folosind css:</p>
     <div class="code-inline">
      <pre><code>#header{<br>&nbsp;&nbsp;&nbsp;color:navy;<br>}</code></pre>
     </div>
     <p class="paragraph">Cu toate acestea, unele proprietăți css în nume au un cratimă, de exemplu, font-family. În JavaScript pentru aceste proprietăți cratima nu este folosită. Doar prima literă, care vine după cratimă, este transformată în majusculă:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;header&nbsp;=&nbsp;document.getElementById("header");<br>header.style.fontFamily&nbsp;=&nbsp;"Verdana";</code></pre>
     </div>
     <h2 class="subtitle">Proprietatea className</h2>
     <p class="paragraph">Cu ajutorul proprietății className, se poate obține sau seta valoarea atributului class al unui element HTML. De exemplu:</p>
     <div class="code-inline">
      <pre><code>&lt;!DOCTYPE&nbsp;html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;charset="utf-8"&nbsp;/&gt;<br>&nbsp;&nbsp;&nbsp;&lt;title&gt;FDC.COM&lt;/title&gt;<br>&nbsp;&nbsp;&nbsp;&lt;style&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.header-color&nbsp;{color:navy;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.header-font&nbsp;{font-family:&nbsp;Verdana;}<br>&nbsp;&nbsp;&nbsp;&lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&nbsp;&nbsp;&nbsp;&lt;h1&nbsp;id="header"&nbsp;class="header-font"&gt;Home&nbsp;Page&lt;/h1&gt;<br>&nbsp;&nbsp;&nbsp;&lt;script&gt;<br>&nbsp;&nbsp;&nbsp;const&nbsp;header&nbsp;=&nbsp;document.getElementById("header");<br>&nbsp;&nbsp;&nbsp;//&nbsp;obținem&nbsp;clasa&nbsp;curentă<br>&nbsp;&nbsp;&nbsp;console.log(header.className);&nbsp;&nbsp;//&nbsp;header-font<br>&nbsp;&nbsp;&nbsp;//&nbsp;setăm&nbsp;clasa&nbsp;elementului<br>&nbsp;&nbsp;&nbsp;header.className&nbsp;=&nbsp;"header-color";&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;//&nbsp;obținem&nbsp;clasa&nbsp;curentă<br>&nbsp;&nbsp;&nbsp;console.log(header.className);&nbsp;&nbsp;//&nbsp;header-color<br>&nbsp;&nbsp;&nbsp;&lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</code></pre>
     </div>
     <p class="paragraph">Aici obținem clasa curentă a titlului și apoi o schimbăm pe cea nouă - "header-color". Datorită utilizării claselor, nu va trebui să configurăm fiecare proprietate css individual cu ajutorul proprietății style.</p>
     <p class="paragraph">Totuși, trebuie avut în vedere că valoarea anterioară a atributului class este eliminată. Prin urmare, dacă trebuie să adăugăm o clasă, trebuie să combinăm numele acesteia cu clasa veche:</p>
     <div class="code-inline">
      <pre><code>header.className&nbsp;=&nbsp;header.className&nbsp;+&nbsp;"&nbsp;header-color";&nbsp;</code></pre>
     </div>
     <p class="paragraph">Și dacă trebuie să eliminăm toate clasele, atunci putem atribui proprietății un șir gol:</p>
     <div class="code-inline">
      <pre><code>header.className&nbsp;=&nbsp;"";</code></pre>
     </div>
     <h2 class="subtitle">Proprietatea classList</h2>
     <p class="paragraph">Mai sus am examinat cum se adaugă clase unui element, însă pentru gestionarea mai multor clase este mult mai convenabil să se folosească proprietatea classList. Această proprietate reprezintă un obiect care implementează următoarele metode:</p>
     <ul class="enumeration">
      <li>add(className): adaugă clasa className</li>
      <li>remove(className): elimină clasa className</li>
      <li>toggle(className): comută clasa elementului pe className. Dacă clasa nu există, este adăugată, dacă există, este eliminată</li>
     </ul>
     <p class="paragraph">De exemplu:</p>
     <div class="code-inline">
      <pre><code>&lt;!DOCTYPE&nbsp;html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;charset="utf-8"&nbsp;/&gt;<br>&nbsp;&nbsp;&nbsp;&lt;title&gt;FDC.COM&lt;/title&gt;<br>&nbsp;&nbsp;&nbsp;&lt;style&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.header-color&nbsp;{color:navy;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.header-font&nbsp;{font-family:&nbsp;Verdana;}<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.header-size&nbsp;{font-size:&nbsp;22px;}<br>&nbsp;&nbsp;&nbsp;&lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&nbsp;&nbsp;&nbsp;&lt;h1&nbsp;id="header"&nbsp;class="header-size"&gt;Home&nbsp;Page&lt;/h1&gt;<br>&nbsp;&nbsp;&nbsp;&lt;script&gt;<br>&nbsp;&nbsp;&nbsp;const&nbsp;header&nbsp;=&nbsp;document.getElementById("header");<br>&nbsp;&nbsp;&nbsp;header.classList.remove("header-size");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;&nbsp;eliminăm&nbsp;clasa&nbsp;header-size<br>&nbsp;&nbsp;&nbsp;header.classList.add("header-font");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;adăugăm&nbsp;clasa&nbsp;header-font<br>&nbsp;&nbsp;&nbsp;header.classList.toggle("header-color");&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;comutăm&nbsp;clasa&nbsp;header-color<br>&nbsp;&nbsp;&nbsp;&lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</code></pre>
     </div>
     <p class="paragraph">Trebuie de menționat că metoda toggle() poate accepta adițional o condiție ca al doilea parametru - dacă această condiție este adevărată (returnează true), atunci clasa este comutată:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;i&nbsp;=&nbsp;5;<br>const&nbsp;condition&nbsp;=&nbsp;i&nbsp;&gt;&nbsp;0;&nbsp;//&nbsp;condiția<br>const&nbsp;header&nbsp;=&nbsp;document.getElementById("header");<br>header.classList.toggle("header-color",&nbsp;condition);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;comutăm&nbsp;clasa&nbsp;header-color&nbsp;în&nbsp;funcție&nbsp;de&nbsp;condiție</code></pre>
     </div>
     <p class="paragraph">Dacă este necesar, putem parcurge toate clasele din lista classList sau obține clase individuale după index:</p>
     <div class="code-inline">
      <pre><code>//&nbsp;parcurgerea&nbsp;listei&nbsp;de&nbsp;clase<br>for(headerClass&nbsp;of&nbsp;header.classList){<br>&nbsp;<br><br>&nbsp;&nbsp;&nbsp;console.log(headerClass);<br>}<br>console.log(header.classList[0]);&nbsp;&nbsp;&nbsp;//&nbsp;prima&nbsp;clasă&nbsp;setată</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
