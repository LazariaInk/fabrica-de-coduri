<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='JavaScript', activeChapter='10.Colectii si iteratori', activeLesson='4.Map'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Map</h1>
     <p class="paragraph">Obiectul Map, sau dicționar, reprezintă o structură de date în care fiecare element are o cheie și o valoare. Cheile în cadrul dicționarului sunt unice, adică unui singur chei îi poate fi asociat doar un element. Pentru a crea un dicționar, se utilizează constructorul obiectului Map:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;myMap&nbsp;=&nbsp;new&nbsp;Map();</code></pre>
     </div>
     <p class="paragraph">De asemenea, se poate inițializa dicționarul cu valori inițiale. Pentru aceasta, se transmite un array către constructor, în care elementele reprezintă alte array-uri cu două elemente - primul element va fi cheia, iar al doilea va fi valoarea:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;myMap&nbsp;=&nbsp;new&nbsp;Map([[1,&nbsp;"a"],&nbsp;[2,&nbsp;"b"],&nbsp;[3,&nbsp;"c"]]);<br>console.log(myMap);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Map(3){1&nbsp;=&gt;&nbsp;"a",&nbsp;2&nbsp;=&gt;&nbsp;"b",&nbsp;3&nbsp;=&gt;&nbsp;"c"}</code></pre>
     </div>
     <p class="paragraph">În acest caz, numerele 1, 2, 3 sunt chei, iar șirurile "a", "b", "c" sunt valorile.</p>
     <p class="paragraph">Menționăm că cheile și valorile nu neapărat trebuie să fie de același tip. Tipul cheilor și al valorilor pot să coincidă:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;dict&nbsp;=&nbsp;new&nbsp;Map([["red",&nbsp;"roșu"],&nbsp;["green",&nbsp;"verde"],&nbsp;["blue",&nbsp;"albastru"]]);<br>console.log(dict);&nbsp;&nbsp;//&nbsp;Harta(3)&nbsp;{"red"&nbsp;=&gt;&nbsp;"roșu",&nbsp;"green"&nbsp;=&gt;&nbsp;"verde",&nbsp;"blue"&nbsp;=&gt;&nbsp;"albastru"}</code></pre>
     </div>
     <h2 class="subtitle">Dimensiunea dicționarului</h2>
     <p class="paragraph">Cu ajutorul proprietății size poți verifica numărul de elemente dintr-un Map:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;dict&nbsp;=&nbsp;new&nbsp;Map([["red",&nbsp;"roșu"],&nbsp;["green",&nbsp;"verde"],&nbsp;["blue",&nbsp;"albastru"]]);<br>console.log(dict.size);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;3</code></pre>
     </div>
     <h2 class="subtitle">Adăugarea și modificarea elementelor</h2>
     <p class="paragraph">Pentru a seta o valoare, se folosește metoda set():</p>
     <div class="code-inline">
      <pre><code>const&nbsp;dict&nbsp;=&nbsp;new&nbsp;Map([["red",&nbsp;"roșu"],&nbsp;["green",&nbsp;"verde"],&nbsp;["blue",&nbsp;"albastru"]]);<br>dict.set("yellow",&nbsp;"galben");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;adăugare&nbsp;element<br>dict.set("red",&nbsp;"roșu&nbsp;închis");&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;modificare&nbsp;element<br>console.log(dict);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Map(4)&nbsp;{"red"&nbsp;=&gt;&nbsp;"roșu&nbsp;închis",&nbsp;"green"&nbsp;=&gt;&nbsp;"verde",&nbsp;"blue"&nbsp;=&gt;&nbsp;"albastru",&nbsp;"yellow"&nbsp;=&gt;&nbsp;"galben"}</code></pre>
     </div>
     <p class="paragraph">Primul parametru al metodei set() reprezintă cheia, iar al doilea parametru - valoarea elementului. Dacă nu există elemente pentru acea cheie, se adaugă un nou element. Dacă cheia există deja, elementul existent își schimbă valoarea.</p>
     <h2 class="subtitle">Obținerea elementelor</h2>
     <p class="paragraph">Pentru a obține un element după cheie, se folosește metoda get(), căreia i se furnizează cheia elementului:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;dict&nbsp;=&nbsp;new&nbsp;Map([["red",&nbsp;"roșu"],&nbsp;["green",&nbsp;"verde"],&nbsp;["blue",&nbsp;"albastru"]]);<br>console.log(dict.get("red"));&nbsp;&nbsp;//&nbsp;roșu&nbsp;închis<br>console.log(dict.get("violet"));&nbsp;&nbsp;//&nbsp;undefined</code></pre>
     </div>
     <p class="paragraph">Dacă map nu conține un element cu cheia specificată, metoda returnează undefined.</p>
     <p class="paragraph">Pentru a evita returnarea valorii undefined, putem verifica existența elementului după cheie cu ajutorul metodei has(). Dacă elementul există după cheie, metoda returnează true, în caz contrar se returnează false:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;dict&nbsp;=&nbsp;new&nbsp;Map([["red",&nbsp;"roșu"],&nbsp;["green",&nbsp;"verde"],&nbsp;["blue",&nbsp;"albastru"]]);<br>console.log(dict.has("red"));&nbsp;&nbsp;//&nbsp;true<br>console.log(dict.has("violet"));&nbsp;&nbsp;//&nbsp;false<br><br>if(dict.has("red"))&nbsp;console.log(dict.get("red"));&nbsp;&nbsp;&nbsp;//&nbsp;roșu&nbsp;închis</code></pre>
     </div>
     <h2 class="subtitle">Ștergerea elementelor</h2>
     <p class="paragraph">Pentru a șterge un singur element după cheie, se folosește metoda delete():</p>
     <div class="code-inline">
      <pre><code>const&nbsp;dict&nbsp;=&nbsp;new&nbsp;Map([["red",&nbsp;"roșu"],&nbsp;["green",&nbsp;"verde"],&nbsp;["blue",&nbsp;"albastru"]]);<br>dict.delete("red");&nbsp;&nbsp;<br>console.log(dict);&nbsp;&nbsp;//&nbsp;Map(2){"green"&nbsp;=&gt;&nbsp;"verde",&nbsp;"blue"&nbsp;=&gt;&nbsp;"albastru"}</code></pre>
     </div>
     <p class="paragraph">Pentru a șterge toate elementele, se utilizează metoda clear():</p>
     <div class="code-inline">
      <pre><code>const&nbsp;dict&nbsp;=&nbsp;new&nbsp;Map([["red",&nbsp;"roșu"],&nbsp;["green",&nbsp;"verde"],&nbsp;["blue",&nbsp;"albastru"]]);<br>dict.clear();<br>console.log(dict);&nbsp;&nbsp;//&nbsp;Map(0){}</code></pre>
     </div>
     <h2 class="subtitle">Parcurgerea elementelor</h2>
     <p class="paragraph">Pentru a parcurge elementele, se folosește metoda forEach:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;dict&nbsp;=&nbsp;new&nbsp;Map([["red",&nbsp;"roșu"],&nbsp;["green",&nbsp;"verde"],&nbsp;["blue",&nbsp;"albastru"]]);<br>dict.forEach(function(value,&nbsp;key,&nbsp;map){<br>&nbsp;&nbsp;&nbsp;console.log(key,&nbsp;":",&nbsp;value);<br>})</code></pre>
     </div>
     <p class="paragraph">Metoda forEach primește o funcție de callback ca parametru, care are trei parametri. Primul și al doilea parametru sunt, în ordine, valoarea și cheia elementului curent, iar al treilea parametru este obiectul Map parcurs.</p>
     <p class="paragraph">Output-ul în consolă pentru acest exemplu este:</p>
     <div class="code-inline">
      <pre><code>red&nbsp;:&nbsp;roșu<br>green&nbsp;:&nbsp;verde<br>blue&nbsp;:&nbsp;albastru</code></pre>
     </div>
     <p class="paragraph">De asemenea, pentru a parcurge un obiect Map se poate folosi și un ciclu, de exemplu, un ciclu for...of:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;dict&nbsp;=&nbsp;new&nbsp;Map([["red",&nbsp;"roșu"],&nbsp;["green",&nbsp;"verde"],&nbsp;["blue",&nbsp;"albastru"]]);<br><br>for&nbsp;(item&nbsp;of&nbsp;dict)&nbsp;{<br>&nbsp;&nbsp;&nbsp;console.log(item[0],&nbsp;":",&nbsp;item[1]);<br>}</code></pre>
     </div>
     <p class="paragraph">Fiecare element din Map este plasat în variabila item, care, la rândul ei, reprezintă un array. Primul element al acestui array este cheia, iar al doilea element este valoarea elementului.</p>
     <p class="paragraph">De asemenea, obiectul Map are două metode suplimentare: keys() permite parcurgerea doar a cheilor, iar values() permite parcurgerea valorilor elementelor. Ambele metode returnează iteratori, astfel încât pentru a parcurge cheile și valorile separat, se poate utiliza, de asemenea, un ciclu for...of:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;dict&nbsp;=&nbsp;new&nbsp;Map([["red",&nbsp;"roșu"],&nbsp;["green",&nbsp;"verde"],&nbsp;["blue",&nbsp;"albastru"]]);<br><br>for&nbsp;(item&nbsp;of&nbsp;dict.keys())&nbsp;{<br>&nbsp;&nbsp;&nbsp;console.log(item);<br>}<br>//&nbsp;Output&nbsp;în&nbsp;consolă:<br>//&nbsp;red<br>//&nbsp;green<br>//&nbsp;blue<br><br>for&nbsp;(item&nbsp;of&nbsp;dict.values())&nbsp;{<br>&nbsp;&nbsp;&nbsp;console.log(item);<br>}<br>//&nbsp;Output&nbsp;în&nbsp;consolă:<br>//&nbsp;roșu<br>//&nbsp;verde<br>//&nbsp;albastru</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
