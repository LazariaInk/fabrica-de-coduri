<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4253419731329045"
            crossorigin="anonymous"></script>


  <link rel="canonical" th:href="${canonicalUrl}" />

    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='JavaScript', activeChapter='10.Colectii si iteratori', activeLesson='6.WeakMap'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">WeakMap</h1>
     <p class="paragraph">WeakMap reprezintă o extensie a colecției Map. Caracteristica distinctivă a WeakMap este că toate elementele sale trebuie să reprezinte obiecte. În același timp, cheile trebuie să fie obiecte.</p>
     <h2 class="subtitle">Crearea WeakMap</h2>
     <p class="paragraph">Trebuie menționat că obiectul WeakMap nu suportă iterarea.</p>
     <div class="code-inline">
      <pre th:utext="'// WeakMap gol<br/>const weakMap1 = new WeakMap();<br/><br/>// WeakMap cu inițializare de date<br/>let key1 = { key: 1 };<br/>let key2 = { key: 2 };<br/>let value1 = { name: &quot;Tom&quot; };<br/>let value2 = { name: &quot;Sam&quot; };<br/><br/>const weakMap2 = new WeakMap([[key1, value1], [key2, value2]]);'"></pre>
     </div>
     <p class="paragraph">Pentru adăugarea de noi obiecte sau modificarea celor existente, se folosește metoda set():</p>
     <div class="code-inline">
      <pre th:utext="'let key1 = {key:1};<br/>let key2 = {key:2};<br/>let value1 = {name: &quot;Tom&quot;};<br/>let value2 = {name: &quot;Sam&quot;};<br/><br/>const weakMap2 = new WeakMap([[key1, value1]]);<br/>weakMap2.set(key2, value2);<br/>weakMap2.set(key1, {name: &quot;Kate&quot;});<br/>console.log(weakMap2.get(key1)); // {name: &quot;Kate&quot;}<br/>console.log(weakMap2.get(key2)); // {name: &quot;Sam&quot;}'"></pre>
     </div>
     <p class="paragraph">Pentru a obține obiecte în funcție de cheie dintr-un WeakMap, se utilizează metoda get():</p>
     <div class="code-inline">
      <pre th:utext="'let key1 = {key:1};<br/>let key2 = {key:2};<br/>let value1 = {name: &quot;Tom&quot;};<br/>let value2 = {name: &quot;Sam&quot;};<br/><br/>const weakMap2 = new WeakMap([[key1, value1], [key2, value2]]);<br/>console.log(weakMap2.get(key1)); // {name: &quot;Tom&quot;}'"></pre>
     </div>
     <p class="paragraph">Pentru a verifica existența unui element în funcție de o anumită cheie, se utilizează metoda has():</p>
     <div class="code-inline">
      <pre th:utext="'let key1 = {key:1},<br/>    key2 = {key:2};<br/>let value1 = {name: &quot;Tom&quot;},<br/>    value2 = {name: &quot;Sam&quot;};<br/><br/>const weakMap2 = new WeakMap([[key1, value1]]);<br/>console.log(weakMap2.has(key1)); // true<br/>console.log(weakMap2.has(key2)); // false'"></pre>
     </div>
     <p class="paragraph">Pentru a șterge un element în funcție de o anumită cheie, se utilizează metoda delete():</p>
     <div class="code-inline">
      <pre th:utext="'let key1 = {key:1},<br/>    key2 = {key:2};<br/>let value1 = {name: &quot;Tom&quot;},<br/>    value2 = {name: &quot;Sam&quot;};<br/><br/>const weakMap2 = new WeakMap([[key1, value1], [key2, value2]]);<br/>console.log(weakMap2.has(key1)); // true<br/>weakMap2.delete(key1);<br/>console.log(weakMap2.has(key1)); // false'"></pre>
     </div>
     <h2 class="subtitle">Referințe slabe</h2>
     <div class="code-inline">
      <pre th:utext="'let jsCode = {code: &quot;js&quot;},<br/>    tsCode = {code: &quot;ts&quot;};<br/>let js = {lang: &quot;JavaScript&quot;},<br/>    ts = {lang: &quot;TypeScript&quot;};<br/>const weakMap = new WeakMap([[jsCode, js], [tsCode, ts]]);<br/><br/>jsCode = null;<br/><br/>console.log(weakMap);<br/>console.log(&quot;Anumite operații&quot;);<br/>const timerId = setTimeout(function(){<br/>    console.log(weakMap);<br/>    clearTimeout(timerId);<br/>}, 30000);'">  </pre>
     </div>
     <div class="code-inline">
      <pre th:utext="'jsCode = null;'"> </pre>
     </div>
     <div class="code-inline">
      <pre th:utext="'let jsCode = {code: &quot;js&quot;},<br/>    tsCode = {code: &quot;ts&quot;};<br/>let js = {lang: &quot;JavaScript&quot;},<br/>    ts = {lang: &quot;TypeScript&quot;};<br/>const map = new Map([[jsCode, js], [tsCode, ts]]);<br/><br/>jsCode = null;<br/><br/>console.log(map);<br/>console.log(&quot;Anumite operații&quot;);<br/>const timerId = setTimeout(function(){<br/>    console.log(map);<br/>    clearTimeout(timerId);<br/>}, 30000);'"></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
