<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4253419731329045"
            crossorigin="anonymous"></script>


  <link rel="canonical" th:href="${canonicalUrl}" />

    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='JavaScript', activeChapter='13.Lucrul cu Formulare', activeLesson='1.Lucrul cu Formulare'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Lucrul cu Formulare</h1>
     <h2 class="subtitle">Formulare și Elementele lor</h2>
     <p class="paragraph">Unul dintre modurile de interacțiune cu utilizatorii sunt formularele HTML. De exemplu, dacă dorim să obținem anumite informații de la utilizator, putem defini pe o pagină web un formular care va conține câmpuri text pentru introducerea informațiilor și un buton pentru trimiterea acestora. Și după introducerea datelor, putem prelucra informațiile introduse.</p>
     <p class="paragraph">Pentru crearea unui formular se utilizează elementul &lt;form&gt;:</p>
     <div class="code-inline">
      <pre><code>&lt;form&nbsp;id="search"&nbsp;name="search"&gt;<br>&lt;/form&gt;</code></pre>
     </div>
     <p class="paragraph">În JavaScript, formularul este reprezentat de obiectul HtmlFormElement. După crearea formularului, ne putem referi la el în diferite moduri.</p>
     <h2 class="subtitle">Obținerea Formularului</h2>
     <p class="paragraph">Primul mod implică adresarea directă după numele formularului:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;searchForm&nbsp;=&nbsp;document.search;</code></pre>
     </div>
     <p class="paragraph">Al doilea mod constă în adresarea la colecția de formulare a documentului - colecția forms și căutarea în aceasta a formularului dorit:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;searchForm1&nbsp;=&nbsp;document.forms["search"];&nbsp;&nbsp;&nbsp;//&nbsp;după&nbsp;nume<br>const&nbsp;searchForm2&nbsp;=&nbsp;document.forms[0];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;după&nbsp;index</code></pre>
     </div>
     <p class="paragraph">Al treilea mod este obținerea formularelor prin metodele standard pentru căutarea elementelor după id, tag sau selector. De exemplu:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;formById&nbsp;=&nbsp;document.getElementById("search");<br>const&nbsp;formByName&nbsp;=&nbsp;document.getElementsByName("search")[0];<br>const&nbsp;formBySelector&nbsp;=&nbsp;document.querySelector("form");</code></pre>
     </div>
     <h2 class="subtitle">Proprietăți și Metode ale Formularelor</h2>
     <p class="paragraph">Formularul are mai multe proprietăți, dintre care voi menționa principalele:</p>
     <ul class="enumeration">
      <li>name: numele formularului</li>
      <li>elements: colecția de elemente ale formularului</li>
      <li>length: numărul de elemente ale formularului</li>
      <li>action: valoarea atributului action - adresa de trimitere a formularului</li>
      <li>method: valoarea atributului method - metoda HTTP utilizată pentru trimitere</li>
     </ul>
     <p class="paragraph">De exemplu, să obținem proprietățile formularului:</p>
     <div class="code-inline">
      <pre><code>&lt;!DOCTYPE&nbsp;html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&nbsp;&nbsp;&nbsp;&lt;meta&nbsp;charset="utf-8"&nbsp;/&gt;<br>&nbsp;&nbsp;&nbsp;&lt;title&gt;FDC.COM&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&nbsp;&nbsp;&nbsp;&lt;form&nbsp;id="search"&nbsp;name="search"&nbsp;action="https://google.com/search"&nbsp;method="get"&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type="text"&nbsp;id="key"&nbsp;name="q"&nbsp;/&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type="submit"&nbsp;id="send"&nbsp;name="send"&nbsp;/&gt;<br>&nbsp;&nbsp;&nbsp;&lt;/form&gt;<br>&nbsp;&nbsp;&nbsp;&lt;script&gt;<br>&nbsp;&nbsp;&nbsp;const&nbsp;form&nbsp;=&nbsp;document.getElementById("search");<br>&nbsp;&nbsp;&nbsp;console.log(form.elements);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;HTMLFormControlsCollection(2)&nbsp;[input,&nbsp;input,&nbsp;q:&nbsp;input,&nbsp;send:&nbsp;input]<br>&nbsp;&nbsp;&nbsp;console.log(form.length);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;2<br>&nbsp;&nbsp;&nbsp;console.log(form.name);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;search<br>&nbsp;&nbsp;&nbsp;console.log(form.action);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;https://google.com/search<br>&nbsp;&nbsp;&nbsp;console.log(form.method);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;get<br>&nbsp;&nbsp;&nbsp;&lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</code></pre>
     </div>
     <p class="paragraph">Dintre metodele formularului, trebuie menționat metoda submit(), care trimite datele formularului pe server, și metoda reset(), care curăță câmpurile formularului:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;form&nbsp;=&nbsp;document.forms["search"];<br>form.submit();<br>form.reset();</code></pre>
     </div>
     <h2 class="subtitle">Elementele Formularelor</h2>
     <p class="paragraph">Formularul poate conține diferite elemente HTML de intrare: input, textarea, button, select, etc. Fiecare dintre aceste elemente are propriul tip JavaScript:</p>
     <div class="image-container">
      <img th:src="@{/images/JavaScript/13.Lucrul%20cu%20Formulare/1.Lucrul%20cu%20Formulare/images/image1.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">Pentru a obține elementele unui formular, putem folosi trei metode:</p>
     <p class="paragraph">1. Utilizarea metodelor standard getElementById(), getElementsByClassName(), getElementsByTagName(), getElementsByName(), querySelector() și querySelectorAll() pentru căutarea elementelor, respectiv, după id, clasă, tag, nume sau selector. De exemplu, luăm formularul definit anterior și obținem câmpul său de intrare:</p>
     <div class="code-inline">
      <pre><code>//&nbsp;obținem&nbsp;elementul&nbsp;după&nbsp;id="key"<br>const&nbsp;keyField&nbsp;=&nbsp;document.getElementById("key");<br>console.log(keyField);</code></pre>
     </div>
     <p class="paragraph">2. Utilizarea proprietății elements a formularului corespunzător. De exemplu:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;form&nbsp;=&nbsp;document.getElementById("search");<br>&nbsp;&nbsp;&nbsp;//&nbsp;obținerea&nbsp;câmpului&nbsp;după&nbsp;index<br>&nbsp;&nbsp;&nbsp;const&nbsp;keyField&nbsp;=&nbsp;form.elements[0];<br>&nbsp;&nbsp;&nbsp;console.log(keyField);<br>&nbsp;&nbsp;&nbsp;//&nbsp;obținerea&nbsp;aceluiași&nbsp;câmp,&nbsp;dar&nbsp;prin&nbsp;nume<br>&nbsp;&nbsp;&nbsp;const&nbsp;keyField2&nbsp;=&nbsp;form.elements["q"];<br>&nbsp;&nbsp;&nbsp;console.log(keyField2);</code></pre>
     </div>
     <p class="paragraph">3. Sau folosind numele formularului și al elementului. De exemplu:</p>
     <div class="code-inline">
      <pre><code>//&nbsp;câmpul&nbsp;q&nbsp;pe&nbsp;formularul&nbsp;search<br>&nbsp;&nbsp;&nbsp;const&nbsp;keyField&nbsp;=&nbsp;document.search.q;<br>&nbsp;&nbsp;&nbsp;console.log(keyField);</code></pre>
     </div>
     <h2 class="subtitle">Proprietățile Elementelor Formularelor</h2>
     <p class="paragraph">Toate acestea au o serie de proprietăți și metode comune. La fel ca și formularul, elementele de formă au proprietatea name, prin care se poate obține valoarea atributului name. O altă proprietate importantă este value, care permite obținerea sau modificarea valorii câmpului:</p>
     <div class="code-inline">
      <pre><code>&lt;form&nbsp;name="search"&gt;<br>&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type="text"&nbsp;name="key"&nbsp;value="hello&nbsp;world"&gt;&lt;/input&gt;<br>&nbsp;&nbsp;&nbsp;&lt;input&nbsp;type="submit"&nbsp;name="send"&gt;&lt;/input&gt;<br>&lt;/form&gt;<br>&lt;script&gt;<br>const&nbsp;form&nbsp;=&nbsp;document.getElementById("search");<br>//&nbsp;obținerea&nbsp;câmpului&nbsp;formularului&nbsp;după&nbsp;nume<br>const&nbsp;keyField&nbsp;=&nbsp;form.elements["key"];<br>//&nbsp;obținerea&nbsp;valorii&nbsp;câmpului<br>console.log(keyField.value);<br>//&nbsp;setarea&nbsp;valorii&nbsp;câmpului<br>keyField.value&nbsp;=&nbsp;"Enter&nbsp;a&nbsp;string";<br>&lt;/script&gt;</code></pre>
     </div>
     <p class="paragraph">Proprietatea type permite obținerea tipului câmpului de intrare. Aceasta poate fi fie numele tag-ului elementului (de exemplu, textarea), fie valoarea atributului type pentru elementele input.</p>
     <div class="code-inline">
      <pre><code>const&nbsp;form&nbsp;=&nbsp;document.getElementById("search");<br>//&nbsp;obținerea&nbsp;câmpului&nbsp;formularului&nbsp;după&nbsp;nume<br>const&nbsp;keyField&nbsp;=&nbsp;form.elements["key"];<br>//&nbsp;obținerea&nbsp;valorii&nbsp;câmpului<br>console.log(keyField.type);&nbsp;//&nbsp;text</code></pre>
     </div>
     <p class="paragraph">Dintre metodele disponibile, se pot distinge metodele focus() (care stabilește focusul pe element) și blur() (care înlătură focusul de pe element):</p>
     <div class="code-inline">
      <pre><code>const&nbsp;searchForm&nbsp;=&nbsp;document.forms["search"];<br>const&nbsp;keyField&nbsp;=&nbsp;searchForm.elements["key"];<br>keyField.focus();</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
