<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='JavaScript', activeChapter='24.IndexDB API', activeLesson='6.Actualizarea obiectelor din depozit'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Actualizarea obiectelor din depozit</h1>
     <p class="paragraph">Metoda put() a interfeței IDBObjectStore actualizează o înregistrare în baza de date sau inserează o nouă înregistrare, dacă elementul dat încă nu există.</p>
     <div class="code-inline">
      <pre><code>put(item)<br>put(item,&nbsp;key)</code></pre>
     </div>
     <p class="paragraph">Primul parametru - item reprezintă valoarea care este actualizată sau adăugată în baza de date. Al doilea parametru, opțional, key reprezintă cheia după care trebuie să actualizeze/adauge obiectul.</p>
     <p class="paragraph">Metoda put() returnează un obiect IDBRequest. În cazul unei actualizări/adaugări de succes, la obiectul IDBRequest se declanșează evenimentul success, iar proprietatea sa result va conține obiectul cu cheia specificată. În caz de eroare, se generează evenimentul error împreună cu o excepție de tip DOMException. Pentru a gestiona aceste evenimente, se pot folosi, respectiv, proprietățile onsuccess și onerror.</p>
     <p class="paragraph">De exemplu, să presupunem că depozitul users în baza de date test conține următoarele obiecte:</p>
     <div class="code-inline">
      <pre><code>[<br>&nbsp;&nbsp;&nbsp;{&nbsp;"name":&nbsp;"Tom",&nbsp;"age":&nbsp;39,&nbsp;"id":&nbsp;1},<br>&nbsp;&nbsp;&nbsp;{&nbsp;"name":&nbsp;"Bob",&nbsp;"age":&nbsp;43,&nbsp;"id":&nbsp;2},<br>&nbsp;&nbsp;&nbsp;{&nbsp;"name":&nbsp;"Sam",&nbsp;"age":&nbsp;28,&nbsp;"id":&nbsp;3}<br>]</code></pre>
     </div>
     <p class="paragraph">De exemplu, să actualizăm obiectul din depozitul "users", care are cheia egală cu 1:</p>
     <div class="code-inline">
      <pre><code>const&nbsp;request&nbsp;=&nbsp;indexedDB.open("test",&nbsp;5);&nbsp;//&nbsp;ne&nbsp;conectăm&nbsp;la&nbsp;baza&nbsp;de&nbsp;date&nbsp;test<br><br>//&nbsp;la&nbsp;crearea&nbsp;sau&nbsp;modificarea&nbsp;versiunii&nbsp;bazei&nbsp;de&nbsp;date,&nbsp;creăm&nbsp;în&nbsp;ea&nbsp;un&nbsp;depozit&nbsp;users<br>request.onupgradeneeded&nbsp;=&nbsp;(event)&nbsp;=&gt;&nbsp;{<br>&nbsp;&nbsp;&nbsp;const&nbsp;db&nbsp;=&nbsp;event.target.result;&nbsp;&nbsp;//&nbsp;obținem&nbsp;baza&nbsp;de&nbsp;date<br>&nbsp;&nbsp;&nbsp;//&nbsp;cheia&nbsp;este&nbsp;proprietatea&nbsp;id,&nbsp;și&nbsp;este&nbsp;autoincrementată<br>&nbsp;&nbsp;&nbsp;db.createObjectStore("users",&nbsp;{&nbsp;keyPath:&nbsp;"id",&nbsp;autoIncrement:&nbsp;true&nbsp;});<br>};<br>//&nbsp;la&nbsp;deschiderea&nbsp;bazei&nbsp;de&nbsp;date&nbsp;modificăm&nbsp;în&nbsp;depozitul&nbsp;users&nbsp;1&nbsp;obiect<br>request.onsuccess&nbsp;=&nbsp;(event)&nbsp;=&gt;&nbsp;{<br>&nbsp;&nbsp;&nbsp;const&nbsp;db&nbsp;=&nbsp;event.target.result;&nbsp;&nbsp;//&nbsp;obținem&nbsp;baza&nbsp;de&nbsp;date<br>&nbsp;&nbsp;&nbsp;const&nbsp;transaction&nbsp;=&nbsp;db.transaction(["users"],&nbsp;"readwrite");&nbsp;//&nbsp;creăm&nbsp;o&nbsp;tranzacție<br>&nbsp;&nbsp;&nbsp;const&nbsp;userStore&nbsp;=&nbsp;transaction.objectStore("users");&nbsp;&nbsp;&nbsp;//&nbsp;obținem&nbsp;depozitul&nbsp;users<br>&nbsp;&nbsp;&nbsp;//&nbsp;obținem&nbsp;obiectul&nbsp;cu&nbsp;id=1<br>&nbsp;&nbsp;&nbsp;const&nbsp;getRequest&nbsp;=&nbsp;userStore.get(1);&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;getRequest.onsuccess&nbsp;=&nbsp;()&nbsp;=&gt;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;user&nbsp;=&nbsp;getRequest.result;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(user);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;schimbăm&nbsp;valorile&nbsp;proprietăților<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user.name&nbsp;=&nbsp;"Tomas";<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user.age&nbsp;=&nbsp;22;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;actualizăm&nbsp;valorile<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;updateRequest&nbsp;=&nbsp;userStore.put(user);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;updateRequest.onsuccess&nbsp;=&nbsp;()&nbsp;=&gt;&nbsp;&nbsp;console.log("Data&nbsp;successfully&nbsp;updated");<br>&nbsp;&nbsp;&nbsp;};<br>&nbsp;&nbsp;&nbsp;getRequest.onerror&nbsp;=&nbsp;(e)&nbsp;=&gt;&nbsp;&nbsp;console.log(e.target.error.message);&nbsp;//&nbsp;afișăm&nbsp;mesajul&nbsp;de&nbsp;eroare<br>};</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
