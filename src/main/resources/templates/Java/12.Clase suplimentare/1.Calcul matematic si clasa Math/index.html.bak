<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='Java', activeChapter='12.Clase suplimentare', activeLesson='1.Calcul matematic si clasa Math'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Calcul matematicși clasa Math</h1>
     <p class="paragraph">Pentru efectuarea diferitelor operațiuni matematice în Java, în pachetul java.lang este definită clasa Math. Să analizăm metodele sale de bază:</p>
     <ul class="enumeration">
      <li>abs(double value): returnează valoarea absolută a argumentului value</li>
     </ul>
     <div class="code-inline">
      <pre><code>double&nbsp;result&nbsp;=&nbsp;Math.abs(-13.5);&nbsp;//&nbsp;13.5</code></pre>
     </div>
     <ul class="enumeration">
      <li>acos(double value): returnează arccosinusul valorii value. Parametrul value trebuie să aibă o valoare între -1 și 1</li>
     </ul>
     <div class="code-inline">
      <pre><code>double&nbsp;result&nbsp;=&nbsp;Math.acos(1);&nbsp;//&nbsp;0.0</code></pre>
     </div>
     <ul class="enumeration">
      <li>asin(double value): returnează arcsinusul valorii value. Parametrul value trebuie să aibă o valoare între -1 și 1</li>
      <li>atan(double value): returnează arctangenta valorii value</li>
      <li>cbrt(double value): returnează rădăcina cubică a valorii value</li>
     </ul>
     <div class="code-inline">
      <pre><code>double&nbsp;result&nbsp;=&nbsp;Math.cbrt(27);&nbsp;//&nbsp;3</code></pre>
     </div>
     <ul class="enumeration">
      <li>ceil(double value): returnează cel mai mic număr întreg cu virgulă mobilă care nu este mai mic decât value</li>
     </ul>
     <div class="code-inline">
      <pre><code>double&nbsp;result&nbsp;=&nbsp;Math.ceil(2.34);&nbsp;//&nbsp;3</code></pre>
     </div>
     <ul class="enumeration">
      <li>cos(double d): returnează cosinusul unghiului d</li>
      <li>cosh(double d): returnează cosinusul hiperbolic al unghiului d</li>
      <li>exp(double d): returnează baza logaritmului natural ridicată la puterea d</li>
      <li>floor(double d): returnează cel mai mare număr întreg care nu este mai mare decât d</li>
     </ul>
     <div class="code-inline">
      <pre><code>double&nbsp;result&nbsp;=&nbsp;Math.floor(2.56);&nbsp;//&nbsp;2</code></pre>
     </div>
     <ul class="enumeration">
      <li>floorDiv(int a, int b): returnează rezultatul divizării întregi a lui a la b</li>
     </ul>
     <div class="code-inline">
      <pre><code>System.out.println(Math.floorDiv(1,&nbsp;2));&nbsp;//&nbsp;0<br>System.out.println(Math.floorDiv(7,&nbsp;2));&nbsp;//&nbsp;3<br>System.out.println(Math.floorDiv(9,&nbsp;2));&nbsp;//&nbsp;4</code></pre>
     </div>
     <ul class="enumeration">
      <li>log(double a): returnează logaritmul natural al numărului a</li>
      <li>log1p(double d): returnează logaritmul natural al numărului (d + 1)</li>
      <li>log10(double d): returnează logaritmul zecimal al numărului d</li>
      <li>max(double a, double b): returnează numărul maxim dintre a și b</li>
      <li>min(double a, double b): returnează numărul minim dintre a și b</li>
      <li>pow(double a, double b): returnează numărul a ridicat la puterea b</li>
      <li>random(): returnează un număr aleatoriu între 0.0 și 1.0</li>
      <li>rint(double value): returnează un număr de tip double care reprezintă cel mai apropiat număr întreg de valoarea value</li>
     </ul>
     <div class="code-inline">
      <pre><code>System.out.println(Math.rint(2));&nbsp;//&nbsp;2.0<br>System.out.println(Math.rint(2.3));&nbsp;//&nbsp;2.0<br>System.out.println(Math.rint(2.5));&nbsp;//&nbsp;2.0<br>System.out.println(Math.rint(2.5001));&nbsp;//&nbsp;3.0<br>System.out.println(Math.rint(2.8));&nbsp;//&nbsp;3.0</code></pre>
     </div>
     <ul class="enumeration">
      <li>round(double d): returnează numărul d rotunjit la cel mai apropiat număr întreg</li>
     </ul>
     <div class="code-inline">
      <pre><code>System.out.println(Math.round(2.3));&nbsp;//&nbsp;2<br>System.out.println(Math.round(2.5));&nbsp;//&nbsp;3<br>System.out.println(Math.round(2.5001));&nbsp;//&nbsp;3<br>System.out.println(Math.round(2.8));&nbsp;//&nbsp;3</code></pre>
     </div>
     <ul class="enumeration">
      <li>scalb(double value, int factor): returnează produsul dintre numărul value și 2 la puterea factor</li>
     </ul>
     <div class="code-inline">
      <pre><code>System.out.println(Math.scalb(5,&nbsp;3));&nbsp;//&nbsp;5*2*2*2&nbsp;=&nbsp;40<br>System.out.println(Math.scalb(3,&nbsp;4));&nbsp;//&nbsp;3*2*2*2*2&nbsp;=&nbsp;48</code></pre>
     </div>
     <ul class="enumeration">
      <li>signum(double value): returnează 1 dacă valoarea value este pozitivă și -1 dacă este negativă. Dacă value este 0, returnează 0</li>
     </ul>
     <div class="code-inline">
      <pre><code>System.out.println(Math.signum(2.3));&nbsp;//&nbsp;1<br>System.out.println(Math.signum(-2.3));&nbsp;//&nbsp;-1</code></pre>
     </div>
     <ul class="enumeration">
      <li>sin(double value): returnează sinusul unghiului value</li>
      <li>sinh(double value): returnează sinusul hiperbolic al unghiului value</li>
      <li>sqrt(double value): returnează rădăcina pătrată a numărului value</li>
     </ul>
     <div class="code-inline">
      <pre><code>double&nbsp;result1&nbsp;=&nbsp;Math.sqrt(16);&nbsp;//&nbsp;4</code></pre>
     </div>
     <ul class="enumeration">
      <li>tan(double value): returnează tangenta unghiului value</li>
      <li>tanh(double value): returnează tangenta hiperbolică a unghiului value</li>
      <li>toDegrees(double value): convertește radianii în grade și toRadians(double value) convertește gradele în radiani</li>
     </ul>
     <div class="code-inline">
      <pre><code>System.out.println(Math.toDegrees(3.14159));&nbsp;//&nbsp;180<br>System.out.println(Math.toRadians(90));&nbsp;//&nbsp;1,57079....</code></pre>
     </div>
     <p class="paragraph">Clasa Math definește, de asemenea, două constante: Math.E și Math.PI. De exemplu, calculăm aria unui cerc:</p>
     <div class="code-inline">
      <pre><code>import&nbsp;java.util.Scanner;<br><br>public&nbsp;class&nbsp;Program&nbsp;{<br>&nbsp;<br>&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scanner&nbsp;in&nbsp;=&nbsp;new&nbsp;Scanner(System.in);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print("Introduceți&nbsp;raza&nbsp;cercului:&nbsp;");<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;radius&nbsp;=&nbsp;in.nextInt();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;area&nbsp;=&nbsp;Math.round(Math.PI&nbsp;*&nbsp;Math.pow(radius,&nbsp;2));<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.printf("Aria&nbsp;cercului&nbsp;cu&nbsp;raza&nbsp;%d&nbsp;este&nbsp;egală&nbsp;cu&nbsp;%d&nbsp;\n",&nbsp;radius,&nbsp;area);<br>&nbsp;&nbsp;&nbsp;}<br>}</code></pre>
     </div>
     <p class="paragraph">Rezultatul în consolă:</p>
     <div class="code-inline">
      <pre><code>Introduceți&nbsp;raza&nbsp;cercului:&nbsp;10<br>Aria&nbsp;cercului&nbsp;cu&nbsp;raza&nbsp;10&nbsp;este&nbsp;egală&nbsp;cu&nbsp;314</code></pre>
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
