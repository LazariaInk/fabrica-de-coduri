<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4253419731329045"
            crossorigin="anonymous"></script>


  <link rel="canonical" th:href="${canonicalUrl}" />

    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='Java', activeChapter='1.Introducere in Java', activeLesson='1.Limbajul de programare Java'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lectii/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Limbajul de programare Java</h1>
     <p class="paragraph">În prezent, limbajul Java este unul dintre cele mai răspândite și populare limbaje de programare. Prima versiune a limbajului a apărut încă în 1996 în cadrul companiei Sun Microsystems, care ulterior a fost preluată de Oracle. Java a fost conceput ca un limbaj de programare universal, care poate fi utilizat pentru diverse tipuri de sarcini.</p>
     <p class="paragraph">Până în prezent, Java a parcurs un drum lung, fiind lansate multe versiuni diferite. Versiunea curentă este Java 22, care a fost lansată în martie 2024. De asemenea, Java a evoluat dintr-un simplu limbaj universal într-o întreagă platformă și ecosistem, care reunește diverse tehnologii folosite pentru o gamă largă de sarcini: de la crearea de aplicații desktop până la dezvoltarea de portaluri și servicii web de mari dimensiuni.</p>
     <p class="paragraph">În plus, limbajul Java este utilizat activ pentru crearea de software pentru o multitudine de dispozitive: PC-uri obișnuite, tablete, smartphone-uri și telefoane mobile, ba chiar și pentru electrocasnice. Este suficient să ne amintim de popularitatea sistemului de operare mobil Android, pentru care majoritatea programelor sunt scrise în Java.</p>
     <h2 class="subtitle">Caracteristici ale Java</h2>
     <p class="paragraph">Caracteristica principală a limbajului Java este că codul său este mai întâi transformat într-un byte-code special, independent de platformă. Apoi, acest byte-code este executat de mașina virtuală JVM (Java Virtual Machine).</p>
     <p class="paragraph">În acest sens, Java diferă de limbajele interpretate standard, cum ar fi PHP sau Perl, al căror cod este executat direct de interpret. În același timp, Java nu este nici un limbaj pur compilat, ca C sau C++.</p>
     <p class="paragraph">Această arhitectură asigură portabilitatea și compatibilitatea multiplatformă a programelor Java, astfel încât acestea pot fi executate fără recompilare pe diverse platforme - Windows, Linux, Mac OS etc.</p>
     <p class="paragraph">Pentru fiecare platformă poate exista o implementare proprie a mașinii virtuale JVM, dar toate pot executa același cod.</p>
     <p class="paragraph">Java este un limbaj cu sintaxă similară cu C și se aseamănă din acest punct de vedere cu C/C++ și C#. Prin urmare, dacă sunteți familiarizat cu unul dintre aceste limbaje, veți învăța Java mai ușor.</p>
     <p class="paragraph">O altă caracteristică importantă a Java este că suportă colectarea automată a deșeurilor (garbage collection). Aceasta înseamnă că nu trebuie să eliberați manual memoria de obiectele utilizate anterior, cum este necesar în C++, deoarece garbage collector-ul va face acest lucru automat pentru voi.</p>
     <p class="paragraph">Java este un limbaj orientat pe obiecte. Suportă polimorfismul, moștenirea și tipizarea statică. Abordarea orientată pe obiecte permite rezolvarea problemelor legate de construirea de aplicații mari, dar în același timp flexibile, scalabile și extensibile.</p>
     <h2 class="subtitle">Oracle JDK, OpenJDK și alte JDK</h2>
     <p class="paragraph">Pentru a dezvolta în limbajul de programare Java, avem nevoie de un set special de unelte, numit JDK sau Java Development Kit. Totuși, trebuie menționat că există diferite implementări ale JDK, deși toate folosesc același limbaj - Java. Cele mai populare două implementări sunt Oracle JDK și OpenJDK.</p>
     <p class="paragraph">Oracle JDK este dezvoltat în întregime de compania Oracle. OpenJDK, pe de altă parte, este un proiect open-source, dezvoltat de comunitatea dezvoltatorilor Java, precum și de mai multe companii, inclusiv Oracle, Red Hat și altele.</p>
     <p class="paragraph">Diferențele majore se referă la licențiere și suport. Conform licenței Oracle JDK, acesta poate fi utilizat gratuit pentru uz personal, precum și pentru dezvoltarea, testarea și demonstrarea aplicațiilor.</p>
     <p class="paragraph">În alte cazuri (de exemplu, pentru suport), este necesară o licență comercială sub formă de abonament. În schimb, OpenJDK este complet gratuit.</p>
     <p class="paragraph">Din punct de vedere funcțional, setul de caracteristici al Oracle JDK și OpenJDK nu ar trebui să difere semnificativ. Totuși, există observații privind performanța, care sugerează că Oracle JDK poate funcționa puțin mai rapid decât OpenJDK.</p>
     <p class="paragraph">În plus, unii dezvoltatori menționează că OpenJDK ar putea fi mai predispus la bug-uri, în timp ce Oracle JDK este considerat mai stabil. În plus, Oracle garantează actualizări pentru o anumită perioadă de timp, în timp ce pentru OpenJDK, actualizările pot fi incerte.</p>
     <p class="paragraph">De asemenea, merită menționat că există și alte implementări de la diverse companii. De exemplu, Microsoft oferă propria sa implementare. Aceasta poate fi instalată implicit pe unele versiuni de Windows și poate fi găsită pe Windows în folderul C:\Program Files\Microsoft.</p>
     <p class="paragraph">Pentru acest ghid, nu contează ce folosiți - OpenJDK, JDK de la Oracle, Microsoft sau de la alt furnizor.</p>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lectii/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
