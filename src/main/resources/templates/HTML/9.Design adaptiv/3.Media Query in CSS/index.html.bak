<!doctype html>
<html lang="ro" xmlns:th="http://www.w3.org/1999/xhtml">
 <head>
    <link rel="icon" type="image/png" href="/nume-aplicatie/images/favicon.png">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-7Q2536ZKL2"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };
      gtag('consent', 'default', {
        'wait_for_update': 500,
        'region': ['RO'],
        'ad_storage': 'denied',
        'analytics_storage': 'denied',
        'ad_user_data': 'denied',
        'ad_personalization': 'denied'
      });
      gtag('js', new Date());
      gtag('config', 'G-7Q2536ZKL2');
    </script>


  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title th:text="${lesson.title}">Lesson</title>
  <link rel="stylesheet" th:href="@{/css/styles.css}">
  <style>body { background: #ffffff; }</style>
 </head>
 <body th:with="activeTopic='HTML', activeChapter='9.Design adaptiv', activeLesson='3.Media Query in CSS'">
  <button class="mobile-sidebar-toggle" onclick="toggleMobileSidebar()">☰</button>
  <div th:replace="~{fragments/nav :: nav}"></div>
  <div class="top-nav">
   <th:block th:each="topic : ${topics}">
    <a th:href="@{'/lectii/topic/' + ${topic.id}}" th:text="${topic.name}" th:classappend="${topic.id} == ${activeTopicId} ? 'active' : ''"> </a>
   </th:block>
  </div>
  <div class="layout">
   <div class="mobile-sidebar" id="mobileSidebar">
    <button class="close-btn" onclick="toggleSidebar()">✖</button>
    <ul class="chapter-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-title" onclick="toggleChapter(this)">
        <strong th:text="${chapter.title}"></strong> <span class="arrow">▼</span>
       </div>
       <ul class="lesson-list">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </div>
   <aside class="sidebar">
    <ul class="sidebar-list">
     <th:block th:each="chapter : ${chapters}">
      <li class="chapter-item" th:classappend="${chapter.id} == ${activeChapterId} ? 'open' : ''">
       <div class="chapter-toggle" onclick="toggleLessons(this)">
        <span th:text="${chapter.title}">Chapter</span>
       </div>
       <ul class="lesson-list hidden">
        <th:block th:each="lesson : ${chapter.lessons}">
         <li><a th:href="@{'/lessons/' +
    ${#strings.toLowerCase(#strings.replace(chapter.topic.name, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(chapter.title, ' ', '-'))} + '/' +
    ${#strings.toLowerCase(#strings.replace(lesson.title, ' ', '-'))} }" th:text="${lesson.title}" th:classappend="${lesson.id} == ${activeLessonId} ? 'active' : ''"> </a></li>
        </th:block>
       </ul></li>
     </th:block>
    </ul>
   </aside>
   <main class="content">
    <div class="document-container">
     <h1 class="main-title">Media Query în CSS</h1>
     <p class="paragraph">Un alt element important în construirea designului adaptiv sunt regulile Media Query, care permit definirea stilului în funcție de dimensiunile browserului utilizatorului.</p>
     <p class="paragraph">În CSS2 exista deja o soluție sub forma regulii media, care permite specificarea dispozitivului pentru care se folosește stilul respectiv:</p>
     <div class="code-inline">
      <pre><code>&lt;html&gt;<br>&lt;head&gt;<br>&lt;title&gt;&nbsp;Pagină&nbsp;web&nbsp;adaptivă&nbsp;&lt;/title&gt;<br>&lt;link&nbsp;media="handheld"&nbsp;rel="stylesheet"&nbsp;href="mobile.css"&gt;<br>&lt;link&nbsp;media="screen"&nbsp;rel="stylesheet"&nbsp;href="desktop.css"&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>......................</code></pre>
     </div>
     <p class="paragraph">Regula media="handheld" indică faptul că stilurile din mobile.css vor fi aplicate dispozitivelor mobile, în timp ce regula media="screen" se aplică browserelor desktop.</p>
     <p class="paragraph">Totuși, multe browsere mobile moderne consideră implicit că pagina este destinată desktopurilor, astfel încât aplică în orice caz regula media="screen". De aceea, nu ar trebui să ne bazăm pe această soluție.</p>
     <p class="paragraph">Pentru a rezolva această problemă, în CSS3 a fost introdus mecanismul CSS3 Media Query. De exemplu, pentru a aplica stilul doar dispozitivelor mobile putem scrie astfel:</p>
     <div class="code-inline">
      <pre><code>&lt;html&gt;<br>&lt;head&gt;<br>&lt;title&gt;&nbsp;Pagină&nbsp;web&nbsp;adaptivă&nbsp;&lt;/title&gt;<br>&lt;meta&nbsp;name="viewport"&nbsp;content="width=device-width"&gt;<br>&lt;link&nbsp;rel="stylesheet"&nbsp;type="text/css"&nbsp;href="desktop.css"&nbsp;/&gt;<br>&lt;link&nbsp;rel="stylesheet"&nbsp;type="text/css"&nbsp;media="(max-device-width:480px)"&nbsp;href="mobile.css"&nbsp;/&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>................................</code></pre>
     </div>
     <p class="paragraph">Valoarea atributului media (max-device-width:480px) ne spune că stilurile din fișierul mobile.css vor fi aplicate acelor dispozitive a căror lățime maximă a ecranului este de 480 de pixeli - adică acestea sunt de fapt dispozitive mobile.</p>
     <p class="paragraph">Cu ajutorul cuvântului cheie and putem combina condițiile, de exemplu:</p>
     <div class="code-inline">
      <pre><code>&lt;link&nbsp;rel="stylesheet"&nbsp;type="text/css"&nbsp;media="(min-width:481px)&nbsp;and&nbsp;(max-width:768px)"&nbsp;href="mobile.css"&nbsp;/&gt;</code></pre>
     </div>
     <p class="paragraph">Acest stil va fi aplicat dacă lățimea browserului se află în intervalul de la 481 la 768 de pixeli.</p>
     <p class="paragraph">Cu ajutorul directivei @import putem defini un fișier css și importa în el stiluri pentru anumite dispozitive:</p>
     <div class="code-inline">
      <pre><code>@import&nbsp;url(desktop.css):<br>@import&nbsp;url(tablet.css)&nbsp;(min-device-width:481px)&nbsp;and&nbsp;(max-device-width:768):<br>@import&nbsp;url(mobile.css)&nbsp;(max-device-width:480px):</code></pre>
     </div>
     <p class="paragraph">De asemenea, putem să nu împărțim stilurile pe fișiere, ci să folosim regulile CSS3 Media Query într-un singur fișier css:</p>
     <div class="code-inline">
      <pre><code>body&nbsp;{<br>background-color:&nbsp;red;<br>}<br>/*Dacă&nbsp;restul&nbsp;stilurilor*/<br>@media&nbsp;(max-device-width:480px){<br>body&nbsp;{<br>background-color:&nbsp;blue;<br>}<br>/*Dacă&nbsp;restul&nbsp;stilurilor*/<br>}</code></pre>
     </div>
     <p class="paragraph">Funcții aplicabile în CSS3 Media Query:</p>
     <ul class="enumeration">
      <li>aspect-ratio: raportul dintre lățimea și înălțimea zonei de afișare (browserului)</li>
      <li>device-aspect-ratio: raportul dintre lățimea și înălțimea ecranului dispozitivului</li>
      <li>max-width/min-width și max-height/min-height: lățimea și înălțimea maximă și minimă a zonei de afișare (browserului)</li>
      <li>max-device-width/min-device-width și max-device-height/min-device-height: lățimea și înălțimea maximă și minimă a ecranului dispozitivului mobil</li>
      <li>orientation: orientarea (portret sau peisaj)</li>
     </ul>
     <p class="paragraph">De exemplu, putem seta stiluri diferite pentru diferite orientări ale dispozitivelor mobile:</p>
     <div class="code-inline">
      <pre><code>/*Stiluri&nbsp;pentru&nbsp;orientarea&nbsp;portret*/<br>@media&nbsp;only&nbsp;screen&nbsp;and&nbsp;(orientation:&nbsp;portrait){<br><br>}<br>/*Stiluri&nbsp;pentru&nbsp;orientarea&nbsp;peisaj*/<br>@media&nbsp;only&nbsp;screen&nbsp;and&nbsp;(orientation:&nbsp;landscape){<br><br>}</code></pre>
     </div>
     <p class="paragraph">Astfel, schimbăm doar definiția stilurilor în funcție de dispozitiv, iar stilurile css propriu-zise rămân aceleași pe care le folosim pentru crearea site-urilor obișnuite.</p>
     <p class="paragraph">De obicei, la definirea stilurilor se acordă prioritate stilurilor pentru cele mai mici ecrane - așa-numitul abordare Mobile First, deși acest lucru nu este obligatoriu. De exemplu, să definim următoarea pagină web:</p>
     <div class="code-inline">
      <pre><code>&lt;!DOCTYPE&nbsp;html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta&nbsp;charset="utf-8"&gt;<br>&lt;meta&nbsp;name="viewport"&nbsp;content="width=device-width"&gt;<br>&lt;title&gt;&nbsp;Pagină&nbsp;web&nbsp;adaptivă&nbsp;&lt;/title&gt;<br><br>&lt;style&gt;<br>body&nbsp;{<br>background-color:&nbsp;red;<br>}<br>/*&nbsp;pentru&nbsp;tablete&nbsp;și&nbsp;phablete&nbsp;*/<br>@media&nbsp;(min-width:&nbsp;481px)&nbsp;and&nbsp;(max-width:768px)&nbsp;{<br>body&nbsp;{<br>background-color:&nbsp;green;<br>}<br>}<br>/*&nbsp;pentru&nbsp;desktopuri&nbsp;*/<br>@media&nbsp;(min-width:769px)&nbsp;{<br>body&nbsp;{<br>background-color:&nbsp;blue;<br>}<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h2&gt;&nbsp;Pagină&nbsp;web&nbsp;adaptivă&nbsp;&lt;/h2&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</code></pre>
     </div>
     <p class="paragraph">Mai întâi vin stilurile generale, care sunt relevante în primul rând pentru dispozitivele mobile cu ecrane mici. Apoi urmează stilurile pentru dispozitivele cu ecrane de lățime medie: phablete, tablete. Și în continuare vin stilurile pentru desktopuri.</p>
     <p class="paragraph">De exemplu, la emularea unui dispozitiv cu lățimea de 375 de pixeli, pagina va avea culoarea roșie:</p>
     <div class="image-container">
      <img th:src="@{/images/HTML/9.Design%20adaptiv/3.Media%20Query%20in%20CSS/images/image1.png}" alt="" class="responsive-image">
     </div>
     <p class="paragraph">Iar în browserul unui computer obișnuit, pagina va avea culoarea albastră, așa cum este definit în stiluri:</p>
     <div class="image-container">
      <img th:src="@{/images/HTML/9.Design%20adaptiv/3.Media%20Query%20in%20CSS/images/image2.png}" alt="" class="responsive-image">
     </div>
    </div>
   </main>
   <aside class="ad-section">
    <div class="ad-box">
     <p>Google Ad Here</p>
    </div>
    <div class="ad-box">
     <p>Promo: SQL Beginner Guide</p>
    </div>
   </aside>
  </div>
  <div class="lesson-navigation">
   <th:block th:if="${previousLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(previousLesson.title, ' ', '-'))} }" class="nav-button">← Lecția anterioară</a>
   </th:block> <th:block th:if="${nextLesson != null}">
    <a th:href="@{'/lessons/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.topic.name, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.chapter.title, ' ', '-'))} + '/' +
            ${#strings.toLowerCase(#strings.replace(nextLesson.title, ' ', '-'))} }" class="nav-button">Lecția următoare →</a>
   </th:block>
  </div>
  <div th:replace="~{fragments/footer :: footer}"></div>
  <script th:src="@{/js/script.js}" defer></script>
 </body>
</html>
